{"version":3,"file":"index.js","sources":["../../../src/util/html/processHTML.js"],"sourcesContent":["/**\r\n * Processes the given HTML by creating by running a CSS selector query with all matched elements being passed through\r\n * the provided `process` function.\r\n *\r\n * @param {object}                  opts - Options\r\n *\r\n * @param {string}                  opts.html - The HTML to process.\r\n *\r\n * @param {(HTMLElement) => void}   opts.process - The selected element processing function.\r\n *\r\n * @param {string}                  opts.selector - The CSS selector query.\r\n *\r\n * @param {string}                  [opts.containerElement='div'] - Use a specific container element.\r\n *\r\n * @param {boolean}                 [opts.firstMatchOnly=false] - When true `querySelector` is invoked to process the\r\n *        first matching element only.\r\n *\r\n * @param {string}                  [opts.namespaceURI] - The namespace URI of the elements to select.\r\n *\r\n * @returns {string} The processed HTML.\r\n */\r\nexport function processHTML({ html, process, selector, containerElement = 'div', firstMatchOnly = false, namespaceURI })\r\n{\r\n   if (typeof html !== 'string') { throw new TypeError(`processHTML error: 'html' is not a string.`); }\r\n   if (typeof process !== 'function') { throw new TypeError(`processHTML error: 'process' is not a function.`); }\r\n   if (typeof selector !== 'string') { throw new TypeError(`processHTML error: 'selector' is not a string.`); }\r\n\r\n   if (typeof containerElement !== 'string')\r\n   {\r\n      throw new TypeError(`processHTML error: 'containerElement' is not a string.`);\r\n   }\r\n\r\n   if (typeof firstMatchOnly !== 'boolean')\r\n   {\r\n      throw new TypeError(`processHTML error: 'firstMatchOnly' is not a boolean.`);\r\n   }\r\n\r\n   if (namespaceURI !== void 0 && typeof namespaceURI !== 'string')\r\n   {\r\n      throw new TypeError(`processHTML error: 'namespaceURI' is not a string.`);\r\n   }\r\n\r\n   const resolveSelector = namespaceURI ? `${namespaceURI}|${selector}` : selector;\r\n\r\n   const container = document.createElement(containerElement);\r\n   container.innerHTML = html;\r\n\r\n   if (firstMatchOnly)\r\n   {\r\n      const element = container.querySelector(resolveSelector);\r\n      if (element) { process(element); }\r\n   }\r\n   else\r\n   {\r\n      const elements = container.querySelectorAll(resolveSelector);\r\n      if (elements)\r\n      {\r\n         for (const element of elements) { process(element); }\r\n      }\r\n   }\r\n\r\n   return container.innerHTML;\r\n}\r\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,gBAAgB,GAAG,KAAK,EAAE,cAAc,GAAG,KAAK,EAAE,YAAY,EAAE;AACvH;AACA,GAAG,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG,GAAG,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC,CAAC;AACjH,GAAG,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,8CAA8C,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/G;AACA,GAAG,IAAI,OAAO,gBAAgB,KAAK,QAAQ;AAC3C,GAAG;AACH,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,sDAAsD,CAAC,CAAC,CAAC;AACpF,GAAG,CAAC;AACJ;AACA,GAAG,IAAI,OAAO,cAAc,KAAK,SAAS;AAC1C,GAAG;AACH,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,qDAAqD,CAAC,CAAC,CAAC;AACnF,GAAG,CAAC;AACJ;AACA,GAAG,IAAI,YAAY,KAAK,MAAM,IAAI,OAAO,YAAY,KAAK,QAAQ;AAClE,GAAG;AACH,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,kDAAkD,CAAC,CAAC,CAAC;AAChF,GAAG,CAAC;AACJ;AACA,GAAG,MAAM,eAAe,GAAG,YAAY,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC;AACnF;AACA,GAAG,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;AAC9D,GAAG,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B;AACA,GAAG,IAAI,cAAc;AACrB,GAAG;AACH,MAAM,MAAM,OAAO,GAAG,SAAS,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;AAC/D,MAAM,IAAI,OAAO,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxC,GAAG,CAAC;AACJ;AACA,GAAG;AACH,MAAM,MAAM,QAAQ,GAAG,SAAS,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AACnE,MAAM,IAAI,QAAQ;AAClB,MAAM;AACN,SAAS,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9D,MAAM,CAAC;AACP,GAAG,CAAC;AACJ;AACA,GAAG,OAAO,SAAS,CAAC,SAAS,CAAC;AAC9B;;;;"}