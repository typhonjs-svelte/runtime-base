{"version":3,"file":"index.js","sources":["../../../src/util/browser/BrowserSupports.js","../../../src/util/browser/ClipboardAccess.js","../../../src/util/browser/URLParser.js"],"sourcesContent":["/**\r\n * Provides utility methods for checking browser capabilities.\r\n *\r\n * @see https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\r\n * TODO: perhaps add support for various standard media query checks for level 4 & 5.\r\n */\r\nexport class BrowserSupports\r\n{\r\n   /**\r\n    * Check for container query support.\r\n    *\r\n    * @returns {boolean} True if container queries supported.\r\n    */\r\n   static get containerQueries()\r\n   {\r\n      return 'container' in document.documentElement.style;\r\n   }\r\n}\r\n","/**\r\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\r\n *\r\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\r\n * available.\r\n */\r\nexport class ClipboardAccess\r\n{\r\n   /**\r\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\r\n    *\r\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\r\n    * empty string.\r\n    *\r\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\r\n    *\r\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\r\n    */\r\n   static async readText(activeWindow = globalThis)\r\n   {\r\n      let result;\r\n\r\n      if (Object.prototype.toString.call(activeWindow) !== '[object Window]')\r\n      {\r\n         throw new TypeError(`ClipboardAccess.readText error: 'activeWindow' is not a Window or WindowProxy.`);\r\n      }\r\n\r\n      if (activeWindow?.navigator?.clipboard)\r\n      {\r\n         try\r\n         {\r\n            result = await activeWindow.navigator.clipboard.readText();\r\n         }\r\n         catch (err) { /**/ }\r\n      }\r\n\r\n      return result === '' ? void 0 : result;\r\n   }\r\n\r\n   /**\r\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\r\n    * the given text to the clipboard.\r\n    *\r\n    * @param {string}   text - Text to copy to the browser clipboard.\r\n    *\r\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\r\n    *\r\n    * @returns {Promise<boolean>} Copy successful.\r\n    */\r\n   static async writeText(text, activeWindow = globalThis)\r\n   {\r\n      if (typeof text !== 'string')\r\n      {\r\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\r\n      }\r\n\r\n      if (Object.prototype.toString.call(activeWindow) !== '[object Window]')\r\n      {\r\n         throw new TypeError(`ClipboardAccess.writeText error: 'activeWindow' is not a Window or WindowProxy.`);\r\n      }\r\n\r\n      let success = false;\r\n\r\n      if (activeWindow?.navigator?.clipboard)\r\n      {\r\n         try\r\n         {\r\n            await activeWindow.navigator.clipboard.writeText(text);\r\n            success = true;\r\n         }\r\n         catch (err) { /**/ }\r\n      }\r\n      else if (activeWindow?.document?.execCommand instanceof Function)\r\n      {\r\n         const textArea = activeWindow.document.createElement('textarea');\r\n\r\n         // Place in the top-left corner of screen regardless of scroll position.\r\n         textArea.style.position = 'fixed';\r\n         textArea.style.top = '0';\r\n         textArea.style.left = '0';\r\n\r\n         // Ensure it has a small width and height. Setting to 1px / 1em\r\n         // doesn't work as this gives a negative w/h on some browsers.\r\n         textArea.style.width = '2em';\r\n         textArea.style.height = '2em';\r\n\r\n         // We don't need padding, reducing the size if it does flash render.\r\n         textArea.style.padding = '0';\r\n\r\n         // Clean up any borders.\r\n         textArea.style.border = 'none';\r\n         textArea.style.outline = 'none';\r\n         textArea.style.boxShadow = 'none';\r\n\r\n         // Avoid flash of the white box if rendered for any reason.\r\n         textArea.style.background = 'transparent';\r\n\r\n         textArea.value = text;\r\n\r\n         activeWindow.document.body.appendChild(textArea);\r\n         textArea.focus();\r\n         textArea.select();\r\n\r\n         try\r\n         {\r\n            success = activeWindow.document.execCommand('copy');\r\n         }\r\n         catch (err) { /**/ }\r\n\r\n         activeWindow.document.body.removeChild(textArea);\r\n      }\r\n\r\n      return success;\r\n   }\r\n}\r\n","/**\n * Provides a utility function to parse / construct fully qualified URL instances from a URL string.\n */\nexport class URLParser\n{\n   /**\n    * Parses a URL string converting it to a fully qualified URL. If URL is an existing URL instance it is returned\n    * immediately. Optionally you may construct a fully qualified URL from a relative base origin / path or with a\n    * route prefix added to the current location origin.\n    *\n    * @param {object} options - Options.\n    *\n    * @param {string | URL}   options.url - URL string to convert to a URL.\n    *\n    * @param {string}   [options.base] - Optional fully qualified base path for relative URL construction.\n    *\n    * @param {string}   [options.routePrefix] - Optional route prefix to add to location origin for absolute URL strings\n    *        when `base` is not defined.\n    *\n    * @returns {URL | null} Parsed URL or null if `url` is not parsed.\n    */\n   static parse({ url, base, routePrefix })\n   {\n      if (url instanceof URL) { return url; }\n\n      if (typeof url !== 'string') { return null; }\n\n      if (base !== void 0 && typeof base !== 'string') { return null; }\n\n      if (routePrefix !== void 0 && typeof routePrefix !== 'string') { return null; }\n\n      const targetURL = this.#createURL(url);\n\n      // Parse and return already fully qualified `url` string.\n      if (targetURL) { return targetURL; }\n\n      let targetBase;\n\n      // Parse relative url string.\n      if (url.startsWith('./') || url.startsWith('../'))\n      {\n         // Relative from provided `base` or current path.\n         targetBase = base ? base : `${globalThis.location.origin}${globalThis.location.pathname}`;\n      }\n      else\n      {\n         let targetRoutePrefix = '';\n\n         // Relative to current origin, but include any defined route prefix.\n         if (routePrefix)\n         {\n            // Ensure route prefix starts and ends with `/` for proper URL parsing.\n            targetRoutePrefix = routePrefix.startsWith('/') ? routePrefix : `/${routePrefix}`;\n            targetRoutePrefix = targetRoutePrefix.endsWith('/') ? targetRoutePrefix : `${targetRoutePrefix}/`;\n         }\n\n         targetBase = `${globalThis.location.origin}${targetRoutePrefix}`;\n      }\n\n      return this.#createURL(url, targetBase);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Helper to create a URL and catch any exception. Useful until `URL.parse` and `URL.canParse` are more widespread.\n    *\n    * @param {string}   url - URL string.\n    *\n    * @param {string}   base - Base origin / path.\n    *\n    * @returns {URL | null} Valid URL or null.\n    */\n   static #createURL(url, base = '')\n   {\n      try { return new URL(url, base); }\n      catch(err) { return null; }\n   }\n}\n"],"names":[],"mappings":"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"}