{"version":3,"file":"index.js","sources":["../../../src/util/animate/nextAnimationFrame.js"],"sourcesContent":["/**\r\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\r\n * inline style modification amongst other direct animation techniques.\r\n *\r\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\r\n *\r\n * @returns {Promise<number>} Returns time of last `requestAnimationFrame` callback.\r\n */\r\nexport async function nextAnimationFrame(cntr = 1)\r\n{\r\n   if (!Number.isInteger(cntr) || cntr < 1)\r\n   {\r\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\r\n   }\r\n\r\n   let currentTime;\r\n\r\n   // Await count of `rAF` callbacks.\r\n   for (;--cntr >= 0;) { currentTime = await new Promise((resolve) => requestAnimationFrame(resolve)); }\r\n\r\n   return currentTime;\r\n}\r\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,kBAAkB,CAAC,IAAI,GAAG,CAAC;AACjD;AACA,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;AAC1C,GAAG;AACH,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,2EAA2E,CAAC,CAAC,CAAC;AACzG,GAAG,CAAC;AACJ;AACA,GAAG,IAAI,WAAW,CAAC;AACnB;AACA;AACA,GAAG,MAAM,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,WAAW,GAAG,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACxG;AACA,GAAG,OAAO,WAAW,CAAC;AACtB;;;;"}