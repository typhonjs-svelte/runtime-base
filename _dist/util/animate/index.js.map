{"version":3,"file":"index.js","sources":["../../../src/util/animate/nextAnimationFrame.js"],"sourcesContent":["/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nexport async function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,kBAAkB,CAAC,IAAI,GAAG,CAAC;AACjD;AACA,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;AAC1C,GAAG;AACH,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,2EAA2E,CAAC,CAAC,CAAC;AACzG,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AACvC,GAAG,MAAM,EAAE,IAAI,IAAI,CAAC;AACpB,GAAG;AACH,MAAM,WAAW,GAAG,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;AACnF,IAAI;AACJ;AACA,GAAG,OAAO,WAAW,CAAC;AACtB;;;;"}