{"version":3,"file":"index.js","sources":["../../../../../src/svelte/store/reducer/array-object/ObjectEntryStore.js","../../../../../src/svelte/store/reducer/array-object/ArrayObjectStore.js","../../../../../src/svelte/store/reducer/array-object/CrudArrayObjectStore.js"],"sourcesContent":["import { Hashing }   from '#runtime/util';\n\nimport { isObject }  from '#runtime/util/object';\n\n/**\n * Provides a base implementation for store entries in {@link ArrayObjectStore}.\n *\n * In particular providing the required getting / accessor for the 'id' property.\n */\nexport class ObjectEntryStore\n{\n   /**\n    * @type {object}\n    */\n   #data;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<object>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @param {object}   data -\n    */\n   constructor(data = {})\n   {\n      if (!isObject(data)) { throw new TypeError(`'data' is not an object.`); }\n\n      this.#data = data;\n\n      // If an id is missing then add it.\n      if (typeof data.id !== 'string') { this.#data.id = Hashing.uuidv4(); }\n\n      if (!Hashing.isUuidv4(data.id)) { throw new Error(`'data.id' (${data.id}) is not a valid UUIDv4 string.`); }\n   }\n\n   /**\n    * Invoked by ArrayObjectStore to provide custom duplication. Override this static method in your entry store.\n    *\n    * @param {object}   data - A copy of local data w/ new ID already set.\n    *\n    * @param {import('./ArrayObjectStore.js').ArrayObjectStore} arrayStore - The source ArrayObjectStore instance.\n    */\n   static duplicate(data, arrayStore) {}  // eslint-disable-line no-unused-vars\n\n   /**\n    * @returns {object} The object data tracked by this store.\n    * @protected\n    */\n   get _data() { return this.#data; }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {string} The ID attribute in object data tracked by this store.\n    */\n   get id() { return this.#data.id; }\n\n   toJSON()\n   {\n      return this.#data;\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<object>} handler - Callback function that is invoked on update /\n    *        changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);  // add handler to the array of subscribers\n\n      handler(this.#data);                // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * @protected\n    */\n   _updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      const data = this.#data;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\n   }\n}\n","import { DynArrayReducer }    from '#runtime/svelte/store/reducer';\n\nimport {\n   Hashing,\n   Timing }                   from '#runtime/util';\n\nimport {\n   isObject,\n   klona }                    from '#runtime/util/object';\n\nimport {\n   isWritableStore,\n   subscribeIgnoreFirst }     from '#runtime/util/store';\n\nimport { ObjectEntryStore }   from './ObjectEntryStore.js';\n\n/**\n * @template [T=import('./').BaseArrayObjectEntryStore]\n */\nexport class ArrayObjectStore\n{\n   /** @type {T[]} */\n   #data = [];\n\n   /**\n    * @type {Map<string, { store: T, unsubscribe: Function}>}\n    */\n   #dataMap = new Map();\n\n   /**\n    * @type {DynArrayReducer<T>}\n    */\n   #dataReducer;\n\n   /**\n    * @type {boolean}\n    */\n   #manualUpdate;\n\n   /**\n    * @type {T}\n    */\n   #StoreClass;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<T[]>}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {Function}\n    */\n   #updateSubscribersBound;\n\n   /**\n    * @returns {ObjectEntryStore} The default object entry store constructor.\n    */\n   static get EntryStore() { return ObjectEntryStore; }\n\n   /**\n    * @param {import('./').ArrayObjectStoreParams} params -\n    */\n   constructor({ StoreClass, defaultData = [], childDebounce = 250, dataReducer = false, manualUpdate = false } = {})\n   {\n      if (!Number.isInteger(childDebounce) || childDebounce < 0 || childDebounce > 1000)\n      {\n         throw new TypeError(`'childDebounce' must be an integer between and including 0 - 1000.`);\n      }\n\n      if (typeof manualUpdate !== 'boolean') { throw new TypeError(`'manualUpdate' is not a boolean.`); }\n\n      if (!isWritableStore(StoreClass.prototype))\n      {\n         throw new TypeError(`'StoreClass' is not a writable store constructor.`);\n      }\n\n      let hasIDGetter = false;\n\n      // Walk parent prototype chain. Check for descriptor at each prototype level.\n      for (let o = StoreClass.prototype; o; o = Object.getPrototypeOf(o))\n      {\n         const descriptor = Object.getOwnPropertyDescriptor(o, 'id');\n         if (descriptor !== void 0 && descriptor.get !== void 0)\n         {\n            hasIDGetter = true;\n            break;\n         }\n      }\n\n      if (!hasIDGetter)\n      {\n         throw new TypeError(`'StoreClass' does not have a getter accessor for 'id' property.`);\n      }\n\n      if (!Array.isArray(defaultData)) { throw new TypeError(`'defaultData' is not an array.`); }\n\n      this.#manualUpdate = manualUpdate;\n\n      this.#StoreClass = StoreClass;\n\n      if (dataReducer) { this.#dataReducer = new DynArrayReducer({ data: this.#data }); }\n\n      // Prepare a debounced callback that is used for all child store entry subscriptions.\n      this.#updateSubscribersBound = childDebounce === 0 ? this.updateSubscribers.bind(this) :\n       Timing.debounce((data) => this.updateSubscribers(data), childDebounce);\n   }\n\n   /**\n    * Provide an iterator for public access to entry stores.\n    *\n    * @yields {T | void}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#data.length === 0) { return; }\n\n      for (const entryStore of this.#data) { yield entryStore; }\n   }\n\n   /**\n    * @returns {T[]} The internal data array tracked allowing child classes direct access.\n    * @protected\n    */\n   get _data() { return this.#data; }\n\n   /**\n    * @returns {DynArrayReducer<T>} The data reducer.\n    */\n   get dataReducer()\n   {\n      if (!this.#dataReducer)\n      {\n         throw new Error(\n          `'dataReducer' is not initialized; did you forget to specify 'dataReducer' as true in constructor options?`);\n      }\n\n      return this.#dataReducer;\n   }\n\n   /**\n    * @returns {number} The length of all data.\n    */\n   get length() { return this.#data.length; }\n\n   /**\n    * Removes all child store entries.\n    */\n   clearEntries()\n   {\n      for (const storeEntryData of this.#dataMap.values()) { storeEntryData.unsubscribe(); }\n\n      this.#dataMap.clear();\n      this.#data.length = 0;\n\n      this.updateSubscribers();\n   }\n\n   /**\n    * Creates a new store from given data.\n    *\n    * @param {object}   entryData -\n    *\n    * @returns {T} The store\n    */\n   createEntry(entryData = {})\n   {\n      if (!isObject(entryData)) { throw new TypeError(`'entryData' is not an object.`); }\n\n      if (typeof entryData.id !== 'string') { entryData.id = Hashing.uuidv4(); }\n\n      if (this.#data.findIndex((entry) => entry.id === entryData.id) >= 0)\n      {\n         throw new Error(`'entryData.id' (${entryData.id}) already in this ArrayObjectStore instance.`);\n      }\n\n      const store = this.#createStore(entryData);\n\n      this.updateSubscribers();\n\n      return store;\n   }\n\n   /**\n    * Add a new store entry from the given data.\n    *\n    * @param {object}   entryData -\n    *\n    * @returns {T} New store entry instance.\n    */\n   #createStore(entryData)\n   {\n      const store = new this.#StoreClass(entryData, this);\n\n      if (!Hashing.isUuidv4(store.id))\n      {\n         throw new Error(`'store.id' (${store.id}) is not a UUIDv4 compliant string.`);\n      }\n\n      const unsubscribe = subscribeIgnoreFirst(store, this.#updateSubscribersBound);\n\n      this.#data.push(store);\n      this.#dataMap.set(entryData.id, { store, unsubscribe });\n\n      return store;\n   }\n\n   /**\n    * Deletes a given entry store by ID from this world setting array store instance.\n    *\n    * @param {string}  id - ID of entry to delete.\n    *\n    * @returns {boolean} Delete operation successful.\n    */\n   deleteEntry(id)\n   {\n      const result = this.#deleteStore(id);\n\n      if (result) { this.updateSubscribers(); }\n\n      return result;\n   }\n\n   #deleteStore(id)\n   {\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\n\n      const storeEntryData = this.#dataMap.get(id);\n      if (storeEntryData)\n      {\n         storeEntryData.unsubscribe();\n\n         this.#dataMap.delete(id);\n\n         const index = this.#data.findIndex((entry) => entry.id === id);\n         if (index >= 0) { this.#data.splice(index, 1); }\n\n         return true;\n      }\n\n      return false;\n   }\n\n   /**\n    * Duplicates an entry store by the given ID.\n    *\n    * @param {string}   id - UUIDv4 string.\n    *\n    * @returns {*} Instance of StoreClass.\n    */\n   duplicateEntry(id)\n   {\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\n\n      const storeEntryData = this.#dataMap.get(id);\n\n      if (storeEntryData)\n      {\n         const data = klona(storeEntryData.store.toJSON());\n         data.id = Hashing.uuidv4();\n\n         // Allow StoreClass to statically perform any specialized duplication.\n         this.#StoreClass?.duplicate?.(data, this);\n\n         return this.createEntry(data);\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Find an entry in the backing child store array.\n    *\n    * @param {function(T): T|void}  predicate - A predicate function\n    *\n    * @returns {T|void} Found entry in array or undefined.\n    */\n   findEntry(predicate)\n   {\n      return this.#data.find(predicate);\n   }\n\n   /**\n    * Finds an entry store instance by 'id' / UUIDv4.\n    *\n    * @param {string}   id - A UUIDv4 string.\n    *\n    * @returns {T|void} Entry store instance.\n    */\n   getEntry(id)\n   {\n      const storeEntryData = this.#dataMap.get(id);\n      return storeEntryData ? storeEntryData.store : void 0;\n   }\n\n   /**\n    * Sets the children store data by 'id', adds new entry store instances, or removes entries that are no longer in the\n    * update list.\n    *\n    * @param {T[]}   updateList -\n    */\n   set(updateList)\n   {\n      if (!Array.isArray(updateList))\n      {\n         console.warn(`ArrayObjectStore.set warning: aborting set operation as 'updateList' is not an array.`);\n         return;\n      }\n\n      const data = this.#data;\n      const dataMap = this.#dataMap;\n\n      // Create a set of all current entry IDs.\n      const removeIDSet = new Set(dataMap.keys());\n\n      let rebuildIndex = false;\n\n      for (let updateIndex = 0; updateIndex < updateList.length; updateIndex++)\n      {\n         const updateData = updateList[updateIndex];\n\n         const id = updateData.id;\n\n         if (typeof id !== 'string') { throw new Error(`'updateData.id' is not a string.`); }\n\n         const localIndex = data.findIndex((entry) => entry.id === id);\n\n         if (localIndex >= 0)\n         {\n            const localEntry = data[localIndex];\n\n            // Update the entry data.\n            localEntry.set(updateData);\n\n            // Must move to correct position\n            if (localIndex !== updateIndex)\n            {\n               // Remove from current location.\n               data.splice(localIndex, 1);\n\n               if (updateIndex < data.length)\n               {\n                  // Insert at new location.\n                  data.splice(updateIndex, 0, localEntry);\n               }\n               else\n               {\n                  // Local data length is less than update data index; rebuild index.\n                  rebuildIndex = true;\n               }\n            }\n\n            // Delete from removeIDSet as entry is still in local data.\n            removeIDSet.delete(id);\n         }\n         else\n         {\n            this.#createStore(updateData);\n         }\n      }\n\n      if (rebuildIndex)\n      {\n         // Must invoke unsubscribe for all child stores.\n         for (const storeEntryData of dataMap.values()) { storeEntryData.unsubscribe(); }\n\n         data.length = 0;\n         dataMap.clear();\n\n         for (const updateData of updateList) { this.#createStore(updateData); }\n      }\n      else\n      {\n         // Remove entries that are no longer in data.\n         for (const id of removeIDSet) { this.#deleteStore(id); }\n      }\n\n      this.updateSubscribers();\n   }\n\n   toJSON()\n   {\n      return this.#data;\n   }\n\n// -------------------------------------------------------------------------------------------------------------------\n\n   /**\n    * @param {import('svelte/store').Subscriber<T[]>} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this.#data);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers.\n    *\n    * @param {import('./').ArrayObjectUpdateData}  [update] -\n    */\n   updateSubscribers(update)\n   {\n      const updateGate = typeof update === 'boolean' ? update : !this.#manualUpdate;\n\n      if (updateGate)\n      {\n         const subscriptions = this.#subscriptions;\n\n         const data = this.#data;\n\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\n      }\n\n      // This will update the filtered data and `dataReducer` store and forces an update to subscribers.\n      if (this.#dataReducer) { this.#dataReducer.index.update(true); }\n   }\n}\n","import { Hashing }            from '#runtime/util';\n\nimport { isObject }           from '#runtime/util/object';\n\nimport { ArrayObjectStore }   from './ArrayObjectStore.js';\n\n/**\n * @template [T=import('./').BaseArrayObjectEntryStore]\n * @augments {ArrayObjectStore<T>}\n */\nexport class CrudArrayObjectStore extends ArrayObjectStore\n{\n   /** @type {CrudDispatch} */\n   #crudDispatch;\n\n   /** @type {object} */\n   #extraData;\n\n   /**\n    * @param {object}                  [opts] - Optional parameters.\n    *\n    * @param {CrudDispatch}            [opts.crudDispatch] -\n    *\n    * @param {object}                  [opts.extraData] -\n    *\n    * @param {import('./').ArrayObjectStoreParams}  [opts.rest] - Rest of ArrayObjectStore parameters.\n    */\n   constructor({ crudDispatch, extraData, ...rest })\n   {\n      // 'manualUpdate' is set to true if 'crudUpdate' is defined, but can be overridden by `...rest`.\n      super({\n         manualUpdate: typeof crudDispatch === 'function',\n         ...rest,\n      });\n\n      if (crudDispatch !== void 0 && typeof crudDispatch !== 'function')\n      {\n         throw new TypeError(`'crudDispatch' is not a function.`);\n      }\n\n      if (extraData !== void 0 && !isObject(extraData))\n      {\n         throw new TypeError(`'extraData' is not an object.`);\n      }\n\n      this.#crudDispatch = crudDispatch;\n      this.#extraData = extraData ?? {};\n   }\n\n   /**\n    * Removes all child store entries.\n    */\n   clearEntries()\n   {\n      super.clearEntries();\n\n      if (this.#crudDispatch)\n      {\n         this.#crudDispatch({ action: 'clear', ...this.#extraData });\n      }\n   }\n\n   /**\n    * Creates a new store from given data.\n    *\n    * @param {object}   entryData -\n    *\n    * @returns {T} Associated store with entry data.\n    */\n   createEntry(entryData = {})\n   {\n      const store = super.createEntry(entryData);\n\n      if (store && this.#crudDispatch)\n      {\n         this.#crudDispatch({\n            action: 'create',\n            ...this.#extraData,\n            id: store.id,\n            data: store.toJSON()\n         });\n      }\n\n      return store;\n   }\n\n   /**\n    * Deletes a given entry store by ID from this world setting array store instance.\n    *\n    * @param {string}  id - ID of entry to delete.\n    *\n    * @returns {boolean} Delete operation successful.\n    */\n   deleteEntry(id)\n   {\n      const result = super.deleteEntry(id);\n\n      if (result && this.#crudDispatch)\n      {\n         this.#crudDispatch({ action: 'delete', ...this.#extraData, id });\n      }\n\n      return result;\n   }\n\n   /**\n    * Updates subscribers, but provides special handling when WorldSettingArrayStore has an `crudDispatch` function\n    * attached. When the update is an object with a valid UUIDv4 string as the id property the `crudDispatch`\n    * function is invoked with  along with the data payload\n    *\n    * @param {import('./').ArrayObjectUpdateData} [update] -\n    */\n   updateSubscribers(update)\n   {\n      if (this.#crudDispatch && isObject(update) && Hashing.isUuidv4(update.id))\n      {\n         const result = this.#crudDispatch({\n            action: 'update',\n            ...this.#extraData,\n            id: update.id,\n            data: update  // TODO: Consider using klona to clone data.\n         });\n\n         // If the crudDispatch function returns a boolean then invoke 'ArrayObjectStore.updateSubscribers' with it.\n         super.updateSubscribers(typeof result === 'boolean' ? result : update);\n      }\n      else\n      {\n         super.updateSubscribers(update);\n      }\n   }\n}\n\n/**\n * @typedef {import('./').ArrayObjectStoreParams & CrudArrayObjectStoreParamProps} CrudArrayObjectStoreParams\n */\n\n/**\n * @typedef {object} CrudArrayObjectStoreParamProps\n *\n * @property {CrudDispatch}   [crudDispatch] -\n *\n * @property {object}         [extraData] -\n *\n * @internal\n */\n\n/**\n * @typedef {(data: { action: string, id?: string, data?: object }) => boolean} CrudDispatch\n *\n * A function that accepts an object w/ 'action', 'moduleId', 'key' properties and optional 'id' / UUIDv4 string and\n * 'data' property.\n */\n"],"names":[],"mappings":"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"}