{"version":3,"file":"index.js","sources":["../../../../../dynamic-reducer/dist/index.js","../../../../src/svelte/store/reducer/helper/filter/regexObjectQuery.ts","../../../../src/svelte/store/reducer/helper/DynReducerHelper.ts"],"sourcesContent":["class DynReducerUtils {\n    /**\n     * Checks for array equality between two arrays of numbers.\n     *\n     * @param a - Array A\n     *\n     * @param b - Array B\n     *\n     * @returns Arrays are equal.\n     */\n    static arrayEquals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        /* c8 ignore next */\n        if (a === null || b === null) {\n            return false;\n        }\n        /* c8 ignore next */\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let cntr = a.length; --cntr >= 0;) {\n            /* c8 ignore next */\n            if (a[cntr] !== b[cntr]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides a solid string hashing algorithm.\n     *\n     * Sourced from: https://stackoverflow.com/a/52171480\n     *\n     * @param str - String to hash.\n     *\n     * @param seed - A seed value altering the hash.\n     *\n     * @returns Hash code.\n     */\n    static hashString(str, seed = 0) {\n        /* c8 ignore next */\n        if (str === void 0 || str === null) {\n            return 0;\n        }\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n        for (let ch, i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i);\n            h1 = Math.imul(h1 ^ ch, 2654435761);\n            h2 = Math.imul(h2 ^ ch, 1597334677);\n        }\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n    }\n    /**\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\n     *\n     * Currently, objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\n     * case, but it is not common to use objects as keys in Maps.\n     *\n     * @param value - An unknown value to convert to a number.\n     */\n    static hashUnknown(value) {\n        if (value === null || value === void 0) {\n            return 0;\n        }\n        let result = 0;\n        switch (typeof value) {\n            case 'boolean':\n                result = value ? 1 : 0;\n                break;\n            case 'bigint':\n                result = Number(BigInt.asIntN(64, value));\n                break;\n            case 'function':\n                result = this.hashString(value.name);\n                break;\n            case 'number':\n                result = Number.isFinite(value) ? value : 0;\n                break;\n            case 'object':\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\n                break;\n            case 'string':\n                result = this.hashString(value);\n                break;\n            case 'symbol':\n                result = this.hashString(Symbol.keyFor(value));\n                break;\n        }\n        return result;\n    }\n    /**\n     * @param target -\n     *\n     * @param Prototype -\n     *\n     * @returns target constructor function has Prototype.\n     */\n    static hasPrototype(target, Prototype) {\n        /* c8 ignore next */\n        if (typeof target !== 'function') {\n            return false;\n        }\n        if (target === Prototype) {\n            return true;\n        }\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n            if (proto === Prototype) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n     *\n     * @param data - Data to verify as iterable.\n     *\n     * @returns Is data iterable.\n     */\n    static isIterable(data) {\n        return data !== null && data !== void 0 && typeof data === 'object' &&\n            typeof data[Symbol.iterator] === 'function';\n    }\n}\n\n/**\n * Provides the `derived` API for all dynamic reducers.\n */\nclass AdapterDerived {\n    #hostData;\n    #DerivedReducerCtor;\n    #parentIndex;\n    #derived = new Map();\n    #destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param parentIndex - Any associated parent index API.\n     *\n     * @param DerivedReducerCtor - The default derived reducer constructor function.\n     */\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\n        this.#hostData = hostData;\n        this.#parentIndex = parentIndex;\n        this.#DerivedReducerCtor = DerivedReducerCtor;\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new derived reducer.\n     *\n     * @param options - Options defining the new derived reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create(options) {\n        if (this.#destroyed || this.#hostData === null) {\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\n        }\n        let name;\n        let rest = {};\n        let ctor;\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DerivedReducerCtor;\n        }\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\n            ctor = options;\n        }\n        else if (typeof options === 'object' && options !== null) {\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\n        }\n        else {\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\n        }\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\n        }\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\n        this.#derived.set(name, derivedReducer);\n        // If the instantiated derived reducer has an `initialize` method then invoke it.\n        if (this.#hasInitialize(derivedReducer)) {\n            const { filters, sort, ...optionsRest } = rest;\n            derivedReducer.initialize(optionsRest);\n        }\n        return derivedReducer;\n    }\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.destroy();\n        }\n        this.#derived.clear();\n    }\n    /**\n     * Deletes and destroys a derived reducer by name.\n     *\n     * @param name - Name of the derived reducer.\n     *\n     * @returns true if an element in the Map existed and has been removed, or false if the element does not exist.\n     */\n    delete(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\n        }\n        const reducer = this.#derived.get(name);\n        if (reducer) {\n            reducer.destroy();\n        }\n        return this.#derived.delete(name);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.clear();\n        this.#hostData = null;\n        this.#parentIndex = null;\n        this.#destroyed = true;\n    }\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     *\n     * @returns Any associated derived reducer.\n     */\n    get(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\n        }\n        return this.#derived.get(name);\n    }\n    /**\n     * Type guard to check for presence of `initialize` method.\n     *\n     * @param instance - Instance to check.\n     */\n    #hasInitialize(instance) {\n        return typeof instance?.initialize === 'function';\n    }\n    /**\n     * Updates all managed derived reducer indexes.\n     *\n     * @param [force=false] - Force an update to subscribers.\n     */\n    update(force = false) {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.index.update(force);\n        }\n    }\n}\n\nclass AdapterFilters {\n    #filtersData;\n    #indexUpdate;\n    #mapUnsubscribe = new Map();\n    constructor(indexUpdate, filtersAdapter) {\n        this.#indexUpdate = indexUpdate;\n        this.#filtersData = filtersAdapter;\n        Object.freeze(this);\n    }\n    get length() { return this.#filtersData.filters.length; }\n    *[Symbol.iterator]() {\n        if (this.#filtersData.filters.length === 0) {\n            return;\n        }\n        for (const entry of this.#filtersData.filters) {\n            yield { ...entry };\n        }\n    }\n    add(...filters) {\n        /**\n         * Tracks the number of filters added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const filter of filters) {\n            const filterType = typeof filter;\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\n            }\n            let data;\n            let subscribeFn;\n            if (filterType === 'function') {\n                data = {\n                    id: void 0,\n                    filter: filter,\n                    weight: 1\n                };\n                subscribeFn = filter.subscribe;\n            }\n            else if (filterType === 'object') {\n                if ('filter' in filter) {\n                    if (typeof filter.filter !== 'function') {\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                    }\n                    if (filter.weight !== void 0 && (typeof filter.weight !== 'number' ||\n                        filter.weight < 0 || filter.weight > 1)) {\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                    }\n                    data = {\n                        id: filter.id !== void 0 ? filter.id : void 0,\n                        filter: filter.filter,\n                        weight: filter.weight || 1\n                    };\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n                }\n                else {\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                }\n                /* c8 ignore next 5 */ // TS type guard for `else` conditional.\n            }\n            else {\n                throw new TypeError(`AdapterFilters error: 'filter' is not defined.`);\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#filtersData.filters.findIndex((value) => {\n                return data.weight < value.weight;\n            });\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#filtersData.filters.splice(index, 0, data);\n            }\n            else // push to end of filters.\n             {\n                this.#filtersData.filters.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn(this.#indexUpdate);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same filter is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.filter)) {\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n        if (subscribeCount < filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n    clear() {\n        this.#filtersData.filters.length = 0;\n        // Unsubscribe from all filters with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#indexUpdate();\n    }\n    remove(...filters) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of filters) {\n            // Handle the case that the filter may either be a function or a filter entry / object.\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n                data.filter : void 0;\n            if (!actualFilter) {\n                continue;\n            }\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\n                    this.#filtersData.filters.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\n                    let unsubscribe;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualFilter);\n                    }\n                }\n            }\n        }\n        // Update the index a filter was removed.\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n    removeBy(callback) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            // Reverse remove boolean to properly filter / remove this filter.\n            return !remove;\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n    removeById(...ids) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            let remove = 0;\n            for (const id of ids) {\n                remove |= (data.id === id ? 1 : 0);\n            }\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n            if (!!remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array filter method.\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate(true);\n        }\n    }\n}\n\n/**\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\n * applied.\n */\nclass AdapterIndexer {\n    derivedAdapter;\n    filtersData;\n    hostData;\n    hostUpdate;\n    indexData;\n    sortData;\n    sortFn;\n    destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param hostUpdate - Host update function invoked on index updates.\n     *\n     * @param [parentIndexer] - Any associated parent index API.\n     *\n     * @returns Indexer adapter instance.\n     */\n    constructor(hostData, hostUpdate, parentIndexer) {\n        this.hostData = hostData;\n        this.hostUpdate = hostUpdate;\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\n    }\n    /**\n     * @returns Returns whether the index is active.\n     */\n    get active() {\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\n            this.indexData.parent?.active === true;\n    }\n    /**\n     * @returns Returns length of reduced index.\n     */\n    get length() {\n        return this.indexData.index ? this.indexData.index.length : 0;\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n     * is set to null. Set calculated new hash value to the index adapter hash value.\n     *\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\n     *\n     * @param oldIndex - Old index array.\n     *\n     * @param oldHash - Old index hash value.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    calcHashUpdate(oldIndex, oldHash, force = false) {\n        // Use force if a boolean otherwise default to false.\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n        let newHash = null;\n        const newIndex = this.indexData.index;\n        if (newIndex) {\n            for (let cntr = newIndex.length; --cntr >= 0;) {\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n            }\n        }\n        this.indexData.hash = newHash;\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\n            this.hostUpdate();\n        }\n    }\n    /**\n     * Destroys all resources.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.hostData = null;\n        this.indexData.index = null;\n        this.indexData.hash = null;\n        this.indexData.reversed = false;\n        this.indexData.parent = null;\n        this.destroyed = true;\n    }\n    /**\n     * Store associated filter and sort data that are constructed after the indexer.\n     *\n     * @param filtersData - Associated AdapterFilters instance.\n     *\n     * @param sortData - Associated AdapterSort instance.\n     *\n     * @param derivedAdapter - Associated AdapterDerived instance.\n     */\n    initAdapters(filtersData, sortData, derivedAdapter) {\n        this.filtersData = filtersData;\n        this.sortData = sortData;\n        this.derivedAdapter = derivedAdapter;\n        this.sortFn = this.createSortFn();\n    }\n}\n\nclass AdapterSort {\n    #sortData;\n    #indexUpdate;\n    #unsubscribe;\n    constructor(indexUpdate, sortData) {\n        this.#indexUpdate = indexUpdate;\n        this.#sortData = sortData;\n        Object.freeze(this);\n    }\n    clear() {\n        const oldCompareFn = this.#sortData.compareFn;\n        this.#sortData.compareFn = null;\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        // Only update index if an old compare function is set.\n        if (typeof oldCompareFn === 'function') {\n            this.#indexUpdate(true);\n        }\n    }\n    set(sort) {\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        let compareFn;\n        let subscribeFn;\n        switch (typeof sort) {\n            case 'function':\n                compareFn = sort;\n                subscribeFn = sort.subscribe;\n                break;\n            case 'object':\n                // Early out if sort is null / noop.\n                if (sort === null) {\n                    break;\n                }\n                if (typeof sort.compare !== 'function') {\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\n                }\n                compareFn = sort.compare;\n                subscribeFn = sort.compare.subscribe ?? sort.subscribe;\n                break;\n        }\n        if (typeof compareFn === 'function') {\n            this.#sortData.compareFn = compareFn;\n        }\n        else {\n            const oldCompareFn = this.#sortData.compareFn;\n            this.#sortData.compareFn = null;\n            // Update index if the old compare function exists.\n            if (typeof oldCompareFn === 'function') {\n                this.#indexUpdate();\n            }\n            return;\n        }\n        if (typeof subscribeFn === 'function') {\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\n            // Ensure that unsubscribe is a function.\n            if (typeof this.#unsubscribe !== 'function') {\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n            }\n        }\n        else {\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n            // Only manually update the index if there is no subscriber functionality.\n            this.#indexUpdate(true);\n        }\n    }\n}\n\nclass IndexerAPI {\n    #indexData;\n    /**\n     * Provides a getter to determine if the index is active.\n     */\n    active;\n    /**\n     * Provides length of reduced / indexed elements.\n     */\n    length;\n    /**\n     * Manually invoke an update of the index.\n     *\n     * @param force - Force update to any subscribers.\n     */\n    update;\n    constructor(adapterIndexer) {\n        this.#indexData = adapterIndexer.indexData;\n        this.update = adapterIndexer.update.bind(adapterIndexer);\n        // Defines getters on the public API to get the index hash, active state, and index length.\n        Object.defineProperties(this, {\n            active: { get: () => adapterIndexer.active },\n            length: { get: () => adapterIndexer.length }\n        });\n        Object.freeze(this);\n    }\n    get hash() {\n        return this.#indexData.hash;\n    }\n    *[Symbol.iterator]() {\n        const indexData = this.#indexData;\n        if (!indexData.index) {\n            return;\n        }\n        const reversed = indexData.reversed;\n        const length = indexData.index.length;\n        if (reversed) {\n            for (let cntr = length; --cntr >= 0;) {\n                yield indexData.index[cntr];\n            }\n        }\n        else {\n            for (let cntr = 0; cntr < length; cntr++) {\n                yield indexData.index[cntr];\n            }\n        }\n    }\n}\n\n/**\n */\nclass ArrayIndexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => {\n            const data = this.hostData?.[0];\n            const dataA = data?.[a];\n            const dataB = data?.[b];\n            /* c8 ignore next */\n            return dataA && dataB ? this.sortData.compareFn(dataA, dataB) : 0;\n        };\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const array = this.hostData?.[0];\n        if (!array) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const adjustedIndex of parentIndex) {\n                const value = array[adjustedIndex];\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(adjustedIndex);\n                }\n            }\n        }\n        else {\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(array[cntr])) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(cntr);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const array = this.hostData?.[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && Array.isArray(array)) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...Array(array.length).keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides a public API for managing derived reducers.\n */\nclass DerivedListAPI {\n    clear;\n    create;\n    delete;\n    destroy;\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n *\n * Note: That you should never directly create an instance of a derived reducer, but instead use the\n * {@link DynArrayReducerDerived.initialize} function to set up any initial state in a custom derived reducer.\n *\n * @typeParam T `unknown` - Type of data. Defaults to `unknown` to enforce type safety when no type is specified.\n */\nclass DynArrayReducerDerived {\n    #array;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscribers = [];\n    #destroyed = false;\n    /**\n     * @param array - Data host array.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     *\n     * @typeParam T `unknown` - Type of data.\n     *\n     * @private\n     */\n    constructor(array, parentIndex, options) {\n        this.#array = array;\n        this.#index = new ArrayIndexer(this.#array, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedListAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        const { filters, sort } = options;\n        if (filters !== void 0) {\n            if (!DynReducerUtils.isIterable(filters)) {\n                throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n            }\n            this.filters.add(...filters);\n        }\n        if (sort !== void 0) {\n            if (typeof sort !== 'function' && (typeof sort !== 'object' || sort === null)) {\n                throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n            }\n            this.sort.set(sort);\n        }\n    }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API; is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * @returns Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Returns the main data items or indexed items length.\n     */\n    get length() {\n        const array = this.#array?.[0];\n        return this.#index.active ? this.index.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Returns current reversed state.\n     */\n    get reversed() { return this.#index.indexData.reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#index.indexData.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#array = null;\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscribers.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @param [optionsRest] - Any additional custom options passed beyond {@link DynReducer.Options.Common}.\n     *\n     * @protected\n     */\n    initialize(optionsRest) { }\n    /**\n     * Provides an iterator for data stored in DynArrayReducerDerived.\n     *\n     * @returns Iterator for data stored in DynArrayReducerDerived.\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array?.[0] ?? null;\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedArrayReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler);\n            handler(this); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n            this.#subscribers[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n *\n * _Note:_ In constructing a DynArrayReducer instance that arrays are treated as a special case. When an array is passed\n * in as `data` in the constructor it will be used as the host array and not copied. All non-array iterables otherwise\n * create a new array / copy.\n *\n * _Note:_\n * - The default type `unknown` ensures stricter type checking, preventing unintended operations on the data.\n * - If the type of data is known, explicitly specify the generic type to improve clarity and maintainability:\n *\n * @example\n * ```ts\n * // Using external array data as reducer host data.\n * const data = ['a', 'b', 'c'];\n * const reducer = new DynArrayReducer<string>(data);\n *\n * // Add new data externally.\n * data.push('d');\n *\n * // Update the index.\n * reducer.index.update();\n * ```\n *\n * @example\n * ```ts\n * // Explicit type specification.\n * const reducer = new DynArrayReducer<string>(['a', 'b', 'c']);\n * ```\n *\n * @example\n * ```ts\n * // Using the default type.\n * const reducer = new DynArrayReducer(); // Defaults to DynArrayReducer<unknown>\n * ```\n *\n * @typeParam T `unknown` - Type of data. Defaults to `unknown` to enforce type safety when no type is specified.\n */\nclass DynArrayReducer {\n    #array = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscribers = [];\n    #destroyed = false;\n    /**\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     *\n     * @typeParam T `unknown` - Type of data.\n     */\n    constructor(data) {\n        let dataIterable;\n        let filters;\n        let sort;\n        if (data === null) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && Symbol.iterator in data) {\n            dataIterable = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\n            }\n            dataIterable = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataIterable) {\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n        }\n        this.#index = new ArrayIndexer(this.#array, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedListAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke `update` via {@link DynArrayReducer.index} with `true` to recalculate\n     * the index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API; is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * @returns Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Returns the main data items or indexed items length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Returns current reversed state.\n     */\n    get reversed() { return this.#index.indexData.reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#index.indexData.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#array = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscribers.length = 0;\n        this.#filters.clear();\n        this.#sort.clear();\n        this.#index.destroy();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. Depending on the consumer\n     * of `dynamic-reducer` this may be utilized allowing child classes to avoid implementing the constructor.\n     *\n     * @param [optionsRest] - Any additional custom options passed beyond {@link DynReducer.Options.Common}.\n     *\n     * @protected\n     */\n    /* c8 ignore next */\n    initialize(optionsRest) { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param [replace=false] - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const array = this.#array[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!Array.isArray(array) || replace) {\n            if (data) {\n                this.#array[0] = Array.isArray(data) ? data : [...data];\n            }\n        }\n        else {\n            if (data) {\n                // Remove all entries in internal data. This will not replace any initially set array.\n                array.length = 0;\n                // Add all new data.\n                array.push(...data);\n            }\n            else {\n                this.#array[0] = null;\n            }\n        }\n        // Force clear the index and always rebuild.\n        this.#index.indexData.index = null;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynArrayReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler);\n            handler(this); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n            this.#subscribers[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynArrayReducer.\n     *\n     * @returns Iterator for data stored in DynArrayReducer.\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n}\n\n/**\n */\nclass MapIndexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => {\n            const data = this.hostData?.[0];\n            const dataA = data?.get(a);\n            const dataB = data?.get(b);\n            /* c8 ignore next */\n            return dataA && dataB ? this.sortData.compareFn(dataA, dataB) : 0;\n        };\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const map = this.hostData?.[0];\n        if (!map) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const key of parentIndex) {\n                const value = map.get(key);\n                include = true;\n                /* c8 ignore next */\n                if (value === undefined) {\n                    continue;\n                }\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        else {\n            for (const key of map.keys()) {\n                include = true;\n                const value = map.get(key);\n                /* c8 ignore next */\n                if (value === void 0) {\n                    continue;\n                }\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const map = this.hostData?.[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && map instanceof Map) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...map.keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides a public API for managing derived reducers.\n */\nclass DerivedMapAPI {\n    clear;\n    create;\n    delete;\n    destroy;\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for Maps / DynMapReducer.\n *\n * Note: That you should never directly create an instance of a derived reducer, but instead use the\n * {@link DynMapReducerDerived.initialize} function to set up any initial state in a custom derived reducer.\n *\n * @typeParam K `unknown` - Key type. Defaults to `unknown` to enforce type safety when no type is specified.\n *\n * @typeParam T `unknown` - Type of data. Defaults to `unknown` to enforce type safety when no type is specified.\n */\nclass DynMapReducerDerived {\n    #map;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscribers = [];\n    #destroyed = false;\n    /**\n     * @param map - Data host Map.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     *\n     * @typeParam K `unknown` - Key type.\n     *\n     * @typeParam T `unknown` - Type of data.\n     *\n     * @private\n     */\n    constructor(map, parentIndex, options) {\n        this.#map = map;\n        this.#index = new MapIndexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedMapAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        const { filters, sort } = options;\n        if (filters !== void 0) {\n            if (!DynReducerUtils.isIterable(filters)) {\n                throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n            }\n            this.filters.add(...filters);\n        }\n        if (sort !== void 0) {\n            if (typeof sort !== 'function' && (typeof sort !== 'object' || sort === null)) {\n                throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n            }\n            this.sort.set(sort);\n        }\n    }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API; is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * @returns Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Returns the main data items or indexed items length.\n     */\n    get length() {\n        const map = this.#map?.[0];\n        return this.#index.active ? this.index.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Returns current reversed state.\n     */\n    get reversed() { return this.#index.indexData.reversed; }\n    /**\n     * @returns Returns the sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#index.indexData.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#map = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscribers.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @param [optionsRest] - Any additional custom options passed beyond {@link DynDataOptions}.\n     *\n     * @protected\n     */\n    initialize(optionsRest) { }\n    /**\n     * Provides an iterator for data stored in DynMapReducerDerived.\n     *\n     * @returns Iterator for data stored in DynMapReducerDerived.\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map?.[0] ?? null;\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedMapReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler);\n            handler(this); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n            this.#subscribers[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed {@link Map} with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support allowing for a {@link Map} to be treated like an iterable list.\n *\n * _Note:_\n * - The default type `unknown` ensures stricter type checking, preventing unintended operations on the data.\n * - If the type of data is known, explicitly specify the generic type to improve clarity and maintainability:\n *\n * @example\n * ```ts\n * const mapReducer = new DynMapReducer<number, string>(\n *     new Map([\n *         [1, 'banana'],\n *         [2, 'apple'],\n *         [3, 'cherry'],\n *     ])\n * );\n *\n * console.log([...mapReducer]); // Output: ['banana', 'apple', 'cherry']\n *\n * // Sort values alphabetically.\n * mapReducer.sort.set((a, b) => a.localeCompare(b));\n *\n * console.log([...mapReducer]); // Output: ['apple', 'banana', 'cherry']\n * ```\n *\n * @typeParam K `unknown` - Key type. Defaults to `unknown` to enforce type safety when no type is specified.\n *\n * @typeParam T `unknown` - Type of data. Defaults to `unknown` to enforce type safety when no type is specified.\n */\nclass DynMapReducer {\n    #map = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscribers = [];\n    #destroyed = false;\n    /**\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     *\n     * @typeParam K `unknown` - Key type.\n     *\n     * @typeParam T `unknown` - Type of data.\n     */\n    constructor(data) {\n        let dataMap;\n        let filters;\n        let sort;\n        if (data === null) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && data instanceof Map) {\n            dataMap = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\n            }\n            if (data.data instanceof Map) {\n                dataMap = data.data;\n            }\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataMap) {\n            this.#map[0] = dataMap;\n        }\n        this.#index = new MapIndexer(this.#map, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedMapAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynMap.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are performed to the\n     * data externally do invoke `update` via {@link DynMapReducer.index} with `true` to recalculate the  index and\n     * notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API; is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * @returns Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Returns the main data items or indexed items length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Returns current reversed state.\n     */\n    get reversed() { return this.#index.indexData.reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#index.indexData.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#map = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscribers.length = 0;\n        this.#filters.clear();\n        this.#sort.clear();\n        this.#index.destroy();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. Depending on the consumer\n     * of `dynamic-reducer` this may be utilized allowing child classes to avoid implementing the constructor.\n     *\n     * @param [optionsRest] - Any additional custom options passed beyond {@link DynReducer.Options.Common}.\n     *\n     * @protected\n     */\n    /* c8 ignore next */\n    initialize(optionsRest) { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param [replace=false] - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const map = this.#map[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!(map instanceof Map) || replace) {\n            this.#map[0] = data instanceof Map ? data : null;\n        }\n        else if (data instanceof Map && map instanceof Map) {\n            // Create a set of all current entry IDs.\n            const removeKeySet = new Set(map.keys());\n            for (const key of data.keys()) {\n                map.set(key, data.get(key));\n                if (removeKeySet.has(key)) {\n                    removeKeySet.delete(key);\n                }\n            }\n            // Remove entries that are no longer in data.\n            for (const key of removeKeySet) {\n                map.delete(key);\n            }\n        }\n        else if (data === null) {\n            this.#map[0] = null;\n        }\n        // Force clear the index and always rebuild.\n        this.#index.indexData.index = null;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynMapReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        const currentIdx = this.#subscribers.findIndex((entry) => entry === handler);\n        if (currentIdx === -1) {\n            this.#subscribers.push(handler);\n            handler(this); // call handler with current value\n        }\n        // Return unsubscribe function.\n        return () => {\n            const existingIdx = this.#subscribers.findIndex((entry) => entry === handler);\n            if (existingIdx !== -1) {\n                this.#subscribers.splice(existingIdx, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscribers.length; cntr++) {\n            this.#subscribers[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynMapReducer.\n     *\n     * @returns Iterator for data stored in DynMapReducer.\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n\nexport { DynArrayReducer, DynArrayReducerDerived, DynMapReducer, DynMapReducerDerived };\n//# sourceMappingURL=index.js.map\n","import { get, writable }            from 'svelte/store';\r\n\r\nimport { isMinimalWritableStore }   from '#runtime/svelte/store/util';\r\nimport { Strings }                  from '#runtime/util';\r\n\r\nimport {\r\n   isIterable,\r\n   safeAccess }                     from '#runtime/util/object';\r\n\r\nimport type {\r\n   Subscriber,\r\n   Unsubscriber }                   from 'svelte/store';\r\n\r\nimport type { MinimalWritable }     from '#runtime/svelte/store/util';\r\n\r\nimport type { DynReducerHelper }    from '../DynReducerHelper';\r\n\r\n/**\r\n * Creates a filter function to compare objects by a given accessor key against a regex test. The returned function\r\n * is also a writable Svelte store that builds a regex from the stores value.\r\n *\r\n * This filter function can be used w/ a dynamic reducer and bound as a store to input elements.\r\n *\r\n * @param accessors - Property key / accessors to lookup key to compare. To access deeper\r\n *        entries into the object format the accessor string with `.` between entries to walk.\r\n *\r\n * @param [opts] - Optional parameters.\r\n *\r\n * @param [opts.accessWarn=false] - When true warnings will be posted if accessor not retrieved.\r\n *\r\n * @param [opts.caseSensitive=false] - When true regex test is case-sensitive.\r\n *\r\n * @param [opts.store] - Use the provided minimal writable store to instead of creating a default `writable` store.\r\n *\r\n * @returns The query string filter.\r\n */\r\nexport function regexObjectQuery(accessors: string | Iterable<string>, { accessWarn = false, caseSensitive = false,\r\n store }: { accessWarn?: boolean, caseSensitive?: boolean, store?: MinimalWritable<string> } = {}):\r\n  ReturnType<DynReducerHelper.Filters['regexObjectQuery']>\r\n{\r\n   let keyword: string = '';\r\n   let regex: RegExp;\r\n\r\n   if (store !== void 0 && !isMinimalWritableStore(store))\r\n   {\r\n      throw new TypeError(`regexObjectQuery error: 'store' is not a minimal writable store.`);\r\n   }\r\n\r\n   const storeKeyword: MinimalWritable<string> = store ? store : writable(keyword);\r\n\r\n   // If an existing store is provided then set initial values.\r\n   if (store)\r\n   {\r\n      const current: string = get(store);\r\n\r\n      if (typeof current === 'string')\r\n      {\r\n         keyword = Strings.normalize(current);\r\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\r\n      }\r\n      else\r\n      {\r\n         store.set(keyword);\r\n      }\r\n   }\r\n\r\n\r\n   const filterQuery: ReturnType<DynReducerHelper.Filters['regexObjectQuery']> = Object.assign(\r\n      /**\r\n       * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\r\n       * created from the search input element.\r\n       *\r\n       * @param data - Data object to test against regex.\r\n       *\r\n       * @returns Store filter state.\r\n       */\r\n      (data: { [key: string]: any }): boolean =>\r\n      {\r\n         if (keyword === '' || !regex) { return true; }\r\n\r\n         if (isIterable(accessors))\r\n         {\r\n            for (const accessor of accessors)\r\n            {\r\n               const value: any = safeAccess(data, accessor);\r\n               if (typeof value !== 'string')\r\n               {\r\n                  if (accessWarn)\r\n                  {\r\n                     console.warn(`regexObjectQuery warning: could not access string data from '${accessor}'.`);\r\n                  }\r\n\r\n                  continue;\r\n               }\r\n\r\n               if (regex.test(Strings.normalize(value))) { return true; }\r\n            }\r\n\r\n            return false;\r\n         }\r\n         else\r\n         {\r\n            const value: any = safeAccess(data, accessors);\r\n            if (typeof value !== 'string')\r\n            {\r\n               if (accessWarn)\r\n               {\r\n                  console.warn(`regexObjectQuery warning: could not access string data from '${accessors}'.`);\r\n               }\r\n\r\n               return false;\r\n            }\r\n\r\n            return regex.test(Strings.normalize(value));\r\n         }\r\n      },\r\n      {\r\n         /**\r\n          * Create a custom store that changes when the search keyword changes.\r\n          *\r\n          * @param handler - A callback function that accepts strings.\r\n          *\r\n          * @returns Store unsubscribe function.\r\n          */\r\n         subscribe(handler: Subscriber<string>): Unsubscriber\r\n         {\r\n            return storeKeyword.subscribe(handler);\r\n         },\r\n\r\n         /**\r\n          * @param value - A new value for the keyword / regex test.\r\n          */\r\n         set(value: string): void\r\n         {\r\n            if (typeof value === 'string')\r\n            {\r\n               keyword = Strings.normalize(value);\r\n               regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\r\n               storeKeyword.set(keyword);\r\n            }\r\n         }\r\n      }\r\n   );\r\n\r\n   /**\r\n    * Create a custom store that changes when the search keyword changes.\r\n    *\r\n    * @param handler - A callback function that accepts strings.\r\n    *\r\n    * @returns Store unsubscribe function.\r\n    */\r\n   filterQuery.subscribe = (handler: Subscriber<string>): Unsubscriber =>\r\n   {\r\n      return storeKeyword.subscribe(handler);\r\n   };\r\n\r\n   /**\r\n    * @param value - A new value for the keyword / regex test.\r\n    */\r\n   filterQuery.set = (value: string): void =>\r\n   {\r\n      if (typeof value === 'string')\r\n      {\r\n         keyword = Strings.normalize(value);\r\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\r\n         storeKeyword.set(keyword);\r\n      }\r\n   };\r\n\r\n\r\n\r\n   //\r\n   // /**\r\n   //  * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\r\n   //  * created from the search input element.\r\n   //  *\r\n   //  * @param data - Data object to test against regex.\r\n   //  *\r\n   //  * @returns Store filter state.\r\n   //  */\r\n   // const filterQuery: ReturnType<DynReducerHelper.filters['regexObjectQuery']> = function(data: { [key: string]: any }): boolean\r\n   // {\r\n   //    if (keyword === '' || !regex) { return true; }\r\n   //\r\n   //    if (isIterable(accessors))\r\n   //    {\r\n   //       for (const accessor of accessors)\r\n   //       {\r\n   //          const value: any = safeAccess(data, accessor);\r\n   //          if (typeof value !== 'string')\r\n   //          {\r\n   //             if (accessWarn)\r\n   //             {\r\n   //                console.warn(`regexObjectQuery warning: could not access string data from '${accessor}'.`);\r\n   //             }\r\n   //\r\n   //             continue;\r\n   //          }\r\n   //\r\n   //          if (regex.test(Strings.normalize(value))) { return true; }\r\n   //       }\r\n   //\r\n   //       return false;\r\n   //    }\r\n   //    else\r\n   //    {\r\n   //       const value: any = safeAccess(data, accessors);\r\n   //       if (typeof value !== 'string')\r\n   //       {\r\n   //          if (accessWarn)\r\n   //          {\r\n   //             console.warn(`regexObjectQuery warning: could not access string data from '${accessors}'.`);\r\n   //          }\r\n   //\r\n   //          return false;\r\n   //       }\r\n   //\r\n   //       return regex.test(Strings.normalize(value));\r\n   //    }\r\n   // }\r\n   //\r\n   // /**\r\n   //  * Create a custom store that changes when the search keyword changes.\r\n   //  *\r\n   //  * @param handler - A callback function that accepts strings.\r\n   //  *\r\n   //  * @returns Store unsubscribe function.\r\n   //  */\r\n   // filterQuery.subscribe = (handler: Subscriber<string>): Unsubscriber =>\r\n   // {\r\n   //    return storeKeyword.subscribe(handler);\r\n   // };\r\n   //\r\n   // /**\r\n   //  * @param value - A new value for the keyword / regex test.\r\n   //  */\r\n   // filterQuery.set = (value: string): void =>\r\n   // {\r\n   //    if (typeof value === 'string')\r\n   //    {\r\n   //       keyword = Strings.normalize(value);\r\n   //       regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\r\n   //       storeKeyword.set(keyword);\r\n   //    }\r\n   // };\r\n\r\n   return filterQuery;\r\n}\r\n","import * as filters     from './filter';\r\n\r\nimport type {\r\n   MinimalWritable,\r\n   MinimalWritableFn }  from '#runtime/svelte/store/util';\r\n\r\n/**\r\n * Provides helper functions to create dynamic store driven filters and sort functions for dynamic reducers. The\r\n * returned functions are also Svelte stores and can be added to a reducer as well as used as a store.\r\n */\r\nclass DynReducerHelper\r\n{\r\n   private constructor() {}\r\n\r\n   /**\r\n    * Returns the following filter functions:\r\n    * - regexObjectQuery(accessors, options); suitable for object reducers matching one or more property keys /\r\n    *   accessors against the store value as a regex. To access deeper entries into the object format the accessor\r\n    *   string with `.` between entries to walk. Optional parameters include logging access warnings, case sensitivity,\r\n    *   and passing in an existing store.\r\n    *\r\n    * @returns All available filters.\r\n    */\r\n   static get filters(): DynReducerHelper.Filters { return filters; }\r\n}\r\n\r\n/**\r\n * Defines the available resources of {@link DynReducerHelper}.\r\n */\r\ndeclare namespace DynReducerHelper {\r\n   /**\r\n    * All available returned filter functions.\r\n    */\r\n   export namespace FilterFn {\r\n      /**\r\n       * The returned filter function from `regexObjectQuery` helper.\r\n       */\r\n      export type regexObjectQuery = MinimalWritableFn<string, [data: { [key: string]: any }], boolean>;\r\n   }\r\n\r\n   /**\r\n    * All available filters.\r\n    */\r\n   export interface Filters {\r\n      /**\r\n       * Creates a filter function to compare objects by a given accessor key against a regex test. The returned\r\n       * function is also a minimal writable Svelte store that builds a regex from the stores value.\r\n       *\r\n       * Suitable for object reducers matching one or more property keys / accessors against the store value as a\r\n       * regex. To access deeper entries into the object format the accessor string with `.` between entries to walk.\r\n       *\r\n       * This filter function can be used w/ a dynamic reducer and bound as a store to input elements.\r\n       *\r\n       * @param accessors - Property key / accessors to lookup key to compare. To access deeper entries into the object\r\n       *        format the accessor string with `.` between entries to walk.\r\n       *\r\n       * @param [options] - Optional parameters.\r\n       *\r\n       * @param [options.accessWarn=false] - When true warnings will be posted if accessor not retrieved; default:\r\n       *        `false`.\r\n       *\r\n       * @param [options.caseSensitive=false] - When true regex test is case-sensitive; default: `false`.\r\n       *\r\n       * @param [options.store] - Use the provided minimal writable store instead of creating a default `writable`\r\n       *        store.\r\n       *\r\n       * @returns The query string filter.\r\n       */\r\n      regexObjectQuery: (\r\n         accessors: string | Iterable<string>,\r\n         options?: {\r\n            accessWarn?: boolean,\r\n            caseSensitive?: boolean,\r\n            store?: MinimalWritable<string>\r\n         }\r\n      ) => FilterFn.regexObjectQuery\r\n   }\r\n}\r\n\r\nexport { DynReducerHelper }\r\n"],"names":[],"mappings":"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"}