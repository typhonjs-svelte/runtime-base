{"version":3,"file":"index.js","sources":["../../../../node_modules/@typhonjs-svelte/simple-web-storage/dist/generator/index.js","../../../../node_modules/@typhonjs-svelte/simple-web-storage/dist/local/index.js","../../../../node_modules/@typhonjs-svelte/simple-web-storage/dist/session/index.js","../../../../src/svelte/store/web-storage/TJSWebStorage.js","../../../../src/svelte/store/web-storage/TJSLocalStorage.js","../../../../src/svelte/store/web-storage/TJSSessionStorage.js"],"sourcesContent":["import { writable, get } from 'svelte/store';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  opts.storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\nexport { storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { storeGenerator } from '@typhonjs-svelte/simple-web-storage/generator';\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nconst derived = localStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nconst readable = localStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nconst writable = localStores.writable;\n\nexport { derived, localStores, readable, writable };\n//# sourceMappingURL=index.js.map\n","import { storeGenerator } from '@typhonjs-svelte/simple-web-storage/generator';\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nconst derived = sessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nconst readable = sessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nconst writable = sessionStores.writable;\n\nexport { derived, readable, sessionStores, writable };\n//# sourceMappingURL=index.js.map\n","/**\r\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\r\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\r\n * to provide additional customization options for custom Storage API compatible storage instances and custom\r\n * serialization configuration.\r\n *\r\n * @implements {import('./types').WebStorage}\r\n */\r\nexport class TJSWebStorage\r\n{\r\n   /** @type {import('./').StorageStores} */\r\n   #storageStores;\r\n\r\n   /**\r\n    * @type {(Map<string, {\r\n    *    store: import('svelte/store').Writable,\r\n    *    deserialize?: (value: string, ...rest: any[]) => any,\r\n    *    serialize?: (value: any, ...rest: any[]) => string\r\n    * }>)}\r\n    */\r\n   #stores = new Map();\r\n\r\n   /**\r\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\r\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\r\n    */\r\n   constructor(storageStores)\r\n   {\r\n      this.#storageStores = storageStores;\r\n   }\r\n\r\n   /**\r\n    * Creates a new store for the given key.\r\n    *\r\n    * @template T\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {T}        [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\r\n    *\r\n    * @returns {import('svelte/store').Writable<T>} The new store.\r\n    */\r\n   #createStore(key, defaultValue = void 0, storageStores)\r\n   {\r\n      try\r\n      {\r\n         const value = this.#storageStores.storage.getItem(key);\r\n         if (value !== null)\r\n         {\r\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\r\n            defaultValue = deserialize(value);\r\n         }\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\r\n\r\n      return writable(key, defaultValue);\r\n   }\r\n\r\n   /**\r\n    * @param {string}   key - Storage key.\r\n    *\r\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\r\n    */\r\n   #getDeserialize(key)\r\n   {\r\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\r\n   }\r\n\r\n   /**\r\n    * @param {string}   key - Storage key.\r\n    *\r\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\r\n    */\r\n   #getSerialize(key)\r\n   {\r\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\r\n   }\r\n\r\n   /**\r\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\r\n    *\r\n    * @template T\r\n    *\r\n    * @param {string}   key - Key to lookup in stores map.\r\n    *\r\n    * @param {T}        [defaultValue] - A default value to set for the store.\r\n    *\r\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\r\n    *\r\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\r\n    */\r\n   #getStore(key, defaultValue = void 0, storageStores)\r\n   {\r\n      const storeEntry = this.#stores.get(key);\r\n      if (storeEntry) { return storeEntry.store; }\r\n\r\n      const store = this.#createStore(key, defaultValue, storageStores);\r\n\r\n      // Set any key specific storage helper details.\r\n      this.#stores.set(key, {\r\n         store,\r\n         deserialize: storageStores?.deserialize,\r\n         serialize: storageStores?.serialize\r\n      });\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Get value from the storage API.\r\n    *\r\n    * @param {string}   key - Key to lookup in storage API.\r\n    *\r\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {*} Value from session storage or if not defined any default value provided.\r\n    */\r\n   getItem(key, defaultValue)\r\n   {\r\n      let value = defaultValue;\r\n\r\n      const storageValue = this.#storageStores.storage.getItem(key);\r\n\r\n      if (storageValue !== null)\r\n      {\r\n         try\r\n         {\r\n            value = this.#getDeserialize(key)(storageValue);\r\n         }\r\n         catch (err)\r\n         {\r\n            value = defaultValue;\r\n         }\r\n      }\r\n      else if (defaultValue !== void 0)\r\n      {\r\n         try\r\n         {\r\n            const newValue = this.#getSerialize(key)(defaultValue);\r\n\r\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\r\n            this.#storageStores.storage.setItem(key, newValue);\r\n         }\r\n         catch (err) { /* */ }\r\n      }\r\n\r\n      return value;\r\n   }\r\n\r\n   /**\r\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\r\n    * is not already set.\r\n    *\r\n    * @template T\r\n    *\r\n    * @param {string}   key - Key to lookup in storage API.\r\n    *\r\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\r\n    *\r\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\r\n    */\r\n   getStore(key, defaultValue, storageStores)\r\n   {\r\n      return this.#getStore(key, defaultValue, storageStores);\r\n   }\r\n\r\n   /**\r\n    * Returns whether a store has already been created for the given key.\r\n    *\r\n    * @param {string}   key - Key to lookup in storage API.\r\n    */\r\n   hasStore(key)\r\n   {\r\n      return this.#stores.has(key);\r\n   }\r\n\r\n   /**\r\n    * Sets the value for the given key in storage API.\r\n    *\r\n    * @param {string}   key - Key to lookup in storage API.\r\n    *\r\n    * @param {*}        value - A value to set for this key.\r\n    */\r\n   setItem(key, value)\r\n   {\r\n      const store = this.#getStore(key);\r\n      store.set(value);\r\n   }\r\n\r\n   /**\r\n    * Convenience method to swap a boolean value stored in storage API updating the associated store value.\r\n    *\r\n    * @param {string}   key - Key to lookup in storage API.\r\n    *\r\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\r\n    *\r\n    * @returns {boolean} The boolean swap for the given key.\r\n    */\r\n   swapItemBoolean(key, defaultValue)\r\n   {\r\n      const store = this.#getStore(key, defaultValue);\r\n\r\n      let currentValue = false;\r\n\r\n      try\r\n      {\r\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\r\n      }\r\n      catch (err) { /**/ }\r\n\r\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\r\n\r\n      store.set(newValue);\r\n      return newValue;\r\n   }\r\n\r\n   // Iterators ------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @template T\r\n    *\r\n    * Returns an iterable for the session storage keys and stores.\r\n    *\r\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\r\n    *\r\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\r\n    * @yields {import('svelte/store').Writable<[string, Writable<T>]>}\r\n    */\r\n   *entries(regex = void 0)\r\n   {\r\n      if (regex !== void 0 && !(regex instanceof RegExp)) { throw new TypeError(`'regex' is not a RegExp`); }\r\n\r\n      if (!this.#stores.size) { return void 0; }\r\n\r\n      if (regex)\r\n      {\r\n         for (const key of this.#stores.keys())\r\n         {\r\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns an iterable for the session storage keys from existing stores.\r\n    *\r\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\r\n    *\r\n    * @returns {IterableIterator<string>} Iterable iterator of session storage keys.\r\n    * @yields {string}\r\n    */\r\n   *keys(regex = void 0)\r\n   {\r\n      if (regex !== void 0 && !(regex instanceof RegExp)) { throw new TypeError(`'regex' is not a RegExp`); }\r\n\r\n      if (!this.#stores.size) { return void 0; }\r\n\r\n      if (regex)\r\n      {\r\n         for (const key of this.#stores.keys())\r\n         {\r\n            if (regex.test(key)) { yield key; }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const key of this.#stores.keys()) { yield key; }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @template T\r\n    *\r\n    * Returns an iterable for the session storage stores.\r\n    *\r\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\r\n    *\r\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\r\n    * @yields {import('svelte/store').Writable<T>}\r\n    */\r\n   *stores(regex = void 0)\r\n   {\r\n      if (regex !== void 0 && !(regex instanceof RegExp)) { throw new TypeError(`'regex' is not a RegExp`); }\r\n\r\n      if (!this.#stores.size) { return void 0; }\r\n\r\n      if (regex)\r\n      {\r\n         for (const key of this.#stores.keys())\r\n         {\r\n            if (regex.test(key)) { yield this.getStore(key); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\r\n      }\r\n   }\r\n}\r\n","import { localStores }     from './index.js';\r\n\r\nimport { TJSWebStorage }   from './TJSWebStorage.js';\r\n\r\n/**\r\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\r\n */\r\nexport class TJSLocalStorage extends TJSWebStorage\r\n{\r\n   constructor()\r\n   {\r\n      super(localStores);\r\n   }\r\n}\r\n","import { sessionStores }  from './index.js';\r\n\r\nimport { TJSWebStorage }  from './TJSWebStorage.js';\r\n\r\n/**\r\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\r\n */\r\nexport class TJSSessionStorage extends TJSWebStorage\r\n{\r\n   constructor()\r\n   {\r\n      super(sessionStores);\r\n   }\r\n}\r\n"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,EAAE,OAAO,EAAE,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE;AAC3F,IAAI,SAAS,eAAe,CAAC,OAAO,EAAE;AACtC,QAAQ,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC;AACjC;AACA,IAAI,SAAS,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;AAChD,QAAQ,OAAO;AACf,YAAY,SAAS,EAAE,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAS;AACT;AACA,IAAI,SAAS,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;AAChD,QAAQ,SAAS,UAAU,CAAC,KAAK,EAAE;AACnC,YAAY,OAAO,KAAK,CAAC,SAAS,QAAQ,CAAC,SAAS,EAAE;AACtD,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AAC9D;AACA,gBAAgB,OAAO,KAAK,CAAC,SAAS,CAAC;AACvC,aAAa,EAAE,SAAS,WAAW,CAAC,EAAE,EAAE;AACxC,gBAAgB,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AACrC,aAAa,CAAC;AACd;AACA,QAAQ,IAAI,OAAO,EAAE;AACrB,YAAY,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;AACrD,YAAY,IAAI;AAChB,gBAAgB,IAAI,YAAY,EAAE;AAClC,oBAAoB,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC;AACrD;AACA;AACA,YAAY,OAAO,GAAG,EAAE;AACxB,YAAY,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;AAClD;AACA,QAAQ,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC;AACpE,QAAQ,SAAS,GAAG,CAAC,SAAS,EAAE;AAChC,YAAY,IAAI,OAAO,EAAE;AACzB,gBAAgB,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AAC1D;AACA,YAAY,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AAClC;AACA,QAAQ,SAAS,MAAM,CAAC,EAAE,EAAE;AAC5B,YAAY,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AACjC;AACA,QAAQ,SAAS,SAAS,CAAC,GAAG,EAAE,UAAU,EAAE;AAC5C,YAAY,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC;AACrD;AACA,QAAQ,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE;AACzC;AACA,IAAI,SAAS,cAAc,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE;AAC5D,QAAQ,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;AAC7C,QAAQ,MAAM,YAAY,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM;AACvD,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC7C,YAAY,IAAI;AAChB,gBAAgB,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjE;AACA,YAAY,OAAO,GAAG,EAAE;AACxB;AACA,QAAQ,OAAO,eAAe,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK;AACpE,YAAY,IAAI,MAAM,GAAG,KAAK;AAC9B,YAAY,MAAM,MAAM,GAAG,EAAE;AAC7B,YAAY,IAAI,OAAO,GAAG,CAAC;AAC3B,YAAY,IAAI,OAAO;AACvB,YAAY,MAAM,IAAI,GAAG,MAAM;AAC/B,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB;AACpB;AACA,gBAAgB,OAAO,IAAI;AAC3B,gBAAgB,MAAM,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM;AACzD,gBAAgB,IAAI,eAAe,CAAC,EAAE,CAAC,EAAE;AACzC,oBAAoB,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAClC;AACA,qBAAqB;AACrB,oBAAoB,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC;AACzD,oBAAoB,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AACtD,wBAAwB,OAAO,GAAG,MAAM;AACxC;AACA;AACA,aAAa;AACb,YAAY,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK;AAC5F,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;AACjC,gBAAgB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AACpC,gBAAgB,IAAI,MAAM,EAAE;AAC5B,oBAAoB,IAAI,EAAE;AAC1B;AACA,aAAa,EAAE,MAAM,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC/C,YAAY,MAAM,GAAG,IAAI;AACzB,YAAY,IAAI,EAAE;AAClB,YAAY,OAAO,SAAS,IAAI,GAAG;AACnC;AACA,gBAAgB,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,KAAK,YAAY,EAAE,CAAC;AACvE,gBAAgB,OAAO,IAAI;AAC3B,aAAa;AACb,SAAS,CAAC;AACV;AACA,IAAI,OAAO;AACX,QAAQ,QAAQ,EAAE,eAAe;AACjC,QAAQ,QAAQ,EAAE,eAAe;AACjC,QAAQ,OAAO,EAAE,cAAc;AAC/B,QAAQ,OAAO;AACf,QAAQ,SAAS;AACjB,QAAQ;AACR,KAAK;AACL;;ACpHA;AACA;AACA;AACK,MAAC,WAAW,GAAG,cAAc,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE;AACxE;AACA;AACA;AACgB,WAAW,CAAC;AAC5B;AACA;AACA;AACiB,WAAW,CAAC;AAC7B;AACA;AACA;AACiB,WAAW,CAAC;;ACf7B;AACA;AACA;AACK,MAAC,aAAa,GAAG,cAAc,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE;AAC5E;AACA;AACA;AACgB,aAAa,CAAC;AAC9B;AACA;AACA;AACiB,aAAa,CAAC;AAC/B;AACA;AACA;AACiB,aAAa,CAAC;;ACjB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa;AAC1B;AACA;AACA,GAAG,cAAc,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG,WAAW,CAAC,aAAa;AAC5B,GAAG;AACH,MAAM,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AAC1C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY,CAAC,GAAG,EAAE,YAAY,GAAG,KAAK,CAAC,EAAE,aAAa;AACzD,GAAG;AACH,MAAM;AACN,MAAM;AACN,SAAS,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChE,SAAS,IAAI,KAAK,KAAK,IAAI;AAC3B,SAAS;AACT,YAAY,MAAM,WAAW,GAAG,aAAa,EAAE,WAAW,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;AAC9F,YAAY,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9C,UAAU;AACV,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,MAAM,QAAQ,GAAG,aAAa,EAAE,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;AAC/E;AACA,MAAM,OAAO,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACzC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,CAAC,GAAG;AACtB,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,WAAW,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;AACnF,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa,CAAC,GAAG;AACpB,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;AAC/E,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,SAAS,CAAC,GAAG,EAAE,YAAY,GAAG,KAAK,CAAC,EAAE,aAAa;AACtD,GAAG;AACH,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/C,MAAM,IAAI,UAAU,EAAE,EAAE,OAAO,UAAU,CAAC,KAAK,CAAC,EAAE;AAClD;AACA,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;AACxE;AACA;AACA,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;AAC5B,SAAS,KAAK;AACd,SAAS,WAAW,EAAE,aAAa,EAAE,WAAW;AAChD,SAAS,SAAS,EAAE,aAAa,EAAE,SAAS;AAC5C,OAAO,CAAC,CAAC;AACT;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,GAAG,EAAE,YAAY;AAC5B,GAAG;AACH,MAAM,IAAI,KAAK,GAAG,YAAY,CAAC;AAC/B;AACA,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACpE;AACA,MAAM,IAAI,YAAY,KAAK,IAAI;AAC/B,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;AAC5D,UAAU;AACV,SAAS,OAAO,GAAG;AACnB,SAAS;AACT,YAAY,KAAK,GAAG,YAAY,CAAC;AACjC,UAAU;AACV,OAAO;AACP,WAAW,IAAI,YAAY,KAAK,KAAK,CAAC;AACtC,MAAM;AACN,SAAS;AACT,SAAS;AACT,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;AACnE;AACA;AACA,YAAY,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC/D,UAAU;AACV,SAAS,OAAO,GAAG,EAAE,SAAS;AAC9B,OAAO;AACP;AACA,MAAM,OAAO,KAAK,CAAC;AACnB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,CAAC,GAAG,EAAE,YAAY,EAAE,aAAa;AAC5C,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;AAC9D,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,CAAC,GAAG;AACf,GAAG;AACH,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,CAAC,GAAG,EAAE,KAAK;AACrB,GAAG;AACH,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe,CAAC,GAAG,EAAE,YAAY;AACpC,GAAG;AACH,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACtD;AACA,MAAM,IAAI,YAAY,GAAG,KAAK,CAAC;AAC/B;AACA,MAAM;AACN,MAAM;AACN,SAAS,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9F,OAAO;AACP,MAAM,OAAO,GAAG,EAAE,QAAQ;AAC1B;AACA,MAAM,MAAM,QAAQ,GAAG,OAAO,YAAY,KAAK,SAAS,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC;AACjF;AACA,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC1B,MAAM,OAAO,QAAQ,CAAC;AACtB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1B,GAAG;AACH,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;AAC7G;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE;AAChD;AACA,MAAM,IAAI,KAAK;AACf,MAAM;AACN,SAAS,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC9C,SAAS;AACT,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACrE,UAAU;AACV,OAAO;AACP;AACA,MAAM;AACN,SAAS,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACpF,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,GAAG;AACH,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;AAC7G;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE;AAChD;AACA,MAAM,IAAI,KAAK;AACf,MAAM;AACN,SAAS,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC9C,SAAS;AACT,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,EAAE;AAC/C,UAAU;AACV,OAAO;AACP;AACA,MAAM;AACN,SAAS,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,GAAG,CAAC,EAAE;AAC9D,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AACzB,GAAG;AACH,MAAM,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;AAC7G;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE;AAChD;AACA,MAAM,IAAI,KAAK;AACf,MAAM;AACN,SAAS,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC9C,SAAS;AACT,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9D,UAAU;AACV,OAAO;AACP;AACA,MAAM;AACN,SAAS,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC7E,OAAO;AACP,IAAI;AACJ;;AChTA;AACA;AACA;AACO,MAAM,eAAe,SAAS,aAAa;AAClD;AACA,GAAG,WAAW;AACd,GAAG;AACH,MAAM,KAAK,CAAC,WAAW,CAAC,CAAC;AACzB,IAAI;AACJ;;ACTA;AACA;AACA;AACO,MAAM,iBAAiB,SAAS,aAAa;AACpD;AACA,GAAG,WAAW;AACd,GAAG;AACH,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;AAC3B,IAAI;AACJ;;;;","x_google_ignoreList":[0,1,2]}