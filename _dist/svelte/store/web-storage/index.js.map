{"version":3,"file":"index.js","sources":["../../../../node_modules/@typhonjs-svelte/simple-web-storage/dist/generator/index.js","../../../../node_modules/@typhonjs-svelte/simple-web-storage/dist/local/index.js","../../../../node_modules/@typhonjs-svelte/simple-web-storage/dist/session/index.js"],"sourcesContent":["import { writable, get } from 'svelte/store';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  storage - The web storage source.\n *\n * @param {(value: any) => string}  [opts.serialize] - Replace with custom serialization; default: `JSON.stringify`.\n *\n * @param {(value: string) => any}  [opts.deserialize] - Replace with custom deserialization; default: `JSON.parse`.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived\n    };\n}\n\nexport { storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { storeGenerator } from '@typhonjs-svelte/simple-web-storage/generator';\n\n/**\n * Provides all Storage API enabled `localStorage` helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` helper function. Data is serialized as JSON.\n */\nconst derived = localStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` helper function. Data is serialized as JSON.\n */\nconst readable = localStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` helper function. Data is serialized as JSON.\n */\nconst writable = localStores.writable;\n\nexport { derived, localStores, readable, writable };\n//# sourceMappingURL=index.js.map\n","import { storeGenerator } from '@typhonjs-svelte/simple-web-storage/generator';\n\n/**\n * Provides all Storage API enabled `sessionStorage` helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` helper function. Data is serialized as JSON.\n */\nconst derived = sessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` helper function. Data is serialized as JSON.\n */\nconst readable = sessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` helper function. Data is serialized as JSON.\n */\nconst writable = sessionStores.writable;\n\nexport { derived, readable, sessionStores, writable };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2]}