{"version":3,"file":"index.js","sources":["../../../../src/svelte/store/dom/KeyStore.js","../../../../src/svelte/store/dom/action/keyforward.js"],"sourcesContent":["import { isIterable } from '#runtime/util/object';\n\n/**\n * Provides a readable store to track keys actively pressed. KeyStore is designed to be used with the\n * {@link keyforward} action.\n */\nexport class KeyStore\n{\n   #keySet;\n\n   /**\n    * @type {Map<string, number>}\n    */\n   #keyMap = new Map();\n\n   /**\n    * @type {KeyStoreOptions}\n    */\n   #options = { preventDefault: true, useCode: true, stopPropagation: true };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<KeyStore>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @param {Iterable<string>}  [keyNames] -\n    *\n    * @param {KeyStoreOptions}   [options] - Optional parameters\n    */\n   constructor(keyNames, options)\n   {\n      if (!isIterable(keyNames))\n      {\n         throw new TypeError(`'keyNames' is not an iterable list.`);\n      }\n\n      this.setOptions(options);\n\n      this.#keySet = new Set(keyNames);\n   }\n\n   /**\n    * Add given key to the tracking key set.\n    *\n    * @param {string}   key - Key to add.\n    */\n   addKey(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\n\n      this.#keySet.add(key);\n   }\n\n   /**\n    * @returns {boolean} True if any keys in the key set are pressed.\n    */\n\n   /**\n    * Returns true if any of given keys are pressed. If `keys` is undefined then the result is true if any keys being\n    * tracked are pressed.\n    *\n    * @param {string|Iterable<string>|undefined} keys - Zero or more key strings or list to verify if any pressed.\n    *\n    * @returns {boolean} True if any keys set are pressed.\n    */\n   anyPressed(keys)\n   {\n      // When no keys given then check if any key is pressed.\n      if (keys === void 0) { return this.#keyMap.size > 0; }\n\n      const isList = isIterable(keys);\n\n      if (typeof keys !== 'string' && !isList)\n      {\n         throw new TypeError(`'keys' is not a string or iterable list of strings.`);\n      }\n\n      let result = false;\n\n      if (isList)\n      {\n         for (const key of keys)\n         {\n            if (this.#keyMap.has(key))\n            {\n               result = true;\n               break;\n            }\n         }\n      }\n      else\n      {\n         if (this.#keyMap.has(keys)) { result = true; }\n      }\n\n      return result;\n   }\n\n   /**\n    * Is the given key in the tracking key set.\n    *\n    * @param {string}   key - Key to check.\n    */\n   hasKey(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\n\n      this.#keySet.has(key);\n   }\n\n   /**\n    * Returns true if all given keys are pressed.\n    *\n    * @param {string|Iterable<string>} keys - One or more key strings to verify if pressed.\n    *\n    * @returns {boolean} Are all keys pressed.\n    */\n   isPressed(keys)\n   {\n      const isList = isIterable(keys);\n\n      if (typeof keys !== 'string' && !isList)\n      {\n         throw new TypeError(`'keys' is not a string or iterable list of strings.`);\n      }\n\n      let result = true;\n\n      if (isList)\n      {\n         for (const key of keys)\n         {\n            if (!this.#keyMap.has(key))\n            {\n               result = false;\n               break;\n            }\n         }\n      }\n      else\n      {\n         if (!this.#keyMap.has(keys)) { result = false; }\n      }\n\n      return result;\n   }\n\n   /**\n    * Handle keydown event adding any key from the tracked key set.\n    *\n    * @param {KeyboardEvent}  event - KeyboardEvent.\n    */\n   keydown(event)\n   {\n      const key = this.#options.useCode ? event.code : event.key;\n\n      if (this.#keySet.has(key))\n      {\n         if (!this.#keyMap.has(key))\n         {\n            this.#keyMap.set(key, 1);\n            this._updateSubscribers();\n         }\n\n         if (this.#options.preventDefault) { event.preventDefault(); }\n         if (this.#options.stopPropagation) { event.stopPropagation(); }\n      }\n   }\n\n   /**\n    * @returns {IterableIterator<string>} Returns current pressed keys iterator.\n    */\n   keysPressed()\n   {\n      return this.#keyMap.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<string>} Returns currently tracked keys iterator.\n    */\n   keysTracked()\n   {\n      return this.#keySet.keys();\n   }\n\n   /**\n    * Handle keyup event removing any key from the tracked key set.\n    *\n    * @param {KeyboardEvent}  event - KeyboardEvent.\n    */\n   keyup(event)\n   {\n      const key = this.#options.useCode ? event.code : event.key;\n\n      if (this.#keySet.has(key))\n      {\n         if (this.#keyMap.has(key))\n         {\n            this.#keyMap.delete(key);\n            this._updateSubscribers();\n         }\n\n         if (this.#options.preventDefault) { event.preventDefault(); }\n         if (this.#options.stopPropagation) { event.stopPropagation(); }\n      }\n   }\n\n   /**\n    * Remove the given key from the tracking key set.\n    *\n    * @param {string}   key - Key to remove.\n    */\n   removeKey(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\n\n      if (this.#keySet.has(key))\n      {\n         this.#keySet.delete(key);\n\n         if (this.#keyMap.has(key))\n         {\n            this.#keyMap.delete(key);\n            this._updateSubscribers();\n         }\n      }\n   }\n\n   /**\n    * Update options.\n    *\n    * @param {KeyStoreOptions}   options - Options to set.\n    */\n   setOptions(options)\n   {\n      if (typeof options?.preventDefault === 'boolean') { this.#options.preventDefault = options.preventDefault; }\n      if (typeof options?.useCode === 'boolean') { this.#options.useCode = options.useCode; }\n      if (typeof options?.stopPropagation === 'boolean') { this.#options.stopPropagation = options.stopPropagation; }\n   }\n\n   /**\n    * @param {string}   key - key or key code to lookup.\n    *\n    * @returns {number} 1 if currently pressed and 0 if not pressed.\n    */\n   value(key)\n   {\n      return this.#keyMap.has(key) ? 1 : 0;\n   }\n\n   // Store subscriber implementation --------------------------------------------------------------------------------\n\n   /**\n    * @param {import('svelte/store').Subscriber<KeyStore>} handler - Callback function that is invoked on update /\n    *        changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers.\n    *\n    * @protected\n    */\n   _updateSubscribers()\n   {\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](this); }\n   }\n}\n\n/**\n * @typedef {object} KeyStoreOptions\n *\n * @property {boolean}  [preventDefault=true] Invoke `preventDefault` on key events.\n *\n * @property {boolean}  [useCode=true] When true use `event.code` otherwise use `event.key` to get active key.\n *\n * @property {boolean}  [stopPropagation=true] Invoke `stopPropagation` on key events.\n */\n","/**\n * Provides an action to forward on key down & up events. This can be any object that has associated `keydown` and\n * `keyup` methods. See {@link KeyStore} for a store implementation.\n *\n * @param {HTMLElement} node - Target element.\n *\n * @param {import('..').KeyStore}   keyStore - KeyStore to forward events key down / up events to...\n *\n * @returns {import('svelte/action').ActionReturn<import('..').KeyStore>} Action lifecycle methods.\n */\nexport function keyforward(node, keyStore)\n{\n   if (typeof keyStore?.keydown !== 'function' || typeof keyStore.keyup !== 'function')\n   {\n      throw new TypeError(`'keyStore' doesn't have required 'keydown' or 'keyup' methods.`);\n   }\n\n   /**\n    * @param {KeyboardEvent} event -\n    */\n   function onKeydown(event)\n   {\n      keyStore.keydown(event);\n   }\n\n   /**\n    * @param {KeyboardEvent} event -\n    */\n   function onKeyup(event)\n   {\n      keyStore.keyup(event);\n   }\n\n   /**\n    * Activates key listeners.\n    */\n   function activateListeners()\n   {\n      node.addEventListener('keydown', onKeydown);\n      node.addEventListener('keyup', onKeyup);\n   }\n\n   /**\n    * Removes key listeners.\n    */\n   function removeListeners()\n   {\n      node.removeEventListener('keydown', onKeydown);\n      node.removeEventListener('keyup', onKeyup);\n   }\n\n   activateListeners();\n\n   return {\n      update: (newKeyStore) =>  // eslint-disable-line no-shadow\n      {\n         keyStore = newKeyStore;\n\n         if (typeof keyStore?.keydown !== 'function' || typeof keyStore.keyup !== 'function')\n         {\n            throw new TypeError(`'newKeyStore' doesn't have required 'keydown' or 'keyup' methods.`);\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n"],"names":[],"mappings":"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"}