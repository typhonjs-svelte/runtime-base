{"version":3,"file":"index.js","sources":["../../../../src/svelte/store/position/action/applyPosition.ts","../../../../src/svelte/store/position/action/draggable.ts","../../../../src/svelte/store/position/animation/AnimationControl.ts","../../../../src/svelte/store/position/animation/AnimationManager.ts","../../../../src/svelte/store/position/data/TJSPositionData.ts","../../../../src/svelte/store/position/data/TJSPositionDataUtil.ts","../../../../src/svelte/store/position/data/convert/ConvertStringData.ts","../../../../src/svelte/store/position/transform/TJSTransformData.ts","../../../../src/svelte/store/position/util/NumberGuard.ts","../../../../src/svelte/store/position/util/TJSPositionStyleCache.ts","../../../../src/svelte/store/position/transform/TJSTransforms.ts","../../../../src/svelte/store/position/animation/AnimationScheduler.ts","../../../../src/svelte/store/position/animation/AnimationAPIImpl.ts","../../../../src/svelte/store/position/animation/AnimationGroupControl.ts","../../../../src/svelte/store/position/animation/AnimationGroupAPIImpl.ts","../../../../src/svelte/store/position/state/PositionStateAPI.ts","../../../../src/svelte/store/position/system/SystemBase.ts","../../../../src/svelte/store/position/system/initial/Centered.ts","../../../../src/svelte/store/position/system/validators/AdapterValidators.ts","../../../../src/svelte/store/position/system/validators/TransformBounds.ts","../../../../src/svelte/store/position/update/PositionChangeSet.ts","../../../../src/svelte/store/position/update/UpdateElementData.ts","../../../../src/svelte/store/position/update/UpdateElementManager.ts","../../../../src/svelte/store/position/TJSPosition.ts"],"sourcesContent":["import { hasSetter }             from '#runtime/util/object';\r\n\r\nimport type { ActionReturn }     from 'svelte/action';\r\n\r\nimport type { TJSPosition }      from '../TJSPosition';\r\n\r\n/**\r\n * Provides an action to apply a TJSPosition instance to a HTMLElement and invoke `position.parent`\r\n *\r\n * @param node - The node associated with the action.\r\n *\r\n * @param position - A position or positionable instance.\r\n *\r\n * @returns The action lifecycle methods.\r\n */\r\nexport function applyPosition(node: HTMLElement, position: TJSPosition | TJSPosition.Positionable):\r\n ActionReturn<TJSPosition | TJSPosition.Positionable>\r\n{\r\n   /**\r\n    * Find actual position instance checking for a Positionable instance.\r\n    */\r\n   let actualPosition: TJSPosition = ((position as TJSPosition.Positionable)?.position ?? position) as TJSPosition;\r\n\r\n   if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = node; }\r\n\r\n   return {\r\n      update: (newPosition: TJSPosition | TJSPosition.Positionable): void =>\r\n      {\r\n         const newActualPosition: TJSPosition =\r\n          ((newPosition as TJSPosition.Positionable)?.position ?? position) as TJSPosition;\r\n\r\n         // Sanity case to short circuit update if positions are the same instance.\r\n         if (newActualPosition === actualPosition && newActualPosition.parent === actualPosition.parent) { return; }\r\n\r\n         if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = void 0; }\r\n\r\n         actualPosition = newActualPosition;\r\n\r\n         if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = node; }\r\n      },\r\n\r\n      destroy: (): void => { if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = void 0; } }\r\n   };\r\n}\r\n","import { getEasingFunc }         from '#runtime/svelte/easing';\r\n\r\nimport { A11yHelper }            from '#runtime/util/a11y';\r\n\r\nimport {\r\n   isIterable,\r\n   isObject }                    from '#runtime/util/object';\r\n\r\nimport type { ActionReturn }     from 'svelte/action';\r\n\r\nimport type {\r\n   Subscriber,\r\n   Unsubscriber }                from 'svelte/store';\r\n\r\nimport type { EasingReference }  from '#runtime/svelte/easing';\r\n\r\nimport type { TJSPosition }      from '../TJSPosition';\r\n\r\nimport type { Action }           from './types';\r\n\r\nimport type { AnimationAPI }     from '../animation/types';\r\nimport type { Data }          from '../data/types';\r\n\r\n/**\r\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given\r\n * {@link TJSPosition} instance provided. When the attached boolean store state changes the draggable action is enabled\r\n * or disabled.\r\n *\r\n * @param node - The node associated with the action.\r\n *\r\n * @param options - Draggable action options.\r\n *\r\n * @returns Action lifecycle functions.\r\n */\r\nfunction draggable(node: HTMLElement, { position, enabled = true, button = 0, storeDragging = void 0, tween = false,\r\n tweenOptions = { duration: 1, ease: 'cubicOut' }, hasTargetClassList, ignoreTargetClassList }:\r\n  Action.DraggableOptions): ActionReturn<Partial<Action.DraggableOptions>>\r\n{\r\n   if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList))\r\n   {\r\n      throw new TypeError(`'hasTargetClassList' is not iterable.`);\r\n   }\r\n\r\n   if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList))\r\n   {\r\n      throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\r\n   }\r\n\r\n   /**\r\n    * Used for direct call to `position.set`.\r\n    */\r\n   const positionData: { left: number, top: number } = { left: 0, top: 0 };\r\n\r\n   /**\r\n    * Find actual position instance checking for a Positionable instance.\r\n    */\r\n   let actualPosition: TJSPosition = ((position as TJSPosition.Positionable)?.position ?? position) as TJSPosition;\r\n\r\n   /**\r\n    * Duplicate the app / Positionable starting position to track differences.\r\n    */\r\n   let initialPosition: Partial<Data.TJSPositionData> | null = null;\r\n\r\n   /**\r\n    * Stores the initial X / Y on drag down.\r\n    */\r\n   let initialDragPoint: { x: number, y: number } = { x: 0, y: 0 };\r\n\r\n   /**\r\n    * Stores the current dragging state and gates the move pointer as the dragging store is not set until the first\r\n    * pointer move.\r\n    */\r\n   let dragging: boolean = false;\r\n\r\n   /**\r\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\r\n    */\r\n   let quickTo: AnimationAPI.QuickToCallback = actualPosition.animate.quickTo(['top', 'left'],\r\n    tweenOptions);\r\n\r\n   /**\r\n    * Event handlers associated with this action, so they may be later unregistered.\r\n    */\r\n   const handlers: { [p: string]: [string, EventListener, boolean] } = {\r\n      dragDown: ['pointerdown', onDragPointerDown as EventListener, false],\r\n      dragMove: ['pointermove', onDragPointerChange as EventListener, false],\r\n      dragUp: ['pointerup', onDragPointerUp as EventListener, false]\r\n   };\r\n\r\n   /**\r\n    * Activates listeners.\r\n    */\r\n   function activateListeners(): void\r\n   {\r\n      // Drag handlers\r\n      node.addEventListener(...handlers.dragDown);\r\n      node.classList.add('draggable');\r\n   }\r\n\r\n   /**\r\n    * Removes listeners.\r\n    */\r\n   function removeListeners(): void\r\n   {\r\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\r\n\r\n      // Drag handlers\r\n      node.removeEventListener(...handlers.dragDown);\r\n      node.removeEventListener(...handlers.dragMove);\r\n      node.removeEventListener(...handlers.dragUp);\r\n      node.classList.remove('draggable');\r\n   }\r\n\r\n   if (enabled)\r\n   {\r\n      activateListeners();\r\n   }\r\n\r\n   /**\r\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\r\n    *\r\n    * @param event - The pointer down event.\r\n    */\r\n   function onDragPointerDown(event: PointerEvent): void\r\n   {\r\n      if (event.button !== button || !event.isPrimary) { return; }\r\n\r\n      // Do not process if the position system is not enabled.\r\n      if (!actualPosition.enabled) { return; }\r\n\r\n      // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\r\n      // class.\r\n      if (ignoreTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target))\r\n      {\r\n         for (const targetClass of ignoreTargetClassList)\r\n         {\r\n            if (event.target.classList.contains(targetClass)) { return; }\r\n         }\r\n      }\r\n\r\n      // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\r\n      // matching class from the list.\r\n      if (hasTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target))\r\n      {\r\n         let foundTarget: boolean = false;\r\n\r\n         for (const targetClass of hasTargetClassList)\r\n         {\r\n            if (event.target.classList.contains(targetClass))\r\n            {\r\n               foundTarget = true;\r\n               break;\r\n            }\r\n         }\r\n\r\n         if (!foundTarget) { return; }\r\n      }\r\n\r\n      event.preventDefault();\r\n\r\n      dragging = false;\r\n\r\n      // Record initial position.\r\n      initialPosition = actualPosition.get();\r\n      initialDragPoint = { x: event.clientX, y: event.clientY };\r\n\r\n      // Add move and pointer up handlers.\r\n      node.addEventListener(...handlers.dragMove);\r\n      node.addEventListener(...handlers.dragUp);\r\n\r\n      node.setPointerCapture(event.pointerId);\r\n   }\r\n\r\n   /**\r\n    * Move the positionable.\r\n    *\r\n    * @param event - The pointer move event.\r\n    */\r\n   function onDragPointerChange(event: PointerEvent): void\r\n   {\r\n      // See chorded button presses for pointer events:\r\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\r\n      // TODO: Support different button configurations for PointerEvents.\r\n      if ((event.buttons & 1) === 0)\r\n      {\r\n         onDragPointerUp(event);\r\n         return;\r\n      }\r\n\r\n      if (event.button !== -1 || !event.isPrimary) { return; }\r\n\r\n      event.preventDefault();\r\n\r\n      // Only set store dragging on first move event.\r\n      if (!dragging && typeof storeDragging?.set === 'function')\r\n      {\r\n         dragging = true;\r\n         storeDragging.set(true);\r\n      }\r\n\r\n      const newLeft: number = initialPosition?.left! + (event.clientX - initialDragPoint.x);\r\n      const newTop: number = initialPosition?.top! + (event.clientY - initialDragPoint.y);\r\n\r\n      if (tween)\r\n      {\r\n         quickTo(newTop, newLeft);\r\n      }\r\n      else\r\n      {\r\n         positionData.left = newLeft;\r\n         positionData.top = newTop;\r\n\r\n         actualPosition.set(positionData);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Finish dragging and set the final position and removing listeners.\r\n    *\r\n    * @param event - The pointer up event.\r\n    */\r\n   function onDragPointerUp(event: PointerEvent): void\r\n   {\r\n      event.preventDefault();\r\n\r\n      dragging = false;\r\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\r\n\r\n      node.removeEventListener(...handlers.dragMove);\r\n      node.removeEventListener(...handlers.dragUp);\r\n   }\r\n\r\n   return {\r\n      // The default of enabled being true won't automatically add listeners twice.\r\n      update: (options: Partial<Action.DraggableOptions>): void =>\r\n      {\r\n         if (options.position !== void 0)\r\n         {\r\n            // Find actual position instance checking for a Positionable instance.\r\n            const newPosition: TJSPosition =\r\n             ((options.position as TJSPosition.Positionable)?.position ?? options.position) as TJSPosition;\r\n\r\n            if (newPosition !== actualPosition)\r\n            {\r\n               actualPosition = newPosition;\r\n               quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\r\n            }\r\n         }\r\n\r\n         if (typeof options.enabled === 'boolean')\r\n         {\r\n            enabled = options.enabled;\r\n            if (enabled) { activateListeners(); }\r\n            else { removeListeners(); }\r\n         }\r\n\r\n         if (typeof options.button === 'number')\r\n         {\r\n            button = options.button;\r\n         }\r\n\r\n         if (typeof options.tween === 'boolean') { tween = options.tween; }\r\n\r\n         if (isObject(options.tweenOptions))\r\n         {\r\n            tweenOptions = options.tweenOptions;\r\n            quickTo.options(tweenOptions);\r\n         }\r\n\r\n         if (options.hasTargetClassList !== void 0)\r\n         {\r\n            if (!isIterable(options.hasTargetClassList))\r\n            {\r\n               throw new TypeError(`'hasTargetClassList' is not iterable.`);\r\n            }\r\n            else\r\n            {\r\n               hasTargetClassList = options.hasTargetClassList;\r\n            }\r\n         }\r\n\r\n         if (options.ignoreTargetClassList !== void 0)\r\n         {\r\n            if (!isIterable(options.ignoreTargetClassList))\r\n            {\r\n               throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\r\n            }\r\n            else\r\n            {\r\n               ignoreTargetClassList = options.ignoreTargetClassList;\r\n            }\r\n         }\r\n      },\r\n\r\n      destroy: () => removeListeners()\r\n   };\r\n}\r\n\r\n/**\r\n * Provides an instance of the {@link draggable} action options support / Readable store to make updating / setting\r\n * draggable options much easier. When subscribing to the options instance returned by {@link draggable.options} the\r\n * Subscriber handler receives the entire instance.\r\n */\r\nclass DraggableOptionsStore implements Action.DraggableOptionsStore\r\n{\r\n   tween!: boolean;\r\n   tweenOptions!: AnimationAPI.QuickTweenOptions;\r\n\r\n   readonly #initialTween: boolean;\r\n\r\n   /**\r\n    */\r\n   readonly #initialTweenOptions: AnimationAPI.QuickTweenOptions;\r\n\r\n   #tween: boolean = false;\r\n\r\n   /**\r\n    */\r\n   #tweenOptions: AnimationAPI.QuickTweenOptions = { duration: 1, ease: 'cubicOut' };\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    */\r\n   #subscribers: Subscriber<Action.DraggableOptionsStore>[] = [];\r\n\r\n   /**\r\n    * @param [opts] - Optional parameters.\r\n    *\r\n    * @param [opts.tween = false] - Tween enabled.\r\n    *\r\n    * @param [opts.tweenOptions] - Quick tween options.\r\n    */\r\n   constructor({ tween = false, tweenOptions }: { tween?: boolean,\r\n    tweenOptions?: AnimationAPI.QuickTweenOptions } = {})\r\n   {\r\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\r\n      // picked up w/ `Object.assign`.\r\n      Object.defineProperty(this, 'tween', {\r\n         get: (): boolean => { return this.#tween; },\r\n         set: (newTween: boolean): void =>\r\n         {\r\n            if (typeof newTween !== 'boolean') { throw new TypeError(`'tween' is not a boolean.`); }\r\n\r\n            this.#tween = newTween;\r\n            this.#updateSubscribers();\r\n         },\r\n         enumerable: true\r\n      });\r\n\r\n      Object.defineProperty(this, 'tweenOptions', {\r\n         get: (): AnimationAPI.QuickTweenOptions => { return this.#tweenOptions; },\r\n         set: (newTweenOptions: AnimationAPI.QuickTweenOptions): void =>\r\n         {\r\n            if (!isObject(newTweenOptions))\r\n            {\r\n               throw new TypeError(`'tweenOptions' is not an object.`);\r\n            }\r\n\r\n            if (newTweenOptions.duration !== void 0)\r\n            {\r\n               if (!Number.isFinite(newTweenOptions.duration))\r\n               {\r\n                  throw new TypeError(`'tweenOptions.duration' is not a finite number.`);\r\n               }\r\n\r\n               if (newTweenOptions.duration < 0)\r\n               {\r\n                  this.#tweenOptions.duration = 0;\r\n               }\r\n               else\r\n               {\r\n                  this.#tweenOptions.duration = newTweenOptions.duration;\r\n               }\r\n            }\r\n\r\n            if (newTweenOptions.ease !== void 0)\r\n            {\r\n               const easeFn = getEasingFunc(newTweenOptions.ease);\r\n\r\n               if (typeof easeFn !== 'function')\r\n               {\r\n                  throw new TypeError(`'tweenOptions.ease' is not a function or Svelte easing function name.`);\r\n               }\r\n\r\n               this.#tweenOptions.ease = newTweenOptions.ease;\r\n            }\r\n\r\n            this.#updateSubscribers();\r\n         },\r\n         enumerable: true\r\n      });\r\n\r\n      // Set default options.\r\n      if (tween !== void 0) { this.tween = tween; }\r\n      if (tweenOptions !== void 0) { this.tweenOptions = tweenOptions; }\r\n\r\n      this.#initialTween = this.#tween;\r\n      this.#initialTweenOptions = Object.assign({}, this.#tweenOptions);\r\n   }\r\n\r\n   /**\r\n    * @returns Get tween duration.\r\n    */\r\n   get tweenDuration(): number { return this.#tweenOptions.duration as number; }\r\n\r\n   /**\r\n    * @returns Get easing function or easing function name.\r\n    */\r\n   get tweenEase(): EasingReference { return this.#tweenOptions.ease as EasingReference; }\r\n\r\n   /**\r\n    * @param duration - Set tween duration.\r\n    */\r\n   set tweenDuration(duration: number)\r\n   {\r\n      if (!Number.isFinite(duration))\r\n      {\r\n         throw new TypeError(`'duration' is not a finite number.`);\r\n      }\r\n\r\n      if (duration < 0) { duration = 0; }\r\n\r\n      this.#tweenOptions.duration = duration;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * @param ease - Set easing function by name or direct function.\r\n    */\r\n   set tweenEase(ease: EasingReference)\r\n   {\r\n      const easeFn = getEasingFunc(ease);\r\n\r\n      if (typeof easeFn !== 'function')\r\n      {\r\n         throw new TypeError(`'ease' is not a function or Svelte easing function name.`);\r\n      }\r\n\r\n      this.#tweenOptions.ease = ease;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Resets all options data to initial values.\r\n    */\r\n   reset(): void\r\n   {\r\n      this.#tween = this.#initialTween;\r\n      this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Resets tween enabled state to initial value.\r\n    */\r\n   resetTween(): void\r\n   {\r\n      this.#tween = this.#initialTween;\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Resets tween options to initial values.\r\n    */\r\n   resetTweenOptions(): void\r\n   {\r\n      this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\r\n      this.#updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Store subscribe method.\r\n    *\r\n    * @param handler - Callback function that is invoked on update / changes. Receives the DraggableOptionsStore\r\n    *        instance.\r\n    *\r\n    * @returns Unsubscribe function.\r\n    */\r\n   subscribe(handler: Subscriber<Action.DraggableOptionsStore>): Unsubscriber\r\n   {\r\n      const currentIdx: number = this.#subscribers.findIndex((entry: Function): boolean => entry === handler);\r\n      if (currentIdx === -1)\r\n      {\r\n         this.#subscribers.push(handler); // add handler to the array of subscribers\r\n         handler(this);                   // call handler with current value\r\n      }\r\n\r\n      // Return unsubscribe function.\r\n      return (): void =>\r\n      {\r\n         const existingIdx: number = this.#subscribers.findIndex((entry: Function): boolean => entry === handler);\r\n         if (existingIdx !== -1) { this.#subscribers.splice(existingIdx, 1); }\r\n      }\r\n   }\r\n\r\n   #updateSubscribers(): void\r\n   {\r\n      const subscriptions: Subscriber<Action.DraggableOptionsStore>[] = this.#subscribers;\r\n\r\n      // Early out if there are no subscribers.\r\n      if (subscriptions.length > 0)\r\n      {\r\n         for (let cntr: number = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * Define a function to get a DraggableOptionsStore instance.\r\n *\r\n * @param options - Initial options for DraggableOptionsStore.\r\n *\r\n * @returns A new options instance.\r\n */\r\ndraggable.options = (options: {\r\n   tween?: boolean,\r\n   tweenOptions?: AnimationAPI.QuickTweenOptions\r\n}): Action.DraggableOptionsStore => new DraggableOptionsStore(options);\r\n\r\nexport { draggable };\r\n","import { CrossWindow }           from '#runtime/util/browser';\r\nimport { isObject }              from '#runtime/util/object';\r\n\r\nimport type {\r\n   BasicAnimation,\r\n   BasicAnimationState }         from '#runtime/util/animate';\r\n\r\nimport type { AnimationData }    from './types-local';\r\n\r\n/**\r\n * Provides a basic animation implementation for TJSPosition animation.\r\n */\r\nexport class AnimationControl implements BasicAnimation\r\n{\r\n   /**\r\n    */\r\n   readonly #animationData: AnimationData | null;\r\n\r\n   /**\r\n    */\r\n   #finishedPromise: Promise<BasicAnimationState> | undefined;\r\n\r\n   /**\r\n    */\r\n   readonly #willFinish: boolean;\r\n\r\n   /**\r\n    * Defines a static empty / void animation control.\r\n    */\r\n   static #voidControl: AnimationControl = new AnimationControl(null);\r\n\r\n   /**\r\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\r\n    */\r\n   static get voidControl(): AnimationControl { return this.#voidControl; }\r\n\r\n   /**\r\n    * @param [animationData] - Animation data.\r\n    *\r\n    * @param [willFinish] - Promise that tracks animation finished state.\r\n    */\r\n   constructor(animationData: AnimationData | null, willFinish: boolean = false)\r\n   {\r\n      this.#animationData = animationData;\r\n      this.#willFinish = willFinish;\r\n\r\n      // Set this control to animation data.\r\n      if (isObject(animationData)) { animationData.control = this; }\r\n   }\r\n\r\n   /**\r\n    * Get a promise that resolves when animation is finished.\r\n    *\r\n    * @returns Animation finished Promise.\r\n    */\r\n   get finished(): Promise<BasicAnimationState>\r\n   {\r\n      if (!CrossWindow.isPromise(this.#finishedPromise))\r\n      {\r\n         this.#finishedPromise = this.#willFinish ? new Promise<BasicAnimationState>((resolve) => this.#animationData!.resolve = resolve) :\r\n          Promise.resolve({ cancelled: false });\r\n      }\r\n\r\n      return this.#finishedPromise;\r\n   }\r\n\r\n   /**\r\n    * Returns whether this animation is currently active / animating.\r\n    *\r\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\r\n    * if an animation is actually finished.\r\n    *\r\n    * @returns Animation active state.\r\n    */\r\n   get isActive(): boolean { return this.#animationData?.active ?? false; }\r\n\r\n   /**\r\n    * Returns whether this animation is completely finished.\r\n    *\r\n    * @returns Animation finished state.\r\n    */\r\n   get isFinished(): boolean { return this.#animationData?.finished ?? true; }\r\n\r\n   /**\r\n    * Cancels the animation.\r\n    */\r\n   cancel(): void\r\n   {\r\n      const animationData: AnimationData | null = this.#animationData;\r\n\r\n      if (animationData === null || animationData === void 0) { return; }\r\n\r\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\r\n      // update.\r\n      animationData.cancelled = true;\r\n   }\r\n}\r\n","import type { BasicAnimation }   from '#runtime/util/animate';\r\n\r\nimport type { TJSPosition }      from '../TJSPosition';\r\n\r\nimport type {\r\n   AnimationCancelFunction,\r\n   AnimationData }               from './types-local';\r\n\r\nimport type { AnimationAPI }     from './types';\r\n\r\n/**\r\n * Provides animation management and scheduling allowing all TJSPosition instances to utilize one micro-task.\r\n */\r\nexport class AnimationManager\r\n{\r\n   /**\r\n    * Cancels all animations except `quickTo` animations.\r\n    */\r\n   static cancelFn: AnimationCancelFunction = (data?: AnimationData): boolean => data?.quickTo !== true;\r\n\r\n   /**\r\n    * Cancels all animations.\r\n    */\r\n   static cancelAllFn: AnimationCancelFunction = (): true => true;\r\n\r\n   /**\r\n    * Defines the options used for {@link TJSPosition.set}.\r\n    */\r\n   static #tjsPositionSetOptions: Readonly<{immediateElementUpdate: boolean}> = Object.freeze(\r\n    { immediateElementUpdate: true });\r\n\r\n   /**\r\n    */\r\n   static #activeList: AnimationData[] = [];\r\n\r\n   /**\r\n    * Provides the `this` context for {@link AnimationManager.animate} to be scheduled on rAF.\r\n    */\r\n   static #animateBound: FrameRequestCallback = (timeFrame: number): void => this.animate(timeFrame);\r\n\r\n   /**\r\n    */\r\n   static #pendingList: AnimationData[] = [];\r\n\r\n   /**\r\n    * Tracks whether a requestAnimationFrame callback is pending via {@link AnimationManager.add};\r\n    */\r\n   static #rafPending: boolean = false;\r\n\r\n   /**\r\n    * Time of last `rAF` callback.\r\n    */\r\n   static #timeFrame: number;\r\n\r\n   /**\r\n    * Time of `performance.now()` at last `rAF` callback.\r\n    */\r\n   static #timeNow: number;\r\n\r\n   /**\r\n    * @returns Time of last `rAF` callback.\r\n    */\r\n   static get timeFrame(): number\r\n   {\r\n      return this.#timeFrame;\r\n   }\r\n\r\n   /**\r\n    * @returns Time of `performance.now()` at last `rAF` callback.\r\n    */\r\n   static get timeNow(): number\r\n   {\r\n      return this.#timeNow;\r\n   }\r\n\r\n   /**\r\n    * Add animation data.\r\n    *\r\n    * @param data -\r\n    */\r\n   static add(data: AnimationData): void\r\n   {\r\n      if (data.cancelled)\r\n      {\r\n         this.#cleanupData(data);\r\n         return;\r\n      }\r\n\r\n      AnimationManager.#pendingList.push(data);\r\n\r\n      // If there is no rAF pending schedule one now.\r\n      if (!AnimationManager.#rafPending)\r\n      {\r\n         AnimationManager.#rafPending = true;\r\n         globalThis.requestAnimationFrame(this.#animateBound);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Manage all animation.\r\n    *\r\n    * @param timeFrame - rAF callback time.\r\n    */\r\n   static animate(timeFrame: DOMHighResTimeStamp): void\r\n   {\r\n      AnimationManager.#rafPending = false;\r\n\r\n      AnimationManager.#timeNow = globalThis.performance.now();\r\n      AnimationManager.#timeFrame = timeFrame;\r\n\r\n      // Early out of the continual rAF callback when there are no current animations scheduled.\r\n      if (AnimationManager.#activeList.length === 0 && AnimationManager.#pendingList.length === 0) { return; }\r\n\r\n      if (AnimationManager.#pendingList.length)\r\n      {\r\n         // Process new data\r\n         for (let cntr: number = AnimationManager.#pendingList.length; --cntr >= 0;)\r\n         {\r\n            const data: AnimationData = AnimationManager.#pendingList[cntr];\r\n\r\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\r\n            if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\r\n            {\r\n               AnimationManager.#pendingList.splice(cntr, 1);\r\n               this.#cleanupData(data);\r\n            }\r\n\r\n            // If data is active then process it now. Delayed animations start with `active` false.\r\n            if (data.active)\r\n            {\r\n               // Set any transform origin for the animation.\r\n               if (data.transformOrigin) { data.position.set({ transformOrigin: data.transformOrigin }); }\r\n\r\n               data.start = AnimationManager.#timeFrame;\r\n\r\n               // Remove from new list and add to active list.\r\n               AnimationManager.#pendingList.splice(cntr, 1);\r\n               AnimationManager.#activeList.push(data);\r\n            }\r\n         }\r\n      }\r\n\r\n      // Process active animations.\r\n      for (let cntr: number = AnimationManager.#activeList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#activeList[cntr];\r\n\r\n         // Remove any animations that have been canceled.\r\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\r\n         {\r\n            AnimationManager.#activeList.splice(cntr, 1);\r\n            this.#cleanupData(data);\r\n            continue;\r\n         }\r\n\r\n         data.current = timeFrame - data.start;\r\n\r\n         // Remove this animation instance if current animating time exceeds duration.\r\n         if (data.current >= data.duration)\r\n         {\r\n            // Prepare final update with end position data.\r\n            for (let dataCntr: number = data.keys.length; --dataCntr >= 0;)\r\n            {\r\n               const key: string = data.keys[dataCntr];\r\n               data.newData[key] = data.destination[key];\r\n            }\r\n\r\n            data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\r\n\r\n            AnimationManager.#activeList.splice(cntr, 1);\r\n            this.#cleanupData(data);\r\n\r\n            continue;\r\n         }\r\n\r\n         // Apply easing to create an eased time.\r\n         const easedTime: number = data.ease(data.current / data.duration);\r\n\r\n         for (let dataCntr: number = data.keys.length; --dataCntr >= 0;)\r\n         {\r\n            const key: string = data.keys[dataCntr];\r\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\r\n         }\r\n\r\n         data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\r\n      }\r\n\r\n      globalThis.requestAnimationFrame(this.#animateBound);\r\n   }\r\n\r\n   /**\r\n    * Cancels all animations for given TJSPosition instance.\r\n    *\r\n    * @param position - TJSPosition instance.\r\n    *\r\n    * @param [cancelFn] - An optional function to control cancelling animations.\r\n    */\r\n   static cancel(position: TJSPosition, cancelFn: AnimationCancelFunction = AnimationManager.cancelFn): void\r\n   {\r\n      for (let cntr: number = AnimationManager.#activeList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#activeList[cntr];\r\n         if (data.position === position && cancelFn(data))\r\n         {\r\n            AnimationManager.#activeList.splice(cntr, 1);\r\n            data.cancelled = true;\r\n            this.#cleanupData(data);\r\n         }\r\n      }\r\n\r\n      for (let cntr: number = AnimationManager.#pendingList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#pendingList[cntr];\r\n         if (data.position === position && cancelFn(data))\r\n         {\r\n            AnimationManager.#pendingList.splice(cntr, 1);\r\n            data.cancelled = true;\r\n            this.#cleanupData(data);\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Cancels all active and delayed animations.\r\n    */\r\n   static cancelAll(): void\r\n   {\r\n      for (let cntr: number = AnimationManager.#activeList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#activeList[cntr];\r\n         data.cancelled = true;\r\n         this.#cleanupData(data);\r\n      }\r\n\r\n      for (let cntr: number = AnimationManager.#pendingList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#pendingList[cntr];\r\n         data.cancelled = true;\r\n         this.#cleanupData(data);\r\n      }\r\n\r\n      AnimationManager.#activeList.length = 0;\r\n      AnimationManager.#pendingList.length = 0;\r\n   }\r\n\r\n   /**\r\n    * @param data - Animation data to cleanup.\r\n    */\r\n   static #cleanupData(data: AnimationData): void\r\n   {\r\n      // Update state.\r\n      data.active = false;\r\n      data.finished = true;\r\n\r\n      // Reset any transform origin for the animation to initial value.\r\n      if (data.transformOriginInitial) { data.position.set({ transformOrigin: data.transformOriginInitial }); }\r\n\r\n      if (typeof data.cleanup === 'function') { data.cleanup(data); }\r\n\r\n      if (typeof data.resolve === 'function') { data.resolve({ cancelled: data.cancelled }); }\r\n\r\n      // Remove retained data if not a `quickTo` animation.\r\n      if (!data.quickTo)\r\n      {\r\n         data.cleanup = void 0;\r\n         data.control = void 0;\r\n         data.destination = void 0;\r\n         data.el = void 0;\r\n         data.ease = void 0;\r\n         data.initial = void 0;\r\n         data.interpolate = void 0;\r\n         data.keys = void 0;\r\n         data.newData = void 0;\r\n         data.position = void 0;\r\n         data.resolve = void 0;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Gets all {@link AnimationControl} instances for a given TJSPosition instance.\r\n    *\r\n    * @param position - TJSPosition instance.\r\n    *\r\n    * @returns All scheduled AnimationControl instances for the given TJSPosition instance.\r\n    */\r\n   static getScheduled(position: TJSPosition): BasicAnimation[]\r\n   {\r\n      const results: BasicAnimation[] = [];\r\n\r\n      for (let cntr: number = AnimationManager.#activeList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#activeList[cntr];\r\n         if (data.position === position && data.control) { results.push(data.control); }\r\n      }\r\n\r\n      for (let cntr: number = AnimationManager.#pendingList.length; --cntr >= 0;)\r\n      {\r\n         const data: AnimationData = AnimationManager.#pendingList[cntr];\r\n         if (data.position === position && data.control) { results.push(data.control); }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Returns the status of any scheduled or pending animations for the given {@link TJSPosition} instance.\r\n    *\r\n    * @param position - TJSPosition instance.\r\n    *\r\n    * @param [options] - Scheduling options.\r\n    *\r\n    * @returns True if scheduled / false if not.\r\n    */\r\n   static isScheduled(position: TJSPosition, { active = true, pending = true }:\r\n    AnimationAPI.ScheduleOptions = {}): boolean\r\n   {\r\n      if (active)\r\n      {\r\n         for (let cntr: number = AnimationManager.#activeList.length; --cntr >= 0;)\r\n         {\r\n            if (AnimationManager.#activeList[cntr].position === position) { return true; }\r\n         }\r\n      }\r\n\r\n      if (pending)\r\n      {\r\n         for (let cntr: number = AnimationManager.#pendingList.length; --cntr >= 0;)\r\n         {\r\n            if (AnimationManager.#pendingList[cntr].position === position) { return true; }\r\n         }\r\n      }\r\n\r\n      return false;\r\n   }\r\n}\r\n","import type { Data }          from './types';\nimport type { TransformAPI }  from '../transform/types';\n\n/**\n * Defines stored positional data.\n */\nexport class TJSPositionData implements Data.TJSPositionData\n{\n   height: number | 'auto' | 'inherit' | null;\n   left: number | null;\n   maxHeight: number | null;\n   maxWidth: number | null;\n   minHeight: number | null;\n   minWidth: number | null;\n   rotateX: number | null;\n   rotateY: number | null;\n   rotateZ: number | null;\n   scale: number | null;\n\n   top: number | null;\n\n   transformOrigin: TransformAPI.TransformOrigin | null;\n\n   translateX: number | null;\n   translateY: number | null;\n   translateZ: number | null;\n\n   width: number | 'auto' | 'inherit' | null\n\n   zIndex: number | null;\n\n   /**\n    * @param [opts] - Options.\n    *\n    * @param [opts.height] -\n    *\n    * @param [opts.left] -\n    *\n    * @param [opts.maxHeight] -\n    *\n    * @param [opts.maxWidth] -\n    *\n    * @param [opts.minHeight] -\n    *\n    * @param [opts.minWidth] -\n    *\n    * @param [opts.rotateX] -\n    *\n    * @param [opts.rotateY] -\n    *\n    * @param [opts.rotateZ] -\n    *\n    * @param [opts.scale] -\n    *\n    * @param [opts.translateX] -\n    *\n    * @param [opts.translateY] -\n    *\n    * @param [opts.translateZ] -\n    *\n    * @param [opts.top] -\n    *\n    * @param [opts.transformOrigin] -\n    *\n    * @param [opts.width] -\n    *\n    * @param [opts.zIndex] -\n    *\n    * @param [opts.rotation] - Alias for `rotateZ`.\n    */\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null,\n    minWidth = null, rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null,\n     translateY = null, translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null }:\n   { height?: number | 'auto' | 'inherit' | null; left?: number | null; maxHeight?: number | null;\n      maxWidth?: number | null; minHeight?: number | null; minWidth?: number | null; rotateX?: number | null;\n       rotateY?: number | null; rotateZ?: number | null; scale?: number | null; translateX?: number | null;\n        translateY?: number | null; translateZ?: number | null; top?: number | null;\n         transformOrigin?: TransformAPI.TransformOrigin | null;\n          width?: number | 'auto' | 'inherit' | null; zIndex?: number | null\n   } = {})\n   {\n      this.height = height;\n      this.left = left;\n      this.maxHeight = maxHeight;\n      this.maxWidth = maxWidth;\n      this.minHeight = minHeight;\n      this.minWidth = minWidth;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.scale = scale;\n      this.top = top;\n\n      this.transformOrigin = transformOrigin;\n\n      this.translateX = translateX;\n      this.translateY = translateY;\n      this.translateZ = translateZ;\n\n      this.width = width;\n\n      this.zIndex = zIndex;\n   }\n}\n","import { TJSPositionData }    from './TJSPositionData';\r\n\r\nimport type { Data }          from './types';\r\nimport type { AnimationAPI }  from '../animation/types';\r\n\r\n/**\r\n * Various internal utilities to work with {@link TJSPositionData}.\r\n */\r\nexport class TJSPositionDataUtil\r\n{\r\n   /**\r\n    * Stores the TJSPositionData properties that can be animated.\r\n    */\r\n   static #animateKeys: ReadonlySet<string> = Object.freeze(new Set([\r\n      // Main keys\r\n      'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\r\n      'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\r\n\r\n      // Aliases\r\n      'rotation'\r\n   ]));\r\n\r\n   /**\r\n    * Stores the TJSPositionData property aliases that can be animated.\r\n    */\r\n   static #animateKeyAliases: ReadonlyMap<string, keyof Data.TJSPositionData> = Object.freeze(\r\n    new Map([['rotation', 'rotateZ' as keyof Data.TJSPositionData]]));\r\n\r\n   /**\r\n    * Provides numeric defaults for all parameters. This is used by {@link TJSPosition.get} to optionally provide\r\n    * numeric defaults.\r\n    */\r\n   static #numericDefaults: Readonly<{ [key: string]: number | null }> = Object.freeze({\r\n      // Other keys\r\n      height: 0,\r\n      left: 0,\r\n      maxHeight: null,\r\n      maxWidth: null,\r\n      minHeight: null,\r\n      minWidth: null,\r\n      top: 0,\r\n      transformOrigin: null,\r\n      width: 0,\r\n      zIndex: null,\r\n\r\n      rotateX: 0,\r\n      rotateY: 0,\r\n      rotateZ: 0,\r\n      scale: 1,\r\n      translateX: 0,\r\n      translateY: 0,\r\n      translateZ: 0\r\n   });\r\n\r\n   /**\r\n    * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\r\n    * {@link TJSPositionData} instance is created.\r\n    *\r\n    * @param source - The source instance to copy from.\r\n    *\r\n    * @param [target] - Target TJSPositionData like object; if one is not provided a new instance is created.\r\n    *\r\n    * @returns The target instance with all TJSPositionData fields.\r\n    */\r\n   static copyData(source: Partial<Data.TJSPositionData>,\r\n    target: Data.TJSPositionData = new TJSPositionData()): TJSPositionData\r\n   {\r\n      target.height = source.height ?? null;\r\n      target.left = source.left ?? null;\r\n      target.maxHeight = source.maxHeight ?? null;\r\n      target.maxWidth = source.maxWidth ?? null;\r\n      target.minHeight = source.minHeight ?? null;\r\n      target.minWidth = source.minWidth ?? null;\r\n      target.rotateX = source.rotateX ?? null;\r\n      target.rotateY = source.rotateY ?? null;\r\n      target.rotateZ = source.rotateZ ?? null;\r\n      target.scale = source.scale ?? null;\r\n      target.top = source.top ?? null;\r\n      target.transformOrigin = source.transformOrigin ?? null;\r\n      target.translateX = source.translateX ?? null;\r\n      target.translateY = source.translateY ?? null;\r\n      target.translateZ = source.translateZ ?? null;\r\n      target.width = source.width ?? null;\r\n      target.zIndex = source.zIndex ?? null;\r\n\r\n      return target;\r\n   }\r\n\r\n   /**\r\n    * Returns the non-aliased animation key.\r\n    *\r\n    * @param key - Animation key / possibly aliased key.\r\n    *\r\n    * @returns Actual non-aliased animation key.\r\n    */\r\n   static getAnimationKey(key: AnimationAPI.AnimationKey): AnimationAPI.AnimationKey\r\n   {\r\n      return this.#animateKeyAliases.get(key) as AnimationAPI.AnimationKey ?? key;\r\n   }\r\n\r\n   /**\r\n    * Queries an object by the given key or otherwise returns any numeric default.\r\n    *\r\n    * @param data - An object to query for the given animation key.\r\n    *\r\n    * @param key - Animation key.\r\n    *\r\n    * @returns Data at key or numeric default.\r\n    */\r\n   static getDataOrDefault(data: { [key: string]: any }, key: keyof Data.TJSPositionData | AnimationAPI.AnimationKey):\r\n    number\r\n   {\r\n      key = this.#animateKeyAliases.get(key) ?? key;\r\n\r\n      return data[key] ?? this.#numericDefaults[key];\r\n   }\r\n\r\n   /**\r\n    * Tests if the given key is an animation key.\r\n    *\r\n    * @param key - A potential animation key.\r\n    *\r\n    * @returns Is animation key.\r\n    */\r\n   static isAnimationKey(key: string): key is AnimationAPI.AnimationKey\r\n   {\r\n      return this.#animateKeys.has(key);\r\n   }\r\n\r\n   /**\r\n    * Sets numeric defaults for a {@link TJSPositionData} like object.\r\n    *\r\n    * @param data - A TJSPositionData like object.\r\n    */\r\n   static setNumericDefaults(data: { [key: string]: any }): void\r\n   {\r\n      // Transform keys\r\n      if (data.rotateX === null) { data.rotateX = 0; }\r\n      if (data.rotateY === null) { data.rotateY = 0; }\r\n      if (data.rotateZ === null) { data.rotateZ = 0; }\r\n      if (data.translateX === null) { data.translateX = 0; }\r\n      if (data.translateY === null) { data.translateY = 0; }\r\n      if (data.translateZ === null) { data.translateZ = 0; }\r\n      if (data.scale === null) { data.scale = 1; }\r\n   }\r\n}\r\n","import { radToDeg }              from '#runtime/math/util';\r\n\r\nimport { TJSPositionDataUtil }   from '../TJSPositionDataUtil';\r\n\r\nimport type { StringMatch }      from './types-local';\r\n\r\nimport type { Data }             from '../types';\r\nimport type { AnimationAPI }     from '../../animation/types';\r\n\r\n/**\r\n * Converts {@link TJSPositionData} properties defined as strings to number values. The string values can be defined\r\n * as relative adjustments with a leading operator. Various unit formats are supported as well.\r\n */\r\nexport class ConvertStringData\r\n{\r\n   /**\r\n    * Animation keys for different processing categories.\r\n    */\r\n   static #animKeyTypes: {\r\n      numPx: ReadonlySet<string>,\r\n      percentParent: ReadonlySet<string>,\r\n      rotationRadTurn: ReadonlySet<string>\r\n   } = {\r\n      // Animation keys that can be specified in `px` converted to a number.\r\n      numPx: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\r\n       'translateX', 'translateY', 'translateZ'])),\r\n\r\n      // Animation keys that can be specified in percentage of parent element constraint.\r\n      percentParent: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width',\r\n       'height'])),\r\n\r\n      // Only rotation animation keys can be specified in `rad` / `turn` converted to a number.\r\n      rotationRadTurn: Object.freeze(new Set(['rotateX', 'rotateY', 'rotateZ', 'rotation']))\r\n   };\r\n\r\n   /**\r\n    * Parses string data values. Relative values must start with leading values '+=', '-=', or '*=' followed by a\r\n    * float / numeric value. IE `+=45` or for percentage '+=10%'. Also handles exact percent value such as `10` or\r\n    * `10%`. Percentage values are based on the current value, parent element constraints, or constraints of the type\r\n    * of value like rotation being bound by 360 degrees.\r\n    *\r\n    * @privateRemarks\r\n    * TODO: In the future support more specific CSS unit types.\r\n    */\r\n   static #regexStringData: RegExp = /^(?<operation>[-+*]=)?(?<value>-?\\d*\\.?\\d+)(?<unit>%|%~|px|rad|turn)?$/;\r\n\r\n   /**\r\n    * Stores the results for match groups from `regexStringData`;\r\n    */\r\n   static #matchResults: StringMatch = Object.seal({\r\n      operation: void 0,\r\n      value: 0,\r\n      unit: void 0\r\n   });\r\n\r\n   /**\r\n    * Converts any relative string values for animatable keys to actual updates performed against current data.\r\n    *\r\n    * @param data - position data.\r\n    *\r\n    * @param position - The source position data.\r\n    *\r\n    * @param el - Target positioned element.\r\n    *\r\n    * @returns Converted data.\r\n    */\r\n   static process(data: Data.TJSPositionDataRelative,\r\n    position: Partial<Data.TJSPositionData>, el: Element): Data.TJSPositionData\r\n   {\r\n      // Used in `%` calculations. The first `%` conversion that requires parent element height and width will attempt\r\n      // to cache the parent element client height & width of the given element.\r\n      let parentClientHeight: number = Number.NaN;\r\n      let parentClientWidth: number = Number.NaN;\r\n\r\n      for (const key in data)\r\n      {\r\n         // Key is animatable / numeric.\r\n         if (TJSPositionDataUtil.isAnimationKey(key))\r\n         {\r\n            const value: string | number | null | undefined = data[key];\r\n\r\n            if (typeof value !== 'string') { continue; }\r\n\r\n            // Ignore 'auto' and 'inherit' string values.\r\n            if (value === 'auto' || value === 'inherit') { continue; }\r\n\r\n            const animKey: AnimationAPI.AnimationKey = key;\r\n\r\n            const regexResults: RegExpExecArray | null = this.#regexStringData.exec(value);\r\n\r\n            // Additional state indicating a particular key is handled.\r\n            let handled: boolean = false;\r\n\r\n            if (regexResults && regexResults.groups)\r\n            {\r\n               const results: StringMatch = this.#matchResults;\r\n\r\n               results.operation = regexResults.groups.operation;\r\n               results.value = parseFloat(regexResults.groups.value);\r\n               results.unit = regexResults.groups.unit;\r\n\r\n               // Retrieve current value, but if null use the numeric default.\r\n               const current: number = TJSPositionDataUtil.getDataOrDefault(position, key);\r\n\r\n               switch (results.unit)\r\n               {\r\n                  // Animation keys that support percentage changes including constraints against the parent element.\r\n                  case '%':\r\n                  {\r\n                     // Cache parent client width / height on first parent percent based key.\r\n                     if (this.#animKeyTypes.percentParent.has(key) && (Number.isNaN(parentClientHeight) ||\r\n                      Number.isNaN(parentClientWidth)))\r\n                     {\r\n                        if (el?.parentElement?.isConnected)\r\n                        {\r\n                           parentClientHeight = el.parentElement.clientHeight;\r\n                           parentClientWidth = el.parentElement.clientWidth;\r\n                        }\r\n                        else\r\n                        {\r\n                           parentClientHeight = 0;\r\n                           parentClientWidth = 0;\r\n\r\n                           console.warn(\r\n                            `TJSPosition - ConvertStringData warning: could not determine parent constraints for key '${\r\n                             key}' with value '${value}'.`);\r\n                           data[key] = void 0;\r\n                           continue;\r\n                        }\r\n                     }\r\n\r\n                     handled = this.#handlePercent(animKey, current, data, results, parentClientHeight,\r\n                      parentClientWidth);\r\n\r\n                     break;\r\n                  }\r\n\r\n                  // Animation keys that support percentage changes from current values.\r\n                  case '%~':\r\n                     handled = this.#handleRelativePercent(animKey, current, data, results);\r\n                     break;\r\n\r\n                  // Animation keys that support `px` / treat as raw number.\r\n                  case 'px':\r\n                     handled = this.#animKeyTypes.numPx.has(key) ?\r\n                      this.#applyResultsValue(animKey, current, data, results) : false;\r\n                     break;\r\n\r\n                  // Only rotation animation keys support `rad` / `turn`.\r\n                  case 'rad':\r\n                  case 'turn':\r\n                     handled = this.#animKeyTypes.rotationRadTurn.has(key) ?\r\n                      this.#handleRotationRadTurn(animKey, current, data, results) : false;\r\n                     break;\r\n\r\n                  // No units / treat as raw number.\r\n                  default:\r\n                     handled = this.#applyResultsValue(animKey, current, data, results);\r\n                     break;\r\n               }\r\n            }\r\n\r\n            if (!regexResults || !handled)\r\n            {\r\n               console.warn(\r\n                `TJSPosition - ConvertStringData warning: malformed key '${key}' with value '${value}'.`);\r\n               data[key] = void 0;\r\n            }\r\n         }\r\n      }\r\n\r\n      return data as Data.TJSPositionData;\r\n   }\r\n\r\n   // Internal implementation ----------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Provides the common update to source data after `results.value` has been converted to the proper value\r\n    * respectively.\r\n    *\r\n    * @param key - Animation key.\r\n    *\r\n    * @param current - Current value\r\n    *\r\n    * @param data - Source data to convert.\r\n    *\r\n    * @param results - Match results.\r\n    *\r\n    * @returns Adjustment successful.\r\n    */\r\n   static #applyResultsValue(key: AnimationAPI.AnimationKey, current: number,\r\n                             data: Data.TJSPositionDataRelative, results: StringMatch): boolean\r\n   {\r\n      if (!results.operation)\r\n      {\r\n         data[key] = results.value;\r\n         return true;\r\n      }\r\n\r\n      switch (results.operation)\r\n      {\r\n         case '-=':\r\n            data[key] = current - results.value;\r\n            break;\r\n\r\n         case '+=':\r\n            data[key] = current + results.value;\r\n            break;\r\n\r\n         case '*=':\r\n            data[key] = current * results.value;\r\n            break;\r\n\r\n         default:\r\n            return false;\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Handles the `%` unit type where values are adjusted against the parent element client width / height or in the\r\n    * case of rotation the percentage of 360 degrees.\r\n    *\r\n    * @param key - Animation key.\r\n    *\r\n    * @param current - Current value\r\n    *\r\n    * @param data - Source data to convert.\r\n    *\r\n    * @param results - Match results.\r\n    *\r\n    * @param parentClientHeight - Parent element client height.\r\n    *\r\n    * @param parentClientWidth - Parent element client width.\r\n    *\r\n    * @returns Adjustment successful.\r\n    */\r\n   static #handlePercent(key: AnimationAPI.AnimationKey, current: number, data: Data.TJSPositionDataRelative,\r\n    results: StringMatch, parentClientHeight: number, parentClientWidth: number): boolean\r\n   {\r\n      switch (key)\r\n      {\r\n         // Calculate value; take into account keys that calculate parent client width.\r\n         case 'left':\r\n         case 'maxWidth':\r\n         case 'minWidth':\r\n         case 'width':\r\n         case 'translateX':\r\n            results.value = parentClientWidth * (results.value / 100);\r\n            break;\r\n\r\n         // Calculate value; take into account keys that calculate parent client height.\r\n         case 'top':\r\n         case 'maxHeight':\r\n         case 'minHeight':\r\n         case 'height':\r\n         case 'translateY':\r\n            results.value = parentClientHeight * (results.value / 100);\r\n            break;\r\n\r\n         // Calculate value; convert percentage into degrees\r\n         case 'rotateX':\r\n         case 'rotateY':\r\n         case 'rotateZ':\r\n         case 'rotation':\r\n            results.value = 360 * (results.value / 100);\r\n            break;\r\n\r\n         default:\r\n            return false;\r\n      }\r\n\r\n      return this.#applyResultsValue(key, current, data, results);\r\n   }\r\n\r\n   /**\r\n    * Handles the `%~` unit type where values are adjusted against the current value for the given key.\r\n    *\r\n    * @param key - Animation key.\r\n    *\r\n    * @param current - Current value\r\n    *\r\n    * @param data - Source data to convert.\r\n    *\r\n    * @param results - Match results.\r\n    *\r\n    * @returns Adjustment successful.\r\n    */\r\n   static #handleRelativePercent(key: AnimationAPI.AnimationKey, current: number, data: Data.TJSPositionDataRelative,\r\n    results: StringMatch): boolean\r\n   {\r\n      // Normalize percentage.\r\n      results.value = results.value / 100;\r\n\r\n      if (!results.operation)\r\n      {\r\n         data[key] = current * results.value;\r\n         return true;\r\n      }\r\n\r\n      switch (results.operation)\r\n      {\r\n         case '-=':\r\n            data[key] = current - (current * results.value);\r\n            break;\r\n\r\n         case '+=':\r\n            data[key] = current + (current * results.value);\r\n            break;\r\n\r\n         case '*=':\r\n            data[key] = current * (current * results.value);\r\n            break;\r\n\r\n         default:\r\n            return false;\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Handles the `rad` / `turn` unit types for rotation animation keys.\r\n    *\r\n    * @param key - Animation key.\r\n    *\r\n    * @param current - Current value\r\n    *\r\n    * @param data - Source data to convert.\r\n    *\r\n    * @param results - Match results.\r\n    *\r\n    * @returns Adjustment successful.\r\n    */\r\n   static #handleRotationRadTurn(key: AnimationAPI.AnimationKey, current: number, data: Data.TJSPositionDataRelative,\r\n    results: StringMatch): boolean\r\n   {\r\n      // Convert radians / turn into degrees.\r\n      switch (results.unit)\r\n      {\r\n         case 'rad':\r\n            results.value = radToDeg(results.value);\r\n            break;\r\n\r\n         case 'turn':\r\n            results.value = 360 * results.value;\r\n            break;\r\n      }\r\n\r\n      return this.#applyResultsValue(key, current, data, results);\r\n   }\r\n}\r\n","import { Mat4, Vec3 }   from '#runtime/math/gl-matrix';\n\nimport { TransformAPI } from './types';\n\n/**\n * Provides the output data for {@link TransformAPI.getData}.\n */\nexport class TJSTransformData implements TransformAPI.TransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    */\n   #boundingRect: DOMRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screen space clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    */\n   #corners: Vec3[] = [new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\n   /**\n    * Stores the current gl-matrix Mat4 data.\n    */\n   #mat4: Mat4 = new Mat4();\n\n   /**\n    * Stores the pre-origin & post-origin translations to apply to matrix transforms.\n    */\n   #originTranslations: Mat4[] = [new Mat4(), new Mat4()];\n\n   /**\n    * @returns The bounding rectangle.\n    */\n   get boundingRect(): DOMRect { return this.#boundingRect; }\n\n   /**\n    * @returns The transformed corner points as Vec3 in screen space.\n    */\n   get corners(): Vec3[] { return this.#corners; }\n\n   /**\n    * @returns Returns the CSS style string for the transform matrix.\n    */\n   get css(): string { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns The transform matrix.\n    */\n   get mat4(): Mat4 { return this.#mat4; }\n\n   /**\n    * @returns The pre / post translation matrices for origin translation.\n    */\n   get originTranslations(): Mat4[] { return this.#originTranslations; }\n}\n","/**\n * Provides type guards for `Number`.\n */\nexport class NumberGuard\n{\n   private constructor() {}\n\n   static isFinite(value: unknown): value is number {\n      return typeof value === 'number' && Number.isFinite(value);\n   }\n\n   static isFiniteOrNull(value: unknown): value is number | null {\n      return value === null || (typeof value === 'number' && Number.isFinite(value));\n   }\n}\n","import { writable }                 from 'svelte/store';\r\n\r\nimport { propertyStore }            from '#runtime/svelte/store/writable-derived';\r\nimport { A11yHelper }               from '#runtime/util/a11y';\r\nimport { StyleParse }               from '#runtime/util/dom/style';\r\n\r\nimport type { Writable }            from 'svelte/store';\r\n\r\nimport type { ResizeObserverData }  from '#runtime/util/dom/observer';\r\n\r\n/**\r\n * Caches computed styles of a {@link TJSPosition} target element.\r\n */\r\nexport class TJSPositionStyleCache\r\n{\r\n   el: HTMLElement | undefined;\r\n   computed: CSSStyleDeclaration | undefined;\r\n\r\n   marginLeft: number | undefined;\r\n   marginTop: number | undefined;\r\n   maxHeight: number | undefined;\r\n   maxWidth: number | undefined;\r\n   minHeight: number | undefined;\r\n   minWidth: number | undefined;\r\n\r\n   hasWillChange: boolean;\r\n\r\n   stores: {\r\n      element: Writable<HTMLElement | undefined>,\r\n      resizeContentHeight: Writable<number | undefined>,\r\n      resizeContentWidth: Writable<number | undefined>,\r\n      resizeObserved: Writable<ResizeObserverData.ResizeObject>,\r\n      resizeObservable: Writable<boolean>,\r\n      resizeOffsetHeight: Writable<number | undefined>,\r\n      resizeOffsetWidth: Writable<number | undefined>\r\n   }\r\n\r\n   resizeObserved: ResizeObserverData.ResizeObject;\r\n\r\n   constructor()\r\n   {\r\n      this.el = void 0;\r\n      this.computed = void 0;\r\n      this.marginLeft = void 0;\r\n      this.marginTop = void 0;\r\n      this.maxHeight = void 0;\r\n      this.maxWidth = void 0;\r\n      this.minHeight = void 0;\r\n      this.minWidth = void 0;\r\n\r\n      this.hasWillChange = false;\r\n\r\n      this.resizeObserved = Object.seal({\r\n         contentHeight: void 0,\r\n         contentWidth: void 0,\r\n         offsetHeight: void 0,\r\n         offsetWidth: void 0\r\n      });\r\n\r\n      /**\r\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\r\n       */\r\n      const storeResizeObserved: Writable<ResizeObserverData.ResizeObject> = writable(this.resizeObserved);\r\n\r\n      this.stores = {\r\n         element: writable(this.el),\r\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\r\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\r\n         resizeObserved: storeResizeObserved,\r\n         resizeObservable: writable(false),\r\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\r\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\r\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\r\n    * directly is more expensive and alters the execution order of an animation frame.\r\n    *\r\n    * @returns The element offsetHeight.\r\n    */\r\n   get offsetHeight(): number\r\n   {\r\n      if (this.el !== void 0 && A11yHelper.isFocusTarget(this.el))\r\n      {\r\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\r\n      }\r\n\r\n      throw new Error(`TJSPositionStyleCache - get offsetHeight error: no element assigned.`);\r\n   }\r\n\r\n   /**\r\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\r\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\r\n    * directly is more expensive and alters the execution order of an animation frame.\r\n    *\r\n    * @returns The element offsetHeight.\r\n    */\r\n   get offsetWidth(): number\r\n   {\r\n      if (this.el !== void 0 && A11yHelper.isFocusTarget(this.el))\r\n      {\r\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\r\n      }\r\n\r\n      throw new Error(`TJSPositionStyleCache - get offsetWidth error: no element assigned.`);\r\n   }\r\n\r\n   /**\r\n    * @param el -\r\n    *\r\n    * @returns Does element match cached element.\r\n    */\r\n   hasData(el: HTMLElement): boolean { return this.el === el; }\r\n\r\n   /**\r\n    * Resets the style cache.\r\n    */\r\n   reset(): void\r\n   {\r\n      // Remove will-change inline style from previous element if it is still connected.\r\n      if (this.el !== void 0 && A11yHelper.isFocusTarget(this.el) && this.el.isConnected && !this.hasWillChange)\r\n      {\r\n         this.el.style.willChange = '';\r\n      }\r\n\r\n      this.el = void 0;\r\n      this.computed = void 0;\r\n      this.marginLeft = void 0;\r\n      this.marginTop = void 0;\r\n      this.maxHeight = void 0;\r\n      this.maxWidth = void 0;\r\n      this.minHeight = void 0;\r\n      this.minWidth = void 0;\r\n\r\n      this.hasWillChange = false;\r\n\r\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\r\n      this.resizeObserved.contentHeight = void 0;\r\n      this.resizeObserved.contentWidth = void 0;\r\n      this.resizeObserved.offsetHeight = void 0;\r\n      this.resizeObserved.offsetWidth = void 0;\r\n\r\n      // Reset the tracked element this TJSPosition instance is modifying.\r\n      this.stores.element.set(void 0);\r\n   }\r\n\r\n   /**\r\n    * Updates the style cache with new data from the given element.\r\n    *\r\n    * @param el - An HTML element.\r\n    */\r\n   update(el: HTMLElement): void\r\n   {\r\n      this.el = el;\r\n\r\n      this.computed = globalThis.getComputedStyle(el);\r\n\r\n      this.marginLeft = StyleParse.pixels(el.style.marginLeft) ?? StyleParse.pixels(this.computed.marginLeft);\r\n      this.marginTop = StyleParse.pixels(el.style.marginTop) ?? StyleParse.pixels(this.computed.marginTop);\r\n      this.maxHeight = StyleParse.pixels(el.style.maxHeight) ?? StyleParse.pixels(this.computed.maxHeight);\r\n      this.maxWidth = StyleParse.pixels(el.style.maxWidth) ?? StyleParse.pixels(this.computed.maxWidth);\r\n\r\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\r\n      this.minHeight = StyleParse.pixels(el.style.minHeight) ?? StyleParse.pixels(this.computed.minHeight);\r\n      this.minWidth = StyleParse.pixels(el.style.minWidth) ?? StyleParse.pixels(this.computed.minWidth);\r\n\r\n      // Tracks if there already is a will-change property on the inline or computed styles.\r\n      const willChange: string = el.style.willChange !== '' ? el.style.willChange : this.computed.willChange ?? '';\r\n\r\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\r\n\r\n      // Update the tracked element this TJSPosition instance is modifying.\r\n      this.stores.element.set(el);\r\n   }\r\n}\r\n","import { degToRad }              from '#runtime/math/util';\r\nimport { Mat4, Vec3 }            from '#runtime/math/gl-matrix';\r\n\r\nimport { TJSTransformData }      from './TJSTransformData';\r\nimport { NumberGuard }           from '../util';\r\n\r\nimport type {\r\n   Mat4Like,\r\n   Vec3Like }                    from '#runtime/math/gl-matrix';\r\n\r\nimport type { TransformAPI }     from \"./types\";\r\nimport type { ValidationData }   from './types-local';\r\n\r\nimport type { Data }             from '../data/types';\r\n\r\n/**\r\n *\r\n */\r\nexport class TJSTransforms implements TransformAPI\r\n{\r\n   /**\r\n    * Stores transform data.\r\n    */\r\n   #data: Partial<Data.TJSPositionData> = {};\r\n\r\n   /**\r\n    * Stores the transform keys in the order added.\r\n    */\r\n   #orderList: string[] = [];\r\n\r\n   /**\r\n    * Defines the keys of TJSPositionData that are transform keys.\r\n    */\r\n   static #transformKeys: Readonly<Array<Data.TransformKeys>> = Object.freeze([\r\n      'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'\r\n   ]);\r\n\r\n   /**\r\n    * Validates that a given key is a transform key.\r\n    *\r\n    * @param key - A potential transform key.\r\n    */\r\n   static #isTransformKey(key: string): key is Data.TransformKeys\r\n   {\r\n      return this.#transformKeys.includes(key as Data.TransformKeys);\r\n   }\r\n\r\n   /**\r\n    * Defines bitwise keys for transforms used in {@link TJSTransforms.getMat4}.\r\n    */\r\n   static #transformKeysBitwise: Readonly<Record<string, number>> = Object.freeze({\r\n      rotateX: 1,\r\n      rotateY: 2,\r\n      rotateZ: 4,\r\n      scale: 8,\r\n      translateX: 16,\r\n      translateY: 32,\r\n      translateZ: 64\r\n   });\r\n\r\n   /**\r\n    * Defines the default transform origin.\r\n    */\r\n   static #transformOriginDefault: Readonly<TransformAPI.TransformOrigin> = 'top left';\r\n\r\n   /**\r\n    * Defines the valid transform origins.\r\n    */\r\n   static #transformOrigins: readonly TransformAPI.TransformOrigin[] = Object.freeze([\r\n      'top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left', 'bottom center',\r\n      'bottom right'\r\n   ]);\r\n\r\n   /**\r\n    * Defines a valid Set of transform origins.\r\n    */\r\n   static #transformOriginsSet: ReadonlySet<string> = Object.freeze(new Set(this.#transformOrigins));\r\n\r\n   // Temporary variables --------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    */\r\n   static #mat4Result: Mat4 = new Mat4();\r\n\r\n   /**\r\n    */\r\n   static #mat4Temp: Mat4 = new Mat4();\r\n\r\n   /**\r\n    */\r\n   static #vec3Temp: Vec3 = new Vec3();\r\n\r\n   /**\r\n    */\r\n   static #vectorScale: Vec3Like = [1, 1, 1];\r\n\r\n   /**\r\n    */\r\n   static #vectorTranslate: Vec3Like = [0, 0, 0];\r\n\r\n   /**\r\n    * Returns a list of supported transform origins.\r\n    *\r\n    * @returns The supported transform origin strings.\r\n    */\r\n   static get transformOrigins(): readonly TransformAPI.TransformOrigin[]\r\n   {\r\n      return this.#transformOrigins;\r\n   }\r\n\r\n   /**\r\n    * Returns whether the given string is a {@link TransformAPI.TransformOrigin}.\r\n    *\r\n    * @param origin - A potential transform origin string.\r\n    *\r\n    * @returns True if origin is a TransformOrigin string.\r\n    */\r\n   static isTransformOrigin(origin: unknown): origin is TransformAPI.TransformOrigin\r\n   {\r\n      return this.#transformOriginsSet.has(origin as string);\r\n   }\r\n\r\n   /**\r\n    * @returns Whether there are active transforms in local data.\r\n    */\r\n   get isActive(): boolean { return this.#orderList.length > 0; }\r\n\r\n   /**\r\n    * @returns Any local rotateX data.\r\n    */\r\n   get rotateX(): number | null | undefined { return this.#data.rotateX; }\r\n\r\n   /**\r\n    * @returns Any local rotateY data.\r\n    */\r\n   get rotateY(): number | null | undefined { return this.#data.rotateY; }\r\n\r\n   /**\r\n    * @returns Any local rotateZ data.\r\n    */\r\n   get rotateZ(): number | null | undefined { return this.#data.rotateZ; }\r\n\r\n   /**\r\n    * @returns Any local rotateZ scale.\r\n    */\r\n   get scale(): number | null | undefined { return this.#data.scale; }\r\n\r\n   /**\r\n    * @returns Any local translateZ data.\r\n    */\r\n   get translateX(): number | null | undefined { return this.#data.translateX; }\r\n\r\n   /**\r\n    * @returns Any local translateZ data.\r\n    */\r\n   get translateY(): number | null | undefined { return this.#data.translateY; }\r\n\r\n   /**\r\n    * @returns Any local translateZ data.\r\n    */\r\n   get translateZ(): number | null | undefined { return this.#data.translateZ; }\r\n\r\n   /**\r\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set rotateX(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.rotateX === void 0) { this.#orderList.push('rotateX'); }\r\n\r\n         this.#data.rotateX = value;\r\n      }\r\n      else\r\n      {\r\n         if (this.#data.rotateX !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.rotateX;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set rotateY(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.rotateY === void 0) { this.#orderList.push('rotateY'); }\r\n\r\n         this.#data.rotateY = value;\r\n      }\r\n      else\r\n      {\r\n         if (this.#data.rotateY !== void 0)\r\n         {\r\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.rotateY;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set rotateZ(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\r\n\r\n         this.#data.rotateZ = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this.#data.rotateZ !== void 0)\r\n         {\r\n            const index: number = this.#orderList.findIndex((entry: string): boolean => entry === 'rotateZ');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.rotateZ;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set scale(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.scale === void 0) { this.#orderList.push('scale'); }\r\n\r\n         this.#data.scale = value;\r\n      }\r\n      else\r\n      {\r\n         if (this.#data.scale !== void 0)\r\n         {\r\n            const index: number = this.#orderList.findIndex((entry: string): boolean => entry === 'scale');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.scale;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set translateX(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.translateX === void 0) { this.#orderList.push('translateX'); }\r\n\r\n         this.#data.translateX = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this.#data.translateX !== void 0)\r\n         {\r\n            const index: number = this.#orderList.findIndex((entry: string): boolean => entry === 'translateX');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.translateX;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set translateY(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.translateY === void 0) { this.#orderList.push('translateY'); }\r\n\r\n         this.#data.translateY = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this.#data.translateY !== void 0)\r\n         {\r\n            const index: number = this.#orderList.findIndex((entry: string): boolean => entry === 'translateY');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.translateY;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\r\n    *\r\n    * @param value - A value to set.\r\n    */\r\n   set translateZ(value: number | null | undefined)\r\n   {\r\n      if (Number.isFinite(value))\r\n      {\r\n         if (this.#data.translateZ === void 0) { this.#orderList.push('translateZ'); }\r\n\r\n         this.#data.translateZ = value;\r\n      }\r\n\r\n      else\r\n      {\r\n         if (this.#data.translateZ !== void 0)\r\n         {\r\n            const index: number = this.#orderList.findIndex((entry: string): boolean => entry === 'translateZ');\r\n            if (index >= 0) { this.#orderList.splice(index, 1); }\r\n         }\r\n\r\n         delete this.#data.translateZ;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns the `matrix3d` CSS transform for the given position / transform data.\r\n    *\r\n    * @param [data] - Optional position data otherwise use local stored transform data.\r\n    *\r\n    * @returns The CSS `matrix3d` string.\r\n    */\r\n   getCSS(data: Partial<Data.TJSPositionData> = this.#data): string\r\n   {\r\n      return `matrix3d(${this.getMat4(data, TJSTransforms.#mat4Result).join(',')})`;\r\n   }\r\n\r\n   /**\r\n    * Returns the `matrix3d` CSS transform for the given position / transform data.\r\n    *\r\n    * @param [data] - Optional position data otherwise use local stored transform data.\r\n    *\r\n    * @returns The CSS `matrix3d` string.\r\n    */\r\n   getCSSOrtho(data: Partial<Data.TJSPositionData> = this.#data): string\r\n   {\r\n      return `matrix3d(${this.getMat4Ortho(data, TJSTransforms.#mat4Result).join(',')})`;\r\n   }\r\n\r\n   /**\r\n    * Collects all data including a bounding rect, transform matrix, and points array of the given\r\n    * {@link TJSPositionData} instance with the applied local transform data.\r\n    *\r\n    * @param position - The position data to process.\r\n    *\r\n    * @param [output] - Optional TJSTransformData output instance.\r\n    *\r\n    * @param [validationData] - Optional validation data for adjustment parameters.\r\n    *\r\n    * @returns The output TJSTransformData instance.\r\n    */\r\n   getData(position: Data.TJSPositionData,\r\n    output: TransformAPI.TransformData = new TJSTransformData(), validationData?: ValidationData):\r\n     TransformAPI.TransformData\r\n   {\r\n      const valWidth: number = validationData?.width ?? 0;\r\n      const valHeight: number = validationData?.height ?? 0;\r\n      const valOffsetTop: number = validationData?.offsetTop ?? validationData?.marginTop ?? 0;\r\n      const valOffsetLeft: number = validationData?.offsetLeft ?? validationData?.marginLeft ?? 0;\r\n\r\n      position.top! += valOffsetTop;\r\n      position.left! += valOffsetLeft;\r\n\r\n      const width: number = NumberGuard.isFinite(position.width) ? position.width : valWidth;\r\n      const height: number = NumberGuard.isFinite(position.height) ? position.height : valHeight;\r\n\r\n      const rect: Vec3[] = output.corners;\r\n\r\n      if (this.hasTransform(position))\r\n      {\r\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\r\n         rect[1][0] = width;\r\n         rect[1][1] = rect[1][2] = 0;\r\n         rect[2][0] = width;\r\n         rect[2][1] = height;\r\n         rect[2][2] = 0;\r\n         rect[3][0] = 0;\r\n         rect[3][1] = height;\r\n         rect[3][2] = 0;\r\n\r\n         const matrix: Mat4Like = this.getMat4(position, output.mat4);\r\n\r\n         const translate: Mat4[] = TJSTransforms.#getOriginTranslation(position.transformOrigin, width, height,\r\n          output.originTranslations);\r\n\r\n         if (TJSTransforms.#transformOriginDefault === position.transformOrigin)\r\n         {\r\n            Vec3.transformMat4(rect[0], rect[0], matrix);\r\n            Vec3.transformMat4(rect[1], rect[1], matrix);\r\n            Vec3.transformMat4(rect[2], rect[2], matrix);\r\n            Vec3.transformMat4(rect[3], rect[3], matrix);\r\n         }\r\n         else\r\n         {\r\n            Vec3.transformMat4(rect[0], rect[0], translate[0]);\r\n            Vec3.transformMat4(rect[0], rect[0], matrix);\r\n            Vec3.transformMat4(rect[0], rect[0], translate[1]);\r\n\r\n            Vec3.transformMat4(rect[1], rect[1], translate[0]);\r\n            Vec3.transformMat4(rect[1], rect[1], matrix);\r\n            Vec3.transformMat4(rect[1], rect[1], translate[1]);\r\n\r\n            Vec3.transformMat4(rect[2], rect[2], translate[0]);\r\n            Vec3.transformMat4(rect[2], rect[2], matrix);\r\n            Vec3.transformMat4(rect[2], rect[2], translate[1]);\r\n\r\n            Vec3.transformMat4(rect[3], rect[3], translate[0]);\r\n            Vec3.transformMat4(rect[3], rect[3], matrix);\r\n            Vec3.transformMat4(rect[3], rect[3], translate[1]);\r\n         }\r\n\r\n         rect[0][0] = position.left! + rect[0][0];\r\n         rect[0][1] = position.top! + rect[0][1];\r\n         rect[1][0] = position.left! + rect[1][0];\r\n         rect[1][1] = position.top! + rect[1][1];\r\n         rect[2][0] = position.left! + rect[2][0];\r\n         rect[2][1] = position.top! + rect[2][1];\r\n         rect[3][0] = position.left! + rect[3][0];\r\n         rect[3][1] = position.top! + rect[3][1];\r\n      }\r\n      else\r\n      {\r\n         rect[0][0] = position.left!;\r\n         rect[0][1] = position.top!;\r\n         rect[1][0] = position.left! + width;\r\n         rect[1][1] = position.top!;\r\n         rect[2][0] = position.left! + width;\r\n         rect[2][1] = position.top! + height;\r\n         rect[3][0] = position.left!;\r\n         rect[3][1] = position.top! + height;\r\n\r\n         Mat4.identity(output.mat4);\r\n      }\r\n\r\n      let maxX: number = Number.MIN_SAFE_INTEGER;\r\n      let maxY: number = Number.MIN_SAFE_INTEGER;\r\n      let minX: number = Number.MAX_SAFE_INTEGER;\r\n      let minY: number = Number.MAX_SAFE_INTEGER;\r\n\r\n      for (let cntr: number = 4; --cntr >= 0;)\r\n      {\r\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\r\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\r\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\r\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\r\n      }\r\n\r\n      const boundingRect = output.boundingRect;\r\n      boundingRect.x = minX;\r\n      boundingRect.y = minY;\r\n      boundingRect.width = maxX - minX;\r\n      boundingRect.height = maxY - minY;\r\n\r\n      position.top! -= valOffsetTop;\r\n      position.left! -= valOffsetLeft;\r\n\r\n      return output;\r\n   }\r\n\r\n   /**\r\n    * Creates a transform matrix based on local data applied in order it was added.\r\n    *\r\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\r\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\r\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\r\n    *\r\n    * @param [data] - TJSPositionData instance or local transform data.\r\n    *\r\n    * @param [output] - The output mat4 instance.\r\n    *\r\n    * @returns Transform matrix.\r\n    */\r\n   getMat4(data: Partial<Data.TJSPositionData> = this.#data, output: Mat4 = new Mat4()): Mat4\r\n   {\r\n      const matrix: Mat4 = Mat4.identity(output) as Mat4;\r\n\r\n      // Bitwise tracks applied transform keys from local transform data.\r\n      let seenKeys: number = 0;\r\n\r\n      const orderList: string[] = this.#orderList;\r\n\r\n      // First apply ordered transforms from local transform data.\r\n      for (let cntr: number = 0; cntr < orderList.length; cntr++)\r\n      {\r\n         const key: string = orderList[cntr];\r\n\r\n         switch (key)\r\n         {\r\n            case 'rotateX':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n               break;\r\n\r\n            case 'rotateY':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n               break;\r\n\r\n            case 'rotateZ':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n               break;\r\n\r\n            case 'scale':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.scale;\r\n               TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data[key] ?? 0;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\r\n               break;\r\n\r\n            case 'translateX':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateX;\r\n               TJSTransforms.#vectorTranslate[0] = data.translateX ?? 0;\r\n               TJSTransforms.#vectorTranslate[1] = 0;\r\n               TJSTransforms.#vectorTranslate[2] = 0;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp,\r\n                TJSTransforms.#vectorTranslate));\r\n               break;\r\n\r\n            case 'translateY':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateY;\r\n               TJSTransforms.#vectorTranslate[0] = 0;\r\n               TJSTransforms.#vectorTranslate[1] = data.translateY ?? 0;\r\n               TJSTransforms.#vectorTranslate[2] = 0;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp,\r\n                TJSTransforms.#vectorTranslate));\r\n               break;\r\n\r\n            case 'translateZ':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateZ;\r\n               TJSTransforms.#vectorTranslate[0] = 0;\r\n               TJSTransforms.#vectorTranslate[1] = 0;\r\n               TJSTransforms.#vectorTranslate[2] = data.translateZ ?? 0;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp,\r\n                TJSTransforms.#vectorTranslate));\r\n               break;\r\n         }\r\n      }\r\n\r\n      // Now apply any new keys not set in local transform data that have not been applied yet.\r\n      if (data !== this.#data)\r\n      {\r\n         for (let cntr: number = 0; cntr < TJSTransforms.#transformKeys.length; cntr++)\r\n         {\r\n            const key: keyof Data.TJSPositionData = TJSTransforms.#transformKeys[cntr];\r\n\r\n            // Reject bad / no data or if the key has already been applied.\r\n            if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) { continue; }\r\n\r\n            const value: number = data[key] as number;\r\n\r\n            switch (key)\r\n            {\r\n               case 'rotateX':\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(value)));\r\n                  break;\r\n\r\n               case 'rotateY':\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(value)));\r\n                  break;\r\n\r\n               case 'rotateZ':\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(value)));\r\n                  break;\r\n\r\n               case 'scale':\r\n                  TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = value;\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\r\n                  break;\r\n\r\n               case 'translateX':\r\n                  TJSTransforms.#vectorTranslate[0] = value;\r\n                  TJSTransforms.#vectorTranslate[1] = 0;\r\n                  TJSTransforms.#vectorTranslate[2] = 0;\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp,\r\n                   TJSTransforms.#vectorTranslate));\r\n                  break;\r\n\r\n               case 'translateY':\r\n                  TJSTransforms.#vectorTranslate[0] = 0;\r\n                  TJSTransforms.#vectorTranslate[1] = value;\r\n                  TJSTransforms.#vectorTranslate[2] = 0;\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp,\r\n                   TJSTransforms.#vectorTranslate));\r\n                  break;\r\n\r\n               case 'translateZ':\r\n                  TJSTransforms.#vectorTranslate[0] = 0;\r\n                  TJSTransforms.#vectorTranslate[1] = 0;\r\n                  TJSTransforms.#vectorTranslate[2] = value;\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp,\r\n                   TJSTransforms.#vectorTranslate));\r\n                  break;\r\n            }\r\n         }\r\n      }\r\n\r\n      return matrix;\r\n   }\r\n\r\n   /**\r\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\r\n    *\r\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes\r\n    * from passed in data to translate X / Y.\r\n    *\r\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\r\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\r\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\r\n    *\r\n    * @param [data] - TJSPositionData instance or local transform data.\r\n    *\r\n    * @param [output] - The output mat4 instance.\r\n    *\r\n    * @returns Transform matrix.\r\n    */\r\n   getMat4Ortho(data: Partial<Data.TJSPositionData> = this.#data, output: Mat4 = new Mat4()): Mat4\r\n   {\r\n      const matrix: Mat4 = Mat4.identity(output) as Mat4;\r\n\r\n      // Attempt to retrieve values from passed in data otherwise default to 0.\r\n      // Always perform the translation last regardless of order added to local transform data.\r\n      // Add data.left to translateX and data.top to translateY.\r\n      TJSTransforms.#vectorTranslate[0] = (data.left ?? 0) + (data.translateX ?? 0);\r\n      TJSTransforms.#vectorTranslate[1] = (data.top ?? 0) + (data.translateY ?? 0);\r\n      TJSTransforms.#vectorTranslate[2] = data.translateZ ?? 0;\r\n      Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\r\n\r\n      // Scale can also be applied out of order.\r\n      if (data.scale !== null && data.scale !== void 0)\r\n      {\r\n         TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data.scale;\r\n         Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\r\n      }\r\n\r\n      // Early out if there is no rotation data.\r\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\r\n\r\n      // Rotation transforms must be applied in the order they are added.\r\n\r\n      // Bitwise tracks applied transform keys from local transform data.\r\n      let seenKeys: number = 0;\r\n\r\n      const orderList: string[] = this.#orderList;\r\n\r\n      // First apply ordered transforms from local transform data.\r\n      for (let cntr: number = 0; cntr < orderList.length; cntr++)\r\n      {\r\n         const key: string = orderList[cntr];\r\n\r\n         switch (key)\r\n         {\r\n            case 'rotateX':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n               break;\r\n\r\n            case 'rotateY':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n               break;\r\n\r\n            case 'rotateZ':\r\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\r\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n               break;\r\n         }\r\n      }\r\n\r\n      // Now apply any new keys not set in local transform data that have not been applied yet.\r\n      if (data !== this.#data)\r\n      {\r\n         for (let cntr: number = 0; cntr < TJSTransforms.#transformKeys.length; cntr++)\r\n         {\r\n            const key: keyof Data.TJSPositionData = TJSTransforms.#transformKeys[cntr];\r\n\r\n            // Reject bad / no data or if the key has already been applied.\r\n            if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) { continue; }\r\n\r\n            switch (key)\r\n            {\r\n               case 'rotateX':\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n                  break;\r\n\r\n               case 'rotateY':\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n                  break;\r\n\r\n               case 'rotateZ':\r\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key] ?? 0)));\r\n                  break;\r\n            }\r\n         }\r\n      }\r\n\r\n      return matrix;\r\n   }\r\n\r\n   /**\r\n    * Tests an object if it contains transform keys and the values are finite numbers.\r\n    *\r\n    * @param data - An object to test for transform data.\r\n    *\r\n    * @returns Whether the given TJSPositionData has transforms.\r\n    */\r\n   hasTransform(data: Partial<Data.TJSPositionData>): boolean\r\n   {\r\n      for (const key of TJSTransforms.#transformKeys)\r\n      {\r\n         if (Number.isFinite(data[key])) { return true; }\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Resets internal data from the given object containing valid transform keys.\r\n    *\r\n    * @param data - An object with transform data.\r\n    */\r\n   reset(data: { [key: string]: any } & Partial<Data.TJSPositionData>): void\r\n   {\r\n      for (const key in data)\r\n      {\r\n         if (TJSTransforms.#isTransformKey(key))\r\n         {\r\n            const value: any = data[key];\r\n\r\n            if (NumberGuard.isFinite(value))\r\n            {\r\n               this.#data[key] = value;\r\n            }\r\n            else\r\n            {\r\n               const index: number = this.#orderList.findIndex((entry: string): boolean => entry === key);\r\n               if (index >= 0) { this.#orderList.splice(index, 1); }\r\n\r\n               delete this.#data[key];\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Internal implementation ----------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\r\n    * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\r\n    * translation.\r\n    *\r\n    * This method is used internally, but may be useful if you need the origin translation matrices to transform\r\n    * bespoke points based on any `transformOrigin` set in {@link TJSPositionData}.\r\n    *\r\n    * @param transformOrigin - The transform origin attribute from TJSPositionData.\r\n    *\r\n    * @param width - The TJSPositionData width or validation data width when 'auto'.\r\n    *\r\n    * @param height - The TJSPositionData height or validation data height when 'auto'.\r\n    *\r\n    * @param output - Output Mat4 array.\r\n    *\r\n    * @returns Output Mat4 array.\r\n    */\r\n   static #getOriginTranslation(transformOrigin: string | null, width: number, height: number, output: Mat4[]): Mat4[]\r\n   {\r\n      const vector: Vec3 = TJSTransforms.#vec3Temp;\r\n\r\n      switch (transformOrigin)\r\n      {\r\n         case 'top left':\r\n            vector[0] = vector[1] = 0;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'top center':\r\n            vector[0] = -width * 0.5;\r\n            vector[1] = 0;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[0] = width * 0.5;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'top right':\r\n            vector[0] = -width;\r\n            vector[1] = 0;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[0] = width;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'center left':\r\n            vector[0] = 0;\r\n            vector[1] = -height * 0.5;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[1] = height * 0.5;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         // By default, null / no transform is 'center'.\r\n         case null:\r\n         case 'center':\r\n            vector[0] = -width * 0.5;\r\n            vector[1] = -height * 0.5;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[0] = width * 0.5;\r\n            vector[1] = height * 0.5;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'center right':\r\n            vector[0] = -width;\r\n            vector[1] = -height * 0.5;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[0] = width;\r\n            vector[1] = height * 0.5;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'bottom left':\r\n            vector[0] = 0;\r\n            vector[1] = -height;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[1] = height;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'bottom center':\r\n            vector[0] = -width * 0.5;\r\n            vector[1] = -height;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[0] = width * 0.5;\r\n            vector[1] = height;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         case 'bottom right':\r\n            vector[0] = -width;\r\n            vector[1] = -height;\r\n            Mat4.fromTranslation(output[0], vector);\r\n            vector[0] = width;\r\n            vector[1] = height;\r\n            Mat4.fromTranslation(output[1], vector);\r\n            break;\r\n\r\n         // No valid transform origin parameter; set identity.\r\n         default:\r\n            Mat4.identity(output[0]);\r\n            Mat4.identity(output[1]);\r\n            break;\r\n      }\r\n\r\n      return output;\r\n   }\r\n}\r\n","import { lerp }                     from '#runtime/math/interpolate';\r\nimport { getEasingFunc }            from '#runtime/svelte/easing';\r\nimport { A11yHelper }               from '#runtime/util/a11y';\r\nimport { isObject }                 from '#runtime/util/object';\r\n\r\nimport { AnimationControl }         from './AnimationControl';\r\nimport { AnimationManager }         from './AnimationManager';\r\n\r\nimport {\r\n   ConvertStringData,\r\n   TJSPositionDataUtil }            from '../data';\r\n\r\nimport { TJSTransforms }            from '../transform';\r\n\r\nimport type { InterpolateFunction } from '#runtime/math/interpolate';\r\nimport type { EasingFunction }      from '#runtime/svelte/easing';\r\nimport type { FocusableElement }    from '#runtime/util/a11y';\r\n\r\nimport type { TJSPosition }         from '../TJSPosition';\r\n\r\nimport type {\r\n   AnimationCleanupFunction,\r\n   AnimationData }                  from './types-local';\r\n\r\nimport type { AnimationAPI }        from './types';\r\nimport type { Data }                from '../data/types';\r\nimport type { TransformAPI }        from '../transform/types';\r\n\r\nexport class AnimationScheduler\r\n{\r\n   /**\r\n    * Used to copy data from a TJSPosition instance.\r\n    */\r\n   static #data: Partial<Data.TJSPositionData> = {};\r\n\r\n   static #getEaseOptions: Readonly<{ default: false }> = Object.freeze({ default: false });\r\n\r\n   /**\r\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\r\n    *\r\n    * @param position -\r\n    *\r\n    * @param initial -\r\n    *\r\n    * @param destination -\r\n    *\r\n    * @param duration -\r\n    *\r\n    * @param el -\r\n    *\r\n    * @param delay -\r\n    *\r\n    * @param ease -\r\n    *\r\n    * @param [interpolate=lerp] -\r\n    *\r\n    * @param [transformOrigin] -\r\n    *\r\n    * @param [transformOriginInitial] -\r\n    *\r\n    * @param [cleanup] -\r\n    *\r\n    * @returns An AnimationControl instance or null if none created.\r\n    */\r\n   static #addAnimation(position: TJSPosition, initial: object, destination: object, duration: number, el: Element,\r\n    delay: number, ease: EasingFunction, interpolate: InterpolateFunction<number> = lerp,\r\n     transformOrigin: TransformAPI.TransformOrigin,\r\n      transformOriginInitial: TransformAPI.TransformOrigin, cleanup: AnimationCleanupFunction):\r\n       AnimationControl | null\r\n   {\r\n      // Set initial data for transform values that are often null by default.\r\n      TJSPositionDataUtil.setNumericDefaults(initial);\r\n      TJSPositionDataUtil.setNumericDefaults(destination);\r\n\r\n      // Reject all initial data that is not a number.\r\n      for (const key in initial)\r\n      {\r\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\r\n      }\r\n\r\n      const keys: string[] = Object.keys(initial);\r\n      const newData: object = Object.assign({}, initial);\r\n\r\n      // Nothing to animate, so return now.\r\n      // TODO handle in respective animation controls.\r\n\r\n      if (keys.length === 0) { return null; }\r\n\r\n      /**\r\n       */\r\n      const animationData: AnimationData = {\r\n         active: true,\r\n         cleanup,\r\n         cancelled: false,\r\n         control: void 0,\r\n         current: 0,\r\n         destination,\r\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\r\n         ease,\r\n         el,\r\n         finished: false,\r\n         initial,\r\n         interpolate,\r\n         keys,\r\n         newData,\r\n         position,\r\n         resolve: void 0,\r\n         start: void 0,\r\n         transformOrigin,\r\n         transformOriginInitial,\r\n         quickTo: false\r\n      };\r\n\r\n      if (delay > 0)\r\n      {\r\n         animationData.active = false;\r\n\r\n         // Delay w/ setTimeout and make active w/ AnimationManager.\r\n         setTimeout(() => animationData.active = true, delay * 1000);\r\n      }\r\n\r\n      // Schedule immediately w/ AnimationManager\r\n      AnimationManager.add(animationData);\r\n\r\n      // Create animation control\r\n      return new AnimationControl(animationData, true);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween from given position data to the current position.\r\n    *\r\n    * @param position - The target position instance.\r\n    *\r\n    * @param fromData - The starting position.\r\n    *\r\n    * @param options - Tween options.\r\n    *\r\n    * @param [cleanup] - Custom animation cleanup function.\r\n    *\r\n    * @returns An AnimationControl instance or null if none created.\r\n    */\r\n   static from(position: TJSPosition, fromData: Data.TJSPositionDataRelative,\r\n    options: AnimationAPI.TweenOptions = {}, cleanup?: AnimationCleanupFunction): AnimationControl | null\r\n   {\r\n      if (!isObject(fromData))\r\n      {\r\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\r\n      }\r\n\r\n      // TJSPositionNS.PositionParent\r\n      const parent: any = position.parent;\r\n\r\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return null;\r\n      }\r\n\r\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\r\n\r\n      // Handle any defined scheduling strategy.\r\n      if (strategy !== void 0)\r\n      {\r\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\r\n      }\r\n\r\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\r\n      const targetEl: FocusableElement = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\r\n      const el: FocusableElement | undefined = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl :\r\n       void 0;\r\n\r\n      if (!Number.isFinite(delay) || delay < 0)\r\n      {\r\n         throw new TypeError(`AnimationScheduler.from error: 'delay' is not a positive number.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationScheduler.from error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      ease = getEasingFunc(ease, this.#getEaseOptions);\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(\r\n          `AnimationScheduler.from error: 'ease' is not a function or valid Svelte easing function name.`);\r\n      }\r\n\r\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      position.get(this.#data);\r\n\r\n      // Determine if any transform origin for the animation is valid.\r\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\r\n\r\n      // Given a valid transform origin store the initial transform origin to be restored.\r\n      const transformOriginInitial: TransformAPI.TransformOrigin | null | undefined = transformOrigin !== void 0 ?\r\n       this.#data.transformOrigin : void 0;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key in fromData)\r\n      {\r\n         // Must use actual key from any aliases.\r\n         const animKey: AnimationAPI.AnimationKey = TJSPositionDataUtil.getAnimationKey(\r\n          key as AnimationAPI.AnimationKey);\r\n\r\n         if (this.#data[animKey] !== void 0 && fromData[key] !== this.#data[animKey])\r\n         {\r\n            initial[key] = fromData[key];\r\n            destination[key] = this.#data[animKey];\r\n         }\r\n      }\r\n\r\n      ConvertStringData.process(initial, this.#data, el);\r\n\r\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\r\n       transformOriginInitial, cleanup);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween from given position data to the given position.\r\n    *\r\n    * @param position - The target position instance.\r\n    *\r\n    * @param fromData - The starting position.\r\n    *\r\n    * @param toData - The ending position.\r\n    *\r\n    * @param options - Tween options.\r\n    *\r\n    * @param [cleanup] - Custom animation cleanup function.\r\n    *\r\n    * @returns An AnimationControl instance or null if none created.\r\n    */\r\n   static fromTo(position: TJSPosition, fromData: Data.TJSPositionDataRelative,\r\n                 toData: Data.TJSPositionDataRelative, options: AnimationAPI.TweenOptions = {},\r\n                 cleanup?: AnimationCleanupFunction): AnimationControl | null\r\n   {\r\n      if (!isObject(fromData))\r\n      {\r\n         throw new TypeError(`AnimationScheduler.fromTo error: 'fromData' is not an object.`);\r\n      }\r\n\r\n      if (!isObject(toData))\r\n      {\r\n         throw new TypeError(`AnimationScheduler.fromTo error: 'toData' is not an object.`);\r\n      }\r\n\r\n      // TJSPositionNS.PositionParent\r\n      const parent: any = position.parent;\r\n\r\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return null;\r\n      }\r\n\r\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\r\n\r\n      // Handle any defined scheduling strategy.\r\n      if (strategy !== void 0)\r\n      {\r\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\r\n      }\r\n\r\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\r\n      const targetEl: FocusableElement = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\r\n      const el: FocusableElement | undefined = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl :\r\n       void 0;\r\n\r\n      if (!Number.isFinite(delay) || delay < 0)\r\n      {\r\n         throw new TypeError(`AnimationScheduler.fromTo error: 'delay' is not a positive number.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationScheduler.fromTo error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      ease = getEasingFunc(ease, this.#getEaseOptions);\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(\r\n          `AnimationScheduler.fromTo error: 'ease' is not a function or valid Svelte easing function name.`);\r\n      }\r\n\r\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      position.get(this.#data);\r\n\r\n      // Determine if any transform origin for the animation is valid.\r\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\r\n\r\n      // Given a valid transform origin store the initial transform origin to be restored.\r\n      const transformOriginInitial: TransformAPI.TransformOrigin | null | undefined = transformOrigin !== void 0 ?\r\n       this.#data.transformOrigin : void 0;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key in fromData)\r\n      {\r\n         if (toData[key] === void 0)\r\n         {\r\n            console.warn(`AnimationScheduler.fromTo warning: skipping key ('${\r\n             key}') from 'fromData' as it is missing in 'toData'.`);\r\n\r\n            continue;\r\n         }\r\n\r\n         // Must use actual key from any aliases.\r\n         const animKey: AnimationAPI.AnimationKey = TJSPositionDataUtil.getAnimationKey(\r\n          key as AnimationAPI.AnimationKey);\r\n\r\n         if (this.#data[animKey] !== void 0)\r\n         {\r\n            initial[key] = fromData[key];\r\n            destination[key] = toData[key];\r\n         }\r\n      }\r\n\r\n      ConvertStringData.process(initial, this.#data, el);\r\n      ConvertStringData.process(destination, this.#data, el);\r\n\r\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\r\n       transformOriginInitial, cleanup);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween to given position data from the current position.\r\n    *\r\n    * @param position - The target position instance.\r\n    *\r\n    * @param toData - The destination position.\r\n    *\r\n    * @param options - Tween options.\r\n    *\r\n    * @param [cleanup] - Custom animation cleanup function.\r\n    *\r\n    * @returns An AnimationControl instance or null if none created.\r\n    */\r\n   static to(position: TJSPosition, toData: Data.TJSPositionDataRelative,\r\n    options: AnimationAPI.TweenOptions, cleanup?: AnimationCleanupFunction): AnimationControl | null\r\n   {\r\n      if (!isObject(toData))\r\n      {\r\n         throw new TypeError(`AnimationScheduler.to error: 'toData' is not an object.`);\r\n      }\r\n\r\n      // TJSPositionNS.PositionParent\r\n      const parent: any = position.parent;\r\n\r\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         return null;\r\n      }\r\n\r\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\r\n\r\n      // Handle any defined scheduling strategy.\r\n      if (strategy !== void 0)\r\n      {\r\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\r\n      }\r\n\r\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\r\n      const targetEl: FocusableElement = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\r\n      const el: FocusableElement = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\r\n\r\n      if (!Number.isFinite(delay) || delay < 0)\r\n      {\r\n         throw new TypeError(`AnimationScheduler.to error: 'delay' is not a positive number.`);\r\n      }\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationScheduler.to error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      ease = getEasingFunc(ease, this.#getEaseOptions);\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(\r\n          `AnimationScheduler.to error: 'ease' is not a function or valid Svelte easing function name.`);\r\n      }\r\n\r\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      position.get(this.#data);\r\n\r\n      // Determine if any transform origin for the animation is valid.\r\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\r\n\r\n      // Given a valid transform origin store the initial transform origin to be restored.\r\n      const transformOriginInitial: TransformAPI.TransformOrigin | null | undefined = transformOrigin !== void 0 ?\r\n       this.#data.transformOrigin : void 0;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key in toData)\r\n      {\r\n         // Must use actual key from any aliases.\r\n         const animKey: AnimationAPI.AnimationKey = TJSPositionDataUtil.getAnimationKey(\r\n          key as AnimationAPI.AnimationKey);\r\n\r\n         if (this.#data[animKey] !== void 0 && toData[key] !== this.#data[animKey])\r\n         {\r\n            destination[key] = toData[key];\r\n            initial[key] = this.#data[animKey];\r\n         }\r\n      }\r\n\r\n      ConvertStringData.process(destination, this.#data, el);\r\n\r\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\r\n       transformOriginInitial, cleanup);\r\n   }\r\n\r\n   // Internal implementation ----------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Handle any defined scheduling strategy allowing existing scheduled animations for the same position instance\r\n    * to be controlled.\r\n    *\r\n    * @param position - The target position instance.\r\n    *\r\n    * @param strategy - A scheduling strategy to apply.\r\n    *\r\n    * @returns Returns null to abort scheduling current animation.\r\n    */\r\n   static #handleStrategy(position: TJSPosition, strategy: AnimationAPI.TweenOptions['strategy']):\r\n    undefined | null\r\n   {\r\n      switch (strategy)\r\n      {\r\n         case 'cancel':\r\n            if (AnimationManager.isScheduled(position)) { AnimationManager.cancel(position); }\r\n            break;\r\n\r\n         case 'cancelAll':\r\n            if (AnimationManager.isScheduled(position))\r\n            {\r\n               AnimationManager.cancel(position, AnimationManager.cancelAllFn);\r\n            }\r\n            break;\r\n\r\n         case 'exclusive':\r\n            if (AnimationManager.isScheduled(position)) { return null; }\r\n            break;\r\n\r\n         default:\r\n            console.warn(`AnimationScheduler error: 'strategy' is not 'cancel', 'cancelAll', or 'exclusive'.`);\r\n            return null;\r\n      }\r\n   }\r\n}\r\n","import { lerp }                  from '#runtime/math/interpolate';\r\n\r\nimport { getEasingFunc }         from '#runtime/svelte/easing';\r\n\r\nimport { A11yHelper }            from '#runtime/util/a11y';\r\n\r\nimport {\r\n   isIterable,\r\n   isObject }                    from '#runtime/util/object';\r\n\r\nimport { AnimationControl }      from './AnimationControl';\r\nimport { AnimationManager }      from './AnimationManager';\r\nimport { AnimationScheduler }    from './AnimationScheduler';\r\n\r\nimport {\r\n   ConvertStringData,\r\n   TJSPositionDataUtil }         from '../data';\r\n\r\nimport { NumberGuard }           from '../util';\r\n\r\nimport type { BasicAnimation }   from '#runtime/util/animate';\r\n\r\nimport type { AnimationAPI }     from './types';\r\n\r\nimport type { TJSPosition }      from '../TJSPosition';\r\nimport type { Data }             from '../data/types';\r\n\r\nimport type { AnimationData }    from './types-local';\r\n\r\n/**\r\n */\r\nexport class AnimationAPIImpl implements AnimationAPI\r\n{\r\n   static #getEaseOptions: Readonly<{ default: false }> = Object.freeze({ default: false });\r\n\r\n   /**\r\n    */\r\n   readonly #data: Data.TJSPositionData;\r\n\r\n   readonly #position: TJSPosition;\r\n\r\n   /**\r\n    * @param position -\r\n    *\r\n    * @param data -\r\n    */\r\n   constructor(position: TJSPosition, data: Data.TJSPositionData)\r\n   {\r\n      this.#position = position;\r\n      this.#data = data;\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * Returns if there are scheduled animations whether active or pending for this TJSPosition instance.\r\n    *\r\n    * @returns Are there scheduled animations.\r\n    */\r\n   get isScheduled(): boolean\r\n   {\r\n      return AnimationManager.isScheduled(this.#position);\r\n   }\r\n\r\n   /**\r\n    * Cancels all animation instances for this TJSPosition instance.\r\n    */\r\n   cancel(): void\r\n   {\r\n      AnimationManager.cancel(this.#position, AnimationManager.cancelAllFn);\r\n   }\r\n\r\n   /**\r\n    * Returns all currently scheduled AnimationControl instances for this TJSPosition instance.\r\n    *\r\n    * @returns All currently scheduled animation controls for this TJSPosition instance.\r\n    */\r\n   getScheduled(): BasicAnimation[]\r\n   {\r\n      return AnimationManager.getScheduled(this.#position);\r\n   }\r\n\r\n   /**\r\n    * Provides a tween from given position data to the current position.\r\n    *\r\n    * @param fromData - The starting position.\r\n    *\r\n    * @param [options] - Optional tween parameters.\r\n    *\r\n    * @returns A control object that can cancel animation and provides a `finished` Promise.\r\n    */\r\n   from(fromData: Data.TJSPositionDataRelative, options: AnimationAPI.TweenOptions):\r\n    BasicAnimation\r\n   {\r\n      const animationControl: AnimationControl | null = AnimationScheduler.from(this.#position, fromData, options);\r\n      return animationControl ? animationControl : AnimationControl.voidControl;\r\n   }\r\n\r\n   /**\r\n    * Provides a tween from given position data to the given position.\r\n    *\r\n    * @param fromData - The starting position.\r\n    *\r\n    * @param toData - The ending position.\r\n    *\r\n    * @param [options] - Optional tween parameters.\r\n    *\r\n    * @returns A control object that can cancel animation and provides a `finished` Promise.\r\n    */\r\n   fromTo(fromData: Data.TJSPositionDataRelative, toData: Data.TJSPositionDataRelative,\r\n          options: AnimationAPI.TweenOptions): BasicAnimation\r\n   {\r\n      const animationControl: AnimationControl | null = AnimationScheduler.fromTo(this.#position, fromData, toData,\r\n       options);\r\n\r\n      return animationControl ? animationControl : AnimationControl.voidControl;\r\n   }\r\n\r\n   /**\r\n    * Provides a tween to given position data from the current position.\r\n    *\r\n    * @param toData - The destination position.\r\n    *\r\n    * @param [options] - Optional tween parameters.\r\n    *\r\n    * @returns A control object that can cancel animation and provides a `finished` Promise.\r\n    */\r\n   to(toData: Data.TJSPositionDataRelative, options: AnimationAPI.TweenOptions):\r\n    BasicAnimation\r\n   {\r\n      const animationControl: AnimationControl | null = AnimationScheduler.to(this.#position, toData, options);\r\n      return animationControl ? animationControl : AnimationControl.voidControl;\r\n   }\r\n\r\n   /**\r\n    * Returns a function that provides an optimized way to constantly update a to-tween.\r\n    *\r\n    * @param keys - The keys for quickTo.\r\n    *\r\n    * @param [options] - Optional quick tween parameters.\r\n    *\r\n    * @returns quick-to tween function.\r\n    */\r\n   quickTo(keys: Iterable<AnimationAPI.AnimationKey>, options:\r\n    AnimationAPI.QuickTweenOptions = {}): AnimationAPI.QuickToCallback\r\n   {\r\n      if (!isIterable(keys))\r\n      {\r\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\r\n      }\r\n\r\n      // TJSPosition.PositionParent\r\n      const parent: any = this.#position.parent;\r\n\r\n      // Early out if the application is not positionable.\r\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\r\n      {\r\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\r\n      }\r\n\r\n      let { duration = 1, ease = 'cubicOut' } = options;\r\n\r\n      if (!Number.isFinite(duration) || duration < 0)\r\n      {\r\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\r\n      }\r\n\r\n      ease = getEasingFunc(ease, AnimationAPIImpl.#getEaseOptions);\r\n\r\n      if (typeof ease !== 'function')\r\n      {\r\n         throw new TypeError(\r\n          `AnimationAPI.quickTo error: 'ease' is not a function or valid Svelte easing function name.`);\r\n      }\r\n\r\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\r\n\r\n      const initial = {};\r\n      const destination = {};\r\n\r\n      const data: Data.TJSPositionData = this.#data;\r\n\r\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\r\n      for (const key of keys)\r\n      {\r\n         if (typeof key !== 'string')\r\n         {\r\n            throw new TypeError(`AnimationAPI.quickTo error: key ('${key}') is not a string.`);\r\n         }\r\n\r\n         if (!TJSPositionDataUtil.isAnimationKey(key))\r\n         {\r\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\r\n         }\r\n\r\n         // Must use actual key from any aliases.\r\n         const value: number = TJSPositionDataUtil.getDataOrDefault(data, key);\r\n\r\n         if (value !== null)\r\n         {\r\n            destination[key] = value;\r\n            initial[key] = value;\r\n         }\r\n      }\r\n\r\n      const keysArray: AnimationAPI.AnimationKey[] = [...keys];\r\n\r\n      Object.freeze(keysArray);\r\n\r\n      const newData = Object.assign({}, initial);\r\n\r\n      const animationData: AnimationData = {\r\n         active: true,\r\n         cancelled: false,\r\n         control: void 0,\r\n         current: 0,\r\n         destination,\r\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\r\n         ease,\r\n         el: void 0,\r\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\r\n         initial,\r\n         interpolate: lerp,\r\n         keys: keysArray,\r\n         newData,\r\n         position: this.#position,\r\n         resolve: void 0,\r\n         start: 0,\r\n         quickTo: true\r\n      };\r\n\r\n      const quickToCB: Function = (...args: any[]): void =>\r\n      {\r\n         const argsLength: number = args.length;\r\n\r\n         if (argsLength === 0) { return; }\r\n\r\n         for (let cntr: number = keysArray.length; --cntr >= 0;)\r\n         {\r\n            const key: AnimationAPI.AnimationKey = keysArray[cntr];\r\n\r\n            // Must use actual key from any aliases.\r\n            const animKey: AnimationAPI.AnimationKey = TJSPositionDataUtil.getAnimationKey(key);\r\n\r\n            if (data[animKey] !== void 0) { initial[key] = data[animKey]; }\r\n         }\r\n\r\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\r\n         if (isObject(args[0]))\r\n         {\r\n            const objData: Record<string, unknown> = args[0];\r\n\r\n            for (const key in objData)\r\n            {\r\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\r\n            }\r\n         }\r\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\r\n         {\r\n            for (let cntr: number = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\r\n            {\r\n               const key: AnimationAPI.AnimationKey = keysArray[cntr];\r\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\r\n            }\r\n         }\r\n\r\n         // Set initial data for transform values that are often null by default.\r\n         TJSPositionDataUtil.setNumericDefaults(initial);\r\n         TJSPositionDataUtil.setNumericDefaults(destination);\r\n\r\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\r\n         const targetEl: Element = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\r\n         animationData.el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\r\n\r\n         ConvertStringData.process(destination, data, animationData.el!);\r\n\r\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\r\n         if (animationData.finished)\r\n         {\r\n            animationData.cancelled = false;\r\n            animationData.finished = false;\r\n            animationData.active = true;\r\n            animationData.current = 0;\r\n\r\n            AnimationManager.add(animationData);\r\n         }\r\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\r\n         {\r\n            const now: number = globalThis.performance.now();\r\n\r\n            animationData.cancelled = false;\r\n            animationData.current = 0;\r\n\r\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\r\n            // precise delayed time.\r\n            animationData.start = now + (AnimationManager.timeNow - now);\r\n         }\r\n      };\r\n\r\n      Object.defineProperty(quickToCB, 'keys', {\r\n         value: keysArray,\r\n         writable: false,\r\n         configurable: false\r\n      });\r\n\r\n      Object.defineProperty(quickToCB, 'options', {\r\n         value: (optionsCB: AnimationAPI.QuickTweenOptions):\r\n          AnimationAPI.QuickToCallback =>\r\n         {\r\n            let { duration, ease } = optionsCB;\r\n\r\n            if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\r\n            {\r\n               throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\r\n            }\r\n\r\n            ease = getEasingFunc(ease!, AnimationAPIImpl.#getEaseOptions);\r\n\r\n            if (ease !== void 0 && typeof ease !== 'function')\r\n            {\r\n               throw new TypeError(\r\n                `AnimationAPI.quickTo.options error: 'ease' is not a function or valid Svelte easing function name.`);\r\n            }\r\n\r\n            // TODO: In the future potentially support more interpolation functions besides `lerp`.\r\n\r\n            if (NumberGuard.isFinite(duration) && duration >= 0) { animationData.duration = duration * 1000; }\r\n            if (ease) { animationData.ease = ease; }\r\n\r\n            return quickToCB as AnimationAPI.QuickToCallback;\r\n         },\r\n         writable: false,\r\n         configurable: false\r\n      });\r\n\r\n      return quickToCB as AnimationAPI.QuickToCallback;\r\n   }\r\n}\r\n","import { CrossWindow }           from '#runtime/util/browser';\r\n\r\nimport type {\r\n   BasicAnimation,\r\n   BasicAnimationState }         from '#runtime/util/animate';\r\n\r\nimport type { AnimationControl } from './AnimationControl';\r\n\r\n/**\r\n * Provides a implementation for a TJSPosition animation for a group of TJSPosition instances.\r\n */\r\nexport class AnimationGroupControl implements BasicAnimation\r\n{\r\n   /**\r\n    */\r\n   readonly #animationControls: Set<AnimationControl> | null;\r\n\r\n   /**\r\n    */\r\n   #finishedPromise: Promise<BasicAnimationState> | undefined;\r\n\r\n   /**\r\n    * Defines a static empty / void animation control.\r\n    */\r\n   static #voidControl: AnimationGroupControl = new AnimationGroupControl(null);\r\n\r\n   /**\r\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\r\n    */\r\n   static get voidControl(): AnimationGroupControl { return this.#voidControl; }\r\n\r\n   /**\r\n    * @param animationControls - A Set of AnimationControl instances.\r\n    */\r\n   constructor(animationControls: Set<AnimationControl> | null)\r\n   {\r\n      this.#animationControls = animationControls;\r\n   }\r\n\r\n   /**\r\n    * Get a promise that resolves when all animations are finished.\r\n    *\r\n    * @returns Finished Promise for all animations.\r\n    */\r\n   get finished(): Promise<BasicAnimationState>\r\n   {\r\n      const animationControls: Set<AnimationControl> | null = this.#animationControls;\r\n\r\n      if (!CrossWindow.isPromise(this.#finishedPromise))\r\n      {\r\n         if (animationControls === null || animationControls === void 0 || animationControls.size === 0)\r\n         {\r\n            this.#finishedPromise = Promise.resolve({ cancelled: false });\r\n         }\r\n         else\r\n         {\r\n            const promises: Promise<BasicAnimationState>[] = [];\r\n\r\n            for (const animationControl of animationControls) { promises.push(animationControl.finished); }\r\n\r\n            this.#finishedPromise = Promise.allSettled(promises).then((results) => {\r\n               // Check if any promises were rejected or resolved with `cancelled: true`.\r\n               const anyCancelled: boolean = results.some((result) => result.status === 'rejected' ||\r\n                (result.status === 'fulfilled' && result.value.cancelled));\r\n\r\n               // Return a single BasicAnimationState based on the aggregation of individual results.\r\n               return { cancelled: anyCancelled };\r\n            });\r\n         }\r\n      }\r\n\r\n      return this.#finishedPromise;\r\n   }\r\n\r\n   /**\r\n    * Returns whether there are active animation instances for this group.\r\n    *\r\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\r\n    * determine if all animations in the group are finished.\r\n    *\r\n    * @returns Are there active animation instances.\r\n    */\r\n   get isActive(): boolean\r\n   {\r\n      const animationControls: Set<AnimationControl> | null = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return false; }\r\n\r\n      for (const animationControl of animationControls)\r\n      {\r\n         if (animationControl.isActive) { return true; }\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Returns whether all animations in the group are finished.\r\n    *\r\n    * @returns Are all animation instances finished.\r\n    */\r\n   get isFinished(): boolean\r\n   {\r\n      const animationControls: Set<AnimationControl> | null = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return true; }\r\n\r\n      for (const animationControl of animationControls)\r\n      {\r\n         if (!animationControl.isFinished) { return false; }\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Cancels the all animations.\r\n    */\r\n   cancel(): void\r\n   {\r\n      const animationControls: Set<AnimationControl> | null = this.#animationControls;\r\n\r\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return; }\r\n\r\n      for (const animationControl of animationControls) { animationControl.cancel(); }\r\n   }\r\n}\r\n","import {\r\n   isIterable,\r\n   isObject }                    from '#runtime/util/object';\r\n\r\nimport { AnimationManager }      from './AnimationManager';\r\nimport { AnimationAPIImpl }      from './AnimationAPIImpl';\r\nimport { AnimationGroupControl } from './AnimationGroupControl';\r\nimport { AnimationScheduler }    from './AnimationScheduler';\r\n\r\nimport { TJSPositionDataUtil }   from '../data';\r\n\r\nimport type { BasicAnimation }   from '#runtime/util/animate';\r\n\r\nimport type { AnimationControl } from './AnimationControl';\r\nimport type {\r\n   AnimationCleanupFunction,\r\n   AnimationData }               from './types-local';\r\n\r\nimport type { TJSPosition }      from '../TJSPosition';\r\n\r\nimport type { AnimationAPI }     from './types';\r\n\r\nimport type { Data }             from '../data/types';\r\n\r\n/**\r\n * Provides a public API for grouping multiple {@link TJSPosition} animations together with the\r\n * AnimationManager.\r\n *\r\n * Note: To remove cyclic dependencies as this class provides the TJSPosition static / group Animation API `instanceof`\r\n * checks are not done against TJSPosition. Instead, a check for the animate property being an instanceof\r\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#getPosition}.\r\n *\r\n * Note: This is a static class that conforms to the {@link AnimationGroupAPI} interface.\r\n *\r\n * @see AnimationAPI\r\n */\r\nclass AnimationGroupAPIImpl\r\n{\r\n   private constructor() {}\r\n\r\n   /**\r\n    * Returns the TJSPosition instance for the possible given positionable by checking the instance by checking for\r\n    * AnimationAPI.\r\n    *\r\n    * @param positionable - Possible position group entry.\r\n    *\r\n    * @returns Returns actual TJSPosition instance.\r\n    */\r\n   static #getPosition(positionable: TJSPosition | TJSPosition.Positionable): TJSPosition | null\r\n   {\r\n      if (!isObject(positionable)) { return null; }\r\n\r\n      if (positionable.animate instanceof AnimationAPIImpl) { return positionable as TJSPosition; }\r\n\r\n      if ((positionable.position as any)?.animate instanceof AnimationAPIImpl)\r\n      {\r\n         return positionable.position as TJSPosition;\r\n      }\r\n\r\n      return null;\r\n   }\r\n\r\n   /**\r\n    * Cancels any animation for given TJSPosition.PositionGroup data.\r\n    *\r\n    * @param positionGroup - The position group to cancel.\r\n    */\r\n   static cancel(positionGroup: TJSPosition.PositionGroup)\r\n   {\r\n      if (isIterable(positionGroup))\r\n      {\r\n         let index: number = -1;\r\n\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition: TJSPosition | null = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            AnimationManager.cancel(actualPosition);\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition: TJSPosition | null = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found.`);\r\n            return;\r\n         }\r\n\r\n         AnimationManager.cancel(actualPosition);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Cancels all TJSPosition animation.\r\n    */\r\n   static cancelAll(): void { AnimationManager.cancelAll(); }\r\n\r\n   /**\r\n    * Gets all animation controls for the given position group data.\r\n    *\r\n    * @param positionGroup - A position group.\r\n    *\r\n    * @returns Results array.\r\n    */\r\n   static getScheduled(positionGroup: TJSPosition.PositionGroup): {\r\n      position: TJSPosition,\r\n      entry: TJSPosition.Positionable | undefined,\r\n      controls: BasicAnimation[]\r\n   }[]\r\n   {\r\n      const results: {\r\n         position: TJSPosition,\r\n         entry: TJSPosition.Positionable | undefined,\r\n         controls: BasicAnimation[]\r\n      }[] = [];\r\n\r\n      if (isIterable(positionGroup))\r\n      {\r\n         let index: number = -1;\r\n\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition: TJSPosition = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found at index: ${\r\n                index}.`);\r\n\r\n               continue;\r\n            }\r\n\r\n            const controls: BasicAnimation[] = AnimationManager.getScheduled(actualPosition);\r\n\r\n            results.push({\r\n               position: actualPosition,\r\n               entry: actualPosition !== entry ? entry as TJSPosition.Positionable : void 0,\r\n               controls\r\n            });\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition: TJSPosition = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found.`);\r\n            return results;\r\n         }\r\n\r\n         const controls: BasicAnimation[] = AnimationManager.getScheduled(actualPosition);\r\n\r\n         results.push({\r\n            position: actualPosition,\r\n            entry: actualPosition !== positionGroup ? positionGroup as TJSPosition.Positionable : void 0,\r\n            controls\r\n         });\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Provides a type guard to test in the given key is an {@link AnimationAPIImpl.AnimationKey}.\r\n    *\r\n    * @param key - A key value to test.\r\n    *\r\n    * @returns Whether the given key is an animation key.\r\n    */\r\n   static isAnimationKey(key: string): key is AnimationAPI.AnimationKey\r\n   {\r\n      return TJSPositionDataUtil.isAnimationKey(key);\r\n   }\r\n\r\n   /**\r\n    * Returns the status _for the entire position group_ specified if all position instances of the group are scheduled.\r\n    *\r\n    * @param positionGroup - A position group.\r\n    *\r\n    * @param [options] - Options.\r\n    *\r\n    * @returns True if all are scheduled / false if just one position instance in the group is not scheduled.\r\n    */\r\n   static isScheduled(positionGroup: TJSPosition.PositionGroup,\r\n    options?: AnimationAPI.ScheduleOptions): boolean\r\n   {\r\n      if (isIterable(positionGroup))\r\n      {\r\n         let index: number = -1;\r\n\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition: TJSPosition = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found at index: ${index}.`);\r\n\r\n               continue;\r\n            }\r\n\r\n            if (!AnimationManager.isScheduled(actualPosition, options)) { return false; }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition: TJSPosition = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found.`);\r\n            return false;\r\n         }\r\n\r\n         if (!AnimationManager.isScheduled(actualPosition, options)) { return false; }\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Provides the `from` animation tween for one or more positionable instances as a group.\r\n    *\r\n    * @param positionGroup - A position group.\r\n    *\r\n    * @param fromData - A position data object assigned to all positionable instances or a callback function invoked for\r\n    *        unique data for each instance.\r\n    *\r\n    * @param [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\r\n    *        options for each instance.\r\n    *\r\n    * @returns Basic animation control.\r\n    */\r\n   static from(positionGroup: TJSPosition.PositionGroup, fromData: Data.TJSPositionDataRelative |\r\n    AnimationAPI.GroupDataCallback, options?: AnimationAPI.TweenOptions |\r\n     AnimationAPI.GroupTweenOptionsCallback): BasicAnimation\r\n   {\r\n      if (!isObject(fromData) && typeof fromData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       */\r\n      const animationControls: Set<AnimationControl> = new Set();\r\n\r\n      /**\r\n       */\r\n      const cleanupFn: AnimationCleanupFunction = (data: AnimationData): boolean =>\r\n       animationControls.delete(data.control);\r\n\r\n      let index: number = -1;\r\n\r\n      /**\r\n       */\r\n      let callbackOptions: AnimationAPI.GroupCallbackOptions;\r\n\r\n      const hasDataCallback: boolean = typeof fromData === 'function';\r\n      const hasOptionCallback: boolean = typeof options === 'function';\r\n      const hasCallback: boolean = hasDataCallback || hasOptionCallback;\r\n\r\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\r\n\r\n      let actualFromData: Data.TJSPositionDataRelative |\r\n       AnimationAPI.GroupDataCallback = fromData;\r\n\r\n      let actualOptions: AnimationAPI.TweenOptions = isObject(options) ? options : void 0;\r\n\r\n      if (isIterable(positionGroup))\r\n      {\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition: TJSPosition = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            if (hasCallback)\r\n            {\r\n               callbackOptions.index = index;\r\n               callbackOptions.position = actualPosition;\r\n               callbackOptions.entry = actualPosition !== entry ? entry as TJSPosition.Positionable : void 0;\r\n            }\r\n\r\n            if (hasDataCallback && typeof fromData === 'function')\r\n            {\r\n               actualFromData = fromData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualFromData === null || actualFromData === void 0) { continue; }\r\n\r\n               if (!isObject(actualFromData))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.from error: 'fromData' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasOptionCallback && typeof options === 'function')\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (!isObject(actualOptions))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.from error: 'options' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\r\n            if (animationControl) { animationControls.add(animationControl); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found.`);\r\n            return AnimationGroupControl.voidControl;\r\n         }\r\n\r\n         if (hasCallback)\r\n         {\r\n            callbackOptions.index = 0;\r\n            callbackOptions.position = actualPosition;\r\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup as TJSPosition.Positionable :\r\n             void 0;\r\n         }\r\n\r\n         if (hasDataCallback && typeof fromData === 'function')\r\n         {\r\n            actualFromData = fromData(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualFromData === null || actualFromData === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualFromData))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.from error: 'fromData' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasOptionCallback && typeof options === 'function')\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualOptions))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.from error: 'options' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         const animationControl: AnimationControl = AnimationScheduler.from(actualPosition, actualFromData,\r\n          actualOptions, cleanupFn);\r\n\r\n         if (animationControl) { animationControls.add(animationControl); }\r\n      }\r\n\r\n      return new AnimationGroupControl(animationControls);\r\n   }\r\n\r\n   /**\r\n    * Provides the `fromTo` animation tween for one or more positionable instances as a group.\r\n    *\r\n    * @param positionGroup - A position group.\r\n    *\r\n    * @param fromData - A position data object assigned to all positionable instances or a callback function invoked for\r\n    *        unique data for each instance.\r\n    *\r\n    * @param toData - A position data object assigned to all positionable instances or a callback function invoked for\r\n    *        unique data for each instance.\r\n    *\r\n    * @param [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\r\n    *        options for each instance.\r\n    *\r\n    * @returns Basic animation control.\r\n    */\r\n   static fromTo(positionGroup: TJSPosition.PositionGroup, fromData: Data.TJSPositionDataRelative |\r\n    AnimationAPI.GroupDataCallback, toData: Data.TJSPositionDataRelative |\r\n      AnimationAPI.GroupDataCallback, options?: AnimationAPI.TweenOptions |\r\n       AnimationAPI.GroupTweenOptionsCallback): BasicAnimation\r\n   {\r\n      if (!isObject(fromData) && typeof fromData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\r\n      }\r\n\r\n      if (!isObject(toData) && typeof toData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      const animationControls: Set<AnimationControl> = new Set();\r\n\r\n      /**\r\n       */\r\n      const cleanupFn: AnimationCleanupFunction = (data: AnimationData): boolean =>\r\n       animationControls.delete(data.control);\r\n\r\n      let index: number = -1;\r\n\r\n      /**\r\n       */\r\n      let callbackOptions: AnimationAPI.GroupCallbackOptions;\r\n\r\n      const hasFromCallback: boolean = typeof fromData === 'function';\r\n      const hasToCallback: boolean = typeof toData === 'function';\r\n      const hasOptionCallback: boolean = typeof options === 'function';\r\n      const hasCallback: boolean = hasFromCallback || hasToCallback || hasOptionCallback;\r\n\r\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\r\n\r\n      let actualFromData: Data.TJSPositionDataRelative = fromData;\r\n      let actualToData: Data.TJSPositionDataRelative = toData;\r\n\r\n      let actualOptions: AnimationAPI.TweenOptions = isObject(options) ? options : void 0;\r\n\r\n      if (isIterable(positionGroup))\r\n      {\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition: TJSPosition = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            if (hasCallback)\r\n            {\r\n               callbackOptions.index = index;\r\n               callbackOptions.position = actualPosition;\r\n               callbackOptions.entry = actualPosition !== entry ? entry as TJSPosition.Positionable : void 0;\r\n            }\r\n\r\n            if (hasFromCallback && typeof fromData === 'function')\r\n            {\r\n               actualFromData = fromData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualFromData === null || actualFromData === void 0) { continue; }\r\n\r\n               if (!isObject(actualFromData))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasToCallback && typeof toData === 'function')\r\n            {\r\n               actualToData = toData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualToData === null || actualToData === void 0) { continue; }\r\n\r\n               if (!isObject(actualToData))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasOptionCallback && typeof options === 'function')\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (!isObject(actualOptions))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            const animationControl: AnimationControl = AnimationScheduler.fromTo(actualPosition, actualFromData,\r\n             actualToData, actualOptions, cleanupFn);\r\n\r\n            if (animationControl) { animationControls.add(animationControl); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition: TJSPosition = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found.`);\r\n            return AnimationGroupControl.voidControl;\r\n         }\r\n\r\n         if (hasCallback)\r\n         {\r\n            callbackOptions.index = 0;\r\n            callbackOptions.position = actualPosition;\r\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup as TJSPosition.Positionable :\r\n             void 0;\r\n         }\r\n\r\n         if (hasFromCallback && typeof fromData === 'function')\r\n         {\r\n            actualFromData = fromData(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualFromData === null || actualFromData === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualFromData))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.fromTo error: 'fromData' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasToCallback && typeof toData === 'function')\r\n         {\r\n            actualToData = toData(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualToData === null || actualToData === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualToData))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.fromTo error: 'toData' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasOptionCallback && typeof options === 'function')\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualOptions))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.fromTo error: 'options' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         const animationControl: AnimationControl = AnimationScheduler.fromTo(actualPosition, actualFromData,\r\n          actualToData, actualOptions, cleanupFn);\r\n\r\n         if (animationControl) { animationControls.add(animationControl); }\r\n      }\r\n\r\n      return new AnimationGroupControl(animationControls);\r\n   }\r\n\r\n   /**\r\n    * Provides the `to` animation tween for one or more positionable instances as a group.\r\n    *\r\n    * @param positionGroup - A position group.\r\n    *\r\n    * @param toData - A position data object assigned to all positionable instances or a callback function invoked for\r\n    *        unique data for each instance.\r\n    *\r\n    * @param [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\r\n    *        options for each instance.\r\n    *\r\n    * @returns Basic animation control.\r\n    */\r\n   static to(positionGroup: TJSPosition.PositionGroup, toData: Data.TJSPositionDataRelative |\r\n    AnimationAPI.GroupDataCallback, options?: AnimationAPI.TweenOptions |\r\n     AnimationAPI.GroupTweenOptionsCallback): BasicAnimation\r\n   {\r\n      if (!isObject(toData) && typeof toData !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       */\r\n      const animationControls: Set<AnimationControl> = new Set();\r\n\r\n      /**\r\n       */\r\n      const cleanupFn: AnimationCleanupFunction = (data: AnimationData): boolean =>\r\n       animationControls.delete(data.control);\r\n\r\n      let index: number = -1;\r\n\r\n      /**\r\n       */\r\n      let callbackOptions: AnimationAPI.GroupCallbackOptions;\r\n\r\n      const hasDataCallback: boolean = typeof toData === 'function';\r\n      const hasOptionCallback: boolean = typeof options === 'function';\r\n      const hasCallback: boolean = hasDataCallback || hasOptionCallback;\r\n\r\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\r\n\r\n      let actualToData: Data.TJSPositionDataRelative = toData;\r\n\r\n      let actualOptions: AnimationAPI.TweenOptions = isObject(options) ? options : void 0;\r\n\r\n      if (isIterable(positionGroup))\r\n      {\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            if (hasCallback)\r\n            {\r\n               callbackOptions.index = index;\r\n               callbackOptions.position = actualPosition;\r\n               callbackOptions.entry = actualPosition !== entry ? entry as TJSPosition.Positionable : void 0;\r\n            }\r\n\r\n            if (hasDataCallback && typeof toData === 'function')\r\n            {\r\n               actualToData = toData(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualToData === null || actualToData === void 0) { continue; }\r\n\r\n               if (!isObject(actualToData))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.to error: 'toData' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            if (hasOptionCallback && typeof options === 'function')\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (!isObject(actualOptions))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.to error: 'options' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            const animationControl: AnimationControl = AnimationScheduler.to(actualPosition, actualToData,\r\n             actualOptions, cleanupFn);\r\n\r\n            if (animationControl) { animationControls.add(animationControl); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition: TJSPosition = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found.`);\r\n            return AnimationGroupControl.voidControl;\r\n         }\r\n\r\n         if (hasCallback)\r\n         {\r\n            callbackOptions.index = 0;\r\n            callbackOptions.position = actualPosition;\r\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup as TJSPosition.Positionable :\r\n             void 0;\r\n         }\r\n\r\n         if (hasDataCallback && typeof toData === 'function')\r\n         {\r\n            actualToData = toData(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualToData === null || actualToData === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualToData))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.to error: 'toData' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         if (hasOptionCallback && typeof options === 'function')\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\r\n\r\n            if (!isObject(actualOptions))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.to error: 'options' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         const animationControl: AnimationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions,\r\n          cleanupFn);\r\n\r\n         if (animationControl) { animationControls.add(animationControl); }\r\n      }\r\n\r\n      return new AnimationGroupControl(animationControls);\r\n   }\r\n\r\n   /**\r\n    * Provides the `quickTo` animation tweening function for one or more positionable instances as a group.\r\n    *\r\n    * @param positionGroup - A position group.\r\n    *\r\n    * @param keys - Animation keys to target.\r\n    *\r\n    * @param [options] - Quick tween options assigned to all positionable instances or a callback function invoked for\r\n    *        unique options for each instance.\r\n    *\r\n    * @returns quick-to tween function.\r\n    */\r\n   static quickTo(positionGroup: TJSPosition.PositionGroup, keys: Iterable<AnimationAPI.AnimationKey>,\r\n    options?: AnimationAPI.QuickTweenOptions |\r\n     AnimationAPI.GroupQuickTweenOptionsCallback): AnimationAPI.GroupQuickToCallback\r\n   {\r\n      if (!isIterable(keys))\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\r\n      }\r\n\r\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\r\n      {\r\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\r\n      }\r\n\r\n      /**\r\n       */\r\n      const quickToCallbacks: AnimationAPI.QuickToCallback[] = [];\r\n\r\n      let index: number = -1;\r\n\r\n      const hasOptionCallback: boolean = typeof options === 'function';\r\n\r\n      const callbackOptions = { index, position: void 0, entry: void 0 };\r\n\r\n      let actualOptions: AnimationAPI.QuickTweenOptions = isObject(options) ? options : void 0;\r\n\r\n      if (isIterable(positionGroup))\r\n      {\r\n         for (const entry of positionGroup)\r\n         {\r\n            index++;\r\n\r\n            const actualPosition = this.#getPosition(entry);\r\n\r\n            if (!actualPosition)\r\n            {\r\n               console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found at index: ${index}.`);\r\n               continue;\r\n            }\r\n\r\n            callbackOptions.index = index;\r\n            callbackOptions.position = actualPosition;\r\n            callbackOptions.entry = actualPosition !== entry ? entry : void 0;\r\n\r\n            if (hasOptionCallback && typeof options === 'function')\r\n            {\r\n               actualOptions = options(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (actualOptions === null || actualOptions === void 0) { continue; }\r\n\r\n               if (!isObject(actualOptions))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' callback function iteration(${\r\n                   index}) failed to return an object.`);\r\n               }\r\n            }\r\n\r\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         const actualPosition: TJSPosition = this.#getPosition(positionGroup);\r\n\r\n         if (!actualPosition)\r\n         {\r\n            console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found.`);\r\n            return;\r\n         }\r\n\r\n         callbackOptions.index = 0;\r\n         callbackOptions.position = actualPosition;\r\n         callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\r\n\r\n         if (hasOptionCallback && typeof options === 'function')\r\n         {\r\n            actualOptions = options(callbackOptions);\r\n\r\n            // Returned data from callback is null / undefined, so skip this position instance.\r\n            if (actualOptions === null || actualOptions === void 0) { return; }\r\n\r\n            if (!isObject(actualOptions))\r\n            {\r\n               throw new TypeError(\r\n                `AnimationGroupAPI.quickTo error: 'options' callback function failed to return an object.`);\r\n            }\r\n         }\r\n\r\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\r\n      }\r\n\r\n      const keysArray: AnimationAPI.AnimationKey[] = [...keys];\r\n\r\n      Object.freeze(keysArray);\r\n\r\n      const quickToCB: Function = (...args: any[]): void =>\r\n      {\r\n         const argsLength: number = args.length;\r\n\r\n         if (argsLength === 0) { return; }\r\n\r\n         if (typeof args[0] === 'function')\r\n         {\r\n            const dataCallback: Function = args[0];\r\n\r\n            index = -1;\r\n            let cntr: number = 0;\r\n\r\n            if (isIterable(positionGroup))\r\n            {\r\n               for (const entry of positionGroup)\r\n               {\r\n                  index++;\r\n\r\n                  const actualPosition: TJSPosition = this.#getPosition(entry);\r\n\r\n                  if (!actualPosition) { continue; }\r\n\r\n                  callbackOptions.index = index;\r\n                  callbackOptions.position = actualPosition;\r\n                  callbackOptions.entry = actualPosition !== entry ? entry : void 0;\r\n\r\n                  const toData = dataCallback(callbackOptions);\r\n\r\n                  // Returned data from callback is null / undefined, so skip this position instance.\r\n                  if (toData === null || toData === void 0) { continue; }\r\n\r\n                  /**\r\n                   */\r\n                  const toDataIterable: boolean = isIterable(toData);\r\n\r\n                  if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\r\n                  {\r\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${\r\n                      index}) failed to return a finite number, iterable list, or object.`);\r\n                  }\r\n\r\n                  if (toDataIterable)\r\n                  {\r\n                     quickToCallbacks[cntr++](...toData);\r\n                  }\r\n                  else\r\n                  {\r\n                     quickToCallbacks[cntr++](toData);\r\n                  }\r\n               }\r\n            }\r\n            else\r\n            {\r\n               const actualPosition = this.#getPosition(positionGroup);\r\n\r\n               if (!actualPosition) { return; }\r\n\r\n               callbackOptions.index = 0;\r\n               callbackOptions.position = actualPosition;\r\n               callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\r\n\r\n               const toData = dataCallback(callbackOptions);\r\n\r\n               // Returned data from callback is null / undefined, so skip this position instance.\r\n               if (toData === null || toData === void 0) { return; }\r\n\r\n               const toDataIterable: boolean = isIterable(toData);\r\n\r\n               if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\r\n               {\r\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${\r\n                   index}) failed to return a finite number, iterable list, or object.`);\r\n               }\r\n\r\n               if (toDataIterable)\r\n               {\r\n                  quickToCallbacks[cntr++](...toData);\r\n               }\r\n               else\r\n               {\r\n                  quickToCallbacks[cntr++](toData);\r\n               }\r\n            }\r\n         }\r\n         else\r\n         {\r\n            for (let cntr: number = quickToCallbacks.length; --cntr >= 0;)\r\n            {\r\n               quickToCallbacks[cntr](...args);\r\n            }\r\n         }\r\n      };\r\n\r\n      Object.defineProperty(quickToCB, 'keys', {\r\n         value: keysArray,\r\n         writable: false,\r\n         configurable: false\r\n      });\r\n\r\n      Object.defineProperty(quickToCB, 'options', {\r\n         /**\r\n          * Sets options of quickTo tween.\r\n          * @param options -\r\n          */\r\n         value: (options: AnimationAPI.QuickTweenOptions): AnimationAPI.QuickToCallback =>\r\n         {\r\n            if (options !== void 0 && !isObject(options))\r\n            {\r\n               throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object.`);\r\n            }\r\n\r\n            // Set options object for each quickTo callback.\r\n            if (isObject(options))\r\n            {\r\n               for (let cntr = quickToCallbacks.length; --cntr >= 0;)\r\n               {\r\n                  quickToCallbacks[cntr].options(options);\r\n               }\r\n            }\r\n\r\n            return quickToCB as AnimationAPI.GroupQuickToCallback;\r\n         },\r\n         writable: false,\r\n         configurable: false\r\n      });\r\n\r\n      return quickToCB as AnimationAPI.GroupQuickToCallback;\r\n   }\r\n}\r\n\r\nObject.seal(AnimationGroupAPIImpl);\r\n\r\nexport { AnimationGroupAPIImpl };\r\n","import {\r\n   isIterable,\r\n   isObject }                 from '#runtime/util/object';\r\n\r\nimport type { TJSPosition }   from '../TJSPosition';\r\n\r\nimport type { StateAPI }      from './types';\r\n\r\nimport type { Data }          from '../data/types';\r\nimport type { TransformAPI }  from '../transform/types';\r\n\r\n/**\r\n *\r\n */\r\nexport class PositionStateAPI implements StateAPI\r\n{\r\n   /**\r\n    */\r\n   readonly #data: Data.TJSPositionData;\r\n\r\n   /**\r\n    */\r\n   #dataSaved: Map<string, Data.TJSPositionDataExtra> = new Map();\r\n\r\n   /**\r\n    */\r\n   #position: TJSPosition;\r\n\r\n   /**\r\n    */\r\n   #transforms: TransformAPI;\r\n\r\n   constructor(position: TJSPosition, data: Data.TJSPositionData, transforms: TransformAPI)\r\n   {\r\n      this.#position = position;\r\n      this.#data = data;\r\n      this.#transforms = transforms;\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * Clears all saved position data except any default state.\r\n    */\r\n   clear(): void\r\n   {\r\n      for (const key of this.#dataSaved.keys())\r\n      {\r\n         if (key !== '#defaultData') { this.#dataSaved.delete(key); }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Returns any stored save state by name.\r\n    *\r\n    * @param options - Options.\r\n    *\r\n    * @param options.name - Saved data name.\r\n    *\r\n    * @returns Any saved position data.\r\n    */\r\n   get({ name }: { name: string }): Data.TJSPositionDataExtra | undefined\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - get error: 'name' is not a string.`); }\r\n\r\n      return this.#dataSaved.get(name);\r\n   }\r\n\r\n   /**\r\n    * Returns any associated default position data.\r\n    *\r\n    * @returns Any saved default position data.\r\n    */\r\n   getDefault(): Data.TJSPositionDataExtra | undefined\r\n   {\r\n      return this.#dataSaved.get('#defaultData');\r\n   }\r\n\r\n   /**\r\n    * @returns The saved position data names / keys.\r\n    */\r\n   keys(): MapIterator<string>\r\n   {\r\n      return this.#dataSaved.keys();\r\n   }\r\n\r\n   /**\r\n    * Removes and returns any position data by name.\r\n    *\r\n    * @param options - Options.\r\n    *\r\n    * @param options.name - Name to remove and retrieve.\r\n    *\r\n    * @returns Any saved position data.\r\n    */\r\n   remove({ name }: { name: string }): Data.TJSPositionDataExtra | undefined\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - remove: 'name' is not a string.`); }\r\n\r\n      const data = this.#dataSaved.get(name);\r\n      this.#dataSaved.delete(name);\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Resets position instance to default data and invokes set.\r\n    *\r\n    * @param [options] - Optional parameters.\r\n    *\r\n    * @param [options.keepZIndex=false] - When true keeps current z-index.\r\n    *\r\n    * @param [options.invokeSet=true] - When true invokes set method.\r\n    *\r\n    * @returns Operation successful.\r\n    */\r\n   reset({ keepZIndex = false, invokeSet = true }: StateAPI.Options.Reset = {}): boolean\r\n   {\r\n      const defaultData = this.#dataSaved.get('#defaultData');\r\n\r\n      // Quit early if there is no saved default data.\r\n      if (!isObject(defaultData)) { return false; }\r\n\r\n      // Cancel all animations for TJSPosition if there are currently any scheduled.\r\n      if (this.#position.animate.isScheduled) { this.#position.animate.cancel(); }\r\n\r\n      const zIndex = this.#position.zIndex;\r\n\r\n      const data = Object.assign({}, defaultData);\r\n\r\n      if (keepZIndex) { data.zIndex = zIndex; }\r\n\r\n      // Reset the transform data.\r\n      this.#transforms.reset(data);\r\n\r\n      const parent: any = this.#position.parent;\r\n\r\n      // If current minimized invoke `maximize`. TODO: REFACTOR FOR APPLICATION DIRECT ACCESS.\r\n      if (parent?.reactive?.minimized)\r\n      {\r\n         parent?.maximize?.({ animate: false, duration: 0 });\r\n      }\r\n\r\n      // Note next clock tick scheduling.\r\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Restores a saved positional state returning the data. Several optional parameters are available to control\r\n    * whether the restore action occurs silently (no store / inline styles updates), animates to the stored data, or\r\n    * simply sets the stored data. Restoring via {@link AnimationAPI.to} allows specification of the duration and\r\n    * easing along with configuring a Promise to be returned if awaiting the end of the animation.\r\n    *\r\n    * @param options - Parameters\r\n    *\r\n    * @param options.name - Saved data set name.\r\n    *\r\n    * @param [options.remove=false] - Deletes data set.\r\n    *\r\n    * @param [options.properties] - Specific properties to set / animate.\r\n    *\r\n    * @param [options.silent] - Set position data directly; no store or style updates.\r\n    *\r\n    * @param [options.async=false] - If animating return a Promise that resolves with any saved data.\r\n    *\r\n    * @param [options.animateTo=false] - Animate to restore data.\r\n    *\r\n    * @param [options.duration=0.1] - Duration in seconds.\r\n    *\r\n    * @param [options.ease='linear'] - Easing function name or function.\r\n    *\r\n    * @returns Any saved position data.\r\n    */\r\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\r\n    ease = 'linear' }: StateAPI.Options.Restore): Data.TJSPositionDataExtra |\r\n     Promise<Data.TJSPositionDataExtra | undefined>  | undefined\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - restore error: 'name' is not a string.`); }\r\n\r\n      const dataSaved = this.#dataSaved.get(name);\r\n\r\n      if (dataSaved)\r\n      {\r\n         if (remove) { this.#dataSaved.delete(name); }\r\n\r\n         let data = dataSaved;\r\n\r\n         if (isIterable(properties))\r\n         {\r\n            data = {};\r\n            for (const property of properties) { data[property] = dataSaved[property]; }\r\n         }\r\n\r\n         // Update data directly with no store or inline style updates.\r\n         if (silent)\r\n         {\r\n            for (const property in data)\r\n            {\r\n               if (property in this.#data) { this.#data[property] = data[property]; }\r\n            }\r\n            return dataSaved;\r\n         }\r\n         else if (animateTo)  // Animate to saved data.\r\n         {\r\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\r\n            if (data.transformOrigin !== this.#position.transformOrigin)\r\n            {\r\n               this.#position.transformOrigin = data.transformOrigin as TransformAPI.TransformOrigin;\r\n            }\r\n\r\n            // Return a Promise with saved data that resolves after animation ends.\r\n            if (async)\r\n            {\r\n               return this.#position.animate.to(data, { duration, ease }).finished.then(() => dataSaved);\r\n            }\r\n            else  // Animate synchronously.\r\n            {\r\n               this.#position.animate.to(data, { duration, ease });\r\n            }\r\n         }\r\n         else\r\n         {\r\n            // Default options is to set data for an immediate update.\r\n            this.#position.set(data);\r\n         }\r\n      }\r\n\r\n      // Saved data potentially not found, but must still return a Promise when async is true.\r\n      return async ? Promise.resolve(dataSaved) : dataSaved;\r\n   }\r\n\r\n   /**\r\n    * Saves current position state with the opportunity to add extra data to the saved state. Simply include extra\r\n    * properties in `options` to save extra data.\r\n    *\r\n    * @param options - Options.\r\n    *\r\n    * @param options.name - name to index this saved data.\r\n    *\r\n    * @param [optionsGet] - Additional options for {@link TJSPosition.get} when serializing position state. By default,\r\n    *        `nullable` values are included.\r\n    *\r\n    * @returns Current position data plus any extra data stored.\r\n    */\r\n   save({ name, ...extra }: StateAPI.Options.Save, optionsGet?: TJSPosition.Options.Get):\r\n    Data.TJSPositionDataExtra\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - save error: 'name' is not a string.`); }\r\n\r\n      const data = this.#position.get(extra, optionsGet);\r\n\r\n      this.#dataSaved.set(name, data);\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Directly sets a saved position state. Simply include extra properties in `options` to set extra data.\r\n    *\r\n    * @param opts - Options.\r\n    *\r\n    * @param opts.name - name to index this saved data.\r\n    */\r\n   set({ name, ...data }: StateAPI.Options.Set): void\r\n   {\r\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - set error: 'name' is not a string.`); }\r\n\r\n      this.#dataSaved.set(name, data);\r\n   }\r\n}\r\n","import { A11yHelper }   from '#runtime/util/a11y';\n\nimport type {\n   Readable,\n   Subscriber,\n   Unsubscriber }       from 'svelte/store';\n\nimport type { System }  from './types';\n\n/**\n * Provides a base {@link System.SystemBase} implementation.\n */\nexport class SystemBase implements Readable<SystemBase>, System.SystemBase\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    */\n   #constrain: boolean;\n\n   /**\n    */\n   #element: HTMLElement | undefined | null;\n\n   /**\n    * When true the validator is active.\n    */\n   #enabled: boolean;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    */\n   #height: number | undefined;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock: boolean;\n\n   /**\n    * Stores the subscribers.\n    */\n   #subscribers: Subscriber<SystemBase>[] = [];\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    */\n   #width: number | undefined;\n\n   /**\n    * @param [options] - Initial options.\n    *\n    * @param [options.constrain=true] - Initial constrained state.\n    *\n    * @param [options.element] - Target element.\n    *\n    * @param [options.enabled=true] - Enabled state.\n    *\n    * @param [options.lock=false] - Lock parameters from being set.\n    *\n    * @param [options.width] - Manual width.\n    *\n    * @param [options.height] - Manual height.\n    */\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height }: {\n      constrain?: boolean; element?: HTMLElement; enabled?: boolean; lock?: boolean; width?: number; height?: number;\n   } = {})\n   {\n      this.#constrain = true;\n      this.#enabled = true;\n\n      this.constrain = constrain;\n      this.element = element;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   /**\n    * @returns The current constrain state.\n    */\n   get constrain(): boolean { return this.#constrain; }\n\n   /**\n    * @returns Target element.\n    */\n   get element(): HTMLElement | undefined | null { return this.#element; }\n\n   /**\n    * @returns The current enabled state.\n    */\n   get enabled(): boolean { return this.#enabled; }\n\n   /**\n    * @returns Get manual height.\n    */\n   get height(): number | undefined { return this.#height; }\n\n   /**\n    * @return Get locked state.\n    */\n   get locked(): boolean { return this.#lock; }\n\n   /**\n    * @returns Get manual width.\n    */\n   get width(): number | undefined { return this.#width; }\n\n   /**\n    * @param constrain - New constrain state.\n    */\n   set constrain(constrain: boolean)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param element - Set target element.\n    */\n   set element(element: HTMLElement | undefined | null)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0 || element === null || A11yHelper.isFocusTarget(element))\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param enabled - New enabled state.\n    */\n   set enabled(enabled: boolean)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param height - Set manual height.\n    */\n   set height(height: number | undefined)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param width - Set manual width.\n    */\n   set width(width: number | undefined)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Set manual width & height.\n    *\n    * @param width - New manual width.\n    *\n    * @param height - New manual height.\n    */\n   setDimension(width: number | undefined, height: number | undefined): void\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param handler - Callback function that is invoked on update / changes. Receives a copy of the TJSPositionData.\n    *\n    * @returns Unsubscribe function.\n    */\n   subscribe(handler: Subscriber<SystemBase>): Unsubscriber\n   {\n      const currentIdx: number = this.#subscribers.findIndex((entry: Function): boolean => entry === handler);\n      if (currentIdx === -1)\n      {\n         this.#subscribers.push(handler); // add handler to the array of subscribers\n         handler(this);                   // call handler with current value\n      }\n\n      // Return unsubscribe function.\n      return (): void =>\n      {\n         const existingIdx: number = this.#subscribers.findIndex((entry: Function): boolean => entry === handler);\n         if (existingIdx !== -1) { this.#subscribers.splice(existingIdx, 1); }\n      }\n   }\n\n   /**\n    * Updates subscribers on changes.\n    */\n   #updateSubscribers()\n   {\n      for (let cntr = 0; cntr < this.#subscribers.length; cntr++) { this.#subscribers[cntr](this); }\n   }\n}\n","import { SystemBase }         from '../SystemBase';\n\nimport type { System }        from '../types';\n\n/**\n * Provides a {@link System.Initial.InitialSystem} implementation to center an element being positioned.\n */\nexport class Centered extends SystemBase implements System.Initial.InitialSystem\n{\n   /**\n    * Get the left constraint based on any manual target values or the browser inner width.\n    *\n    * @param width - Target width.\n    *\n    * @returns Calculated left constraint.\n    */\n   getLeft(width: number): number\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth: number = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   /**\n    * Get the top constraint based on any manual target values or the browser inner height.\n    *\n    * @param height - Target height.\n    *\n    * @returns Calculated top constraint.\n    */\n   getTop(height: number): number\n   {\n      const boundsHeight: number = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n","import { isObject }           from '#runtime/util/object';\n\nimport type { Unsubscriber }  from 'svelte/store';\n\nimport type { ValidatorAPI }  from './types';\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\n * required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a predictable\n * order which is especially handy if they are manipulated at runtime. A lower weighted validator always runs before a\n * higher weighted validator. If no weight is specified the default of '1' is assigned, and it is appended to the end of\n * the validators list.\n *\n * This class forms the public API which is accessible from the {@link TJSPosition.validators} getter in the main\n * TJSPosition instance.\n * ```\n * const position = new TJSPosition();\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nexport class AdapterValidators implements ValidatorAPI\n{\n   /**\n    */\n   #enabled: boolean = true;\n\n   /**\n    */\n   #validatorData: ValidatorAPI.ValidatorData[];\n\n   /**\n    */\n   #mapUnsubscribe: Map<ValidatorAPI.ValidatorFn, Unsubscriber> = new Map();\n\n   #updateFn: Function;\n\n   /**\n    * @returns Returns this and internal storage for validator adapter.\n    */\n   static create(updateFn: Function): [AdapterValidators, ValidatorAPI.ValidatorData[]]\n   {\n      const validatorAPI = new AdapterValidators(updateFn);\n      return [validatorAPI, validatorAPI.#validatorData];\n   }\n\n   /**\n    */\n   private constructor(updateFn: Function)\n   {\n      this.#validatorData = [];\n\n      this.#updateFn = updateFn;\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns Returns the enabled state.\n    */\n   get enabled(): boolean { return this.#enabled; }\n\n   /**\n    * @returns Returns the length of the validators array.\n    */\n   get length(): number { return this.#validatorData.length; }\n\n   /**\n    * @param enabled - Sets enabled state.\n    */\n   set enabled(enabled: boolean)\n   {\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @returns iterator.\n    */\n   *[Symbol.iterator](): IterableIterator<ValidatorAPI.ValidatorData>\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * Adds the given validators.\n    *\n    * @param validators - Validators to add.\n    */\n   add(...validators: (ValidatorAPI.ValidatorFn |\n    ValidatorAPI.ValidatorData)[]): void\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       */\n      let subscribeCount: number = 0;\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if ((validatorType !== 'function' && validatorType !== 'object') || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         /**\n          */\n         let data: ValidatorAPI.ValidatorData | undefined = void 0;\n\n         /**\n          */\n         let subscribeFn: ((...args: any[]) => Unsubscriber) | undefined = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validate: validator as ValidatorAPI.ValidatorFn,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if ('validate' in validator)\n               {\n                  if (typeof validator.validate !== 'function')\n                  {\n                     throw new TypeError(`AdapterValidator error: 'validate' attribute is not a function.`);\n                  }\n\n                  if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                   (validator?.weight! < 0 || validator?.weight! > 1))\n                  {\n                     throw new TypeError(\n                        `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                  }\n\n                  data = {\n                     id: validator.id !== void 0 ? validator.id : void 0,\n                     validate: validator.validate.bind(validator),\n                     weight: validator.weight || 1\n                  };\n\n                  subscribeFn = validator.validate.subscribe ?? validator.subscribe;\n               }\n               else\n               {\n                  throw new TypeError(`AdapterValidator error: 'validate' attribute is not a function.`);\n               }\n\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index: number = this.#validatorData.findIndex(\n          (value: ValidatorAPI.ValidatorData): boolean => data.weight! < value.weight!);\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            const unsubscribe = subscribeFn.call(validator, this.#updateFn);\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Validator has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validate))\n            {\n               throw new Error(\n                'AdapterValidator error: Validator added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validate, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Validators with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an update manually.\n      if (subscribeCount < validators.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Clears / removes all validators.\n    */\n   clear(): void\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      this.#updateFn();\n   }\n\n   /**\n    * Removes one or more given validators.\n    *\n    * @param validators - Validators to remove.\n    */\n   remove(...validators: (ValidatorAPI.ValidatorFn | ValidatorAPI.ValidatorData)[]): void\n   {\n      const length: number = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator: ValidatorAPI.ValidatorFn | undefined =\n          typeof data === 'function' ? data : isObject(data) ? data.validate : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr: number = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validate === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe: Unsubscriber | undefined = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Invoke update as a validator was removed.\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param callback - Callback function to evaluate each validator entry.\n    */\n   removeBy(callback: ValidatorAPI.RemoveByCallback): void\n   {\n      const length: number = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validate);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Removes any validators with matching IDs.\n    *\n    * @param ids - IDs to remove.\n    */\n   removeById(...ids: any[])\n   {\n      const length: number = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove ||= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validate);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n}\n","import { clamp }              from '#runtime/math/util';\r\n\r\nimport { SystemBase }         from '../SystemBase';\r\nimport { TJSTransformData }   from '../../transform';\r\n\r\nimport type { Data }          from '../../data/types';\r\nimport type { TransformAPI }  from '../../transform/types';\r\nimport type { ValidatorAPI }  from './types';\r\n\r\nexport class TransformBounds extends SystemBase\r\n{\r\n   static #TRANSFORM_DATA: TJSTransformData = new TJSTransformData();\r\n\r\n   /**\r\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\r\n    * elements bounds.\r\n    *\r\n    * @param valData - The associated validation data for position updates.\r\n    *\r\n    * @returns Potentially adjusted position data.\r\n    */\r\n   validate(valData: ValidatorAPI.ValidationData): Data.TJSPositionData\r\n   {\r\n      // Early out if element is undefined or local enabled state is false.\r\n      if (!this.enabled) { return valData.position; }\r\n\r\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\r\n      const boundsWidth: number = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\r\n      const boundsHeight: number = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\r\n\r\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\r\n      // true cap width bounds.\r\n      if (typeof valData.position.width === 'number')\r\n      {\r\n         const maxW: number = valData.maxWidth ?? (this.constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\r\n         valData.position.width = clamp(valData.width, valData.minWidth, maxW);\r\n      }\r\n\r\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\r\n      // is true cap height bounds.\r\n      if (typeof valData.position.height === 'number')\r\n      {\r\n         const maxH: number = valData.maxHeight ?? (this.constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\r\n         valData.position.height = clamp(valData.height, valData.minHeight, maxH);\r\n      }\r\n\r\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\r\n      // when position width / height is 'auto'.\r\n      const data: TransformAPI.TransformData = valData.transforms.getData(valData.position,\r\n       TransformBounds.#TRANSFORM_DATA, valData);\r\n\r\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\r\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\r\n      // left oriented, so perform those checks last.\r\n\r\n      const initialX: number = data.boundingRect.x;\r\n      const initialY: number = data.boundingRect.y;\r\n\r\n      const marginTop: number = valData.marginTop ?? 0;\r\n      const marginLeft: number = valData.marginLeft ?? 0;\r\n\r\n      if (data.boundingRect.bottom + marginTop > boundsHeight)\r\n      {\r\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - marginTop;\r\n      }\r\n\r\n      if (data.boundingRect.right + marginLeft > boundsWidth)\r\n      {\r\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - marginLeft;\r\n      }\r\n\r\n      if (data.boundingRect.top - marginTop < 0)\r\n      {\r\n         data.boundingRect.y += Math.abs(data.boundingRect.top - marginTop);\r\n      }\r\n\r\n      if (data.boundingRect.left - marginLeft < 0)\r\n      {\r\n         data.boundingRect.x += Math.abs(data.boundingRect.left - marginLeft);\r\n      }\r\n\r\n      valData.position.left! -= initialX - data.boundingRect.x;\r\n      valData.position.top! -= initialY - data.boundingRect.y;\r\n\r\n      return valData.position;\r\n   }\r\n}\r\n","/**\r\n * Tracks changes to positional data during {@link TJSPosition.set} updates to minimize changes to the element style in\r\n * {@link UpdateElementManager}.\r\n */\r\nexport class PositionChangeSet\r\n{\r\n   left: boolean;\r\n   top: boolean;\r\n   width: boolean;\r\n   height: boolean;\r\n   maxHeight: boolean;\r\n   maxWidth: boolean;\r\n   minHeight: boolean;\r\n   minWidth: boolean;\r\n   zIndex: boolean;\r\n   transform: boolean;\r\n   transformOrigin: boolean;\r\n\r\n   constructor()\r\n   {\r\n      this.left = false;\r\n      this.top = false;\r\n      this.width = false;\r\n      this.height = false;\r\n      this.maxHeight = false;\r\n      this.maxWidth = false;\r\n      this.minHeight = false;\r\n      this.minWidth = false;\r\n      this.zIndex = false;\r\n      this.transform = false;\r\n      this.transformOrigin = false;\r\n   }\r\n\r\n   hasChange(): boolean\r\n   {\r\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\r\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\r\n   }\r\n\r\n   set(value: boolean): void\r\n   {\r\n      this.left = value;\r\n      this.top = value;\r\n      this.width = value;\r\n      this.height = value;\r\n      this.maxHeight = value;\r\n      this.maxWidth = value;\r\n      this.minHeight = value;\r\n      this.minWidth = value;\r\n      this.zIndex = value;\r\n      this.transform = value;\r\n      this.transformOrigin = value;\r\n   }\r\n}\r\n","import { writable }                    from 'svelte/store';\r\n\r\nimport { TJSPositionData }             from '../data';\r\nimport { TJSTransformData }            from '../transform';\r\n\r\nimport type {\r\n   Subscriber,\r\n   Writable }                          from 'svelte/store';\r\n\r\n\r\nimport type { PositionChangeSet }      from './PositionChangeSet';\r\n\r\nimport type { OptionsInternal }        from '../types-local';\r\n\r\nimport type { Data }                   from '../data/types';\r\nimport type { TJSPositionStyleCache }  from '../util';\r\nimport type { TransformAPI }           from '../transform/types';\r\n\r\n/**\r\n * Encapsulates internal data from a TJSPosition instance to be manipulated by {@link UpdateElementManager}.\r\n */\r\nexport class UpdateElementData\r\n{\r\n   changeSet: PositionChangeSet;\r\n\r\n   data: TJSPositionData;\r\n\r\n   dataSubscribers: TJSPositionData;\r\n\r\n   dimensionData: { width: number | 'auto' | 'inherit' | null, height: number | 'auto' | 'inherit' | null };\r\n\r\n   options: OptionsInternal;\r\n\r\n   queued: boolean;\r\n\r\n   storeDimension: Writable<{ width: number | 'auto' | 'inherit' | null, height: number | 'auto' | 'inherit' | null }>;\r\n   storeTransform: Writable<TransformAPI.TransformData>;\r\n\r\n   styleCache: TJSPositionStyleCache;\r\n\r\n   subscribers: Subscriber<Data.TJSPositionData>[];\r\n\r\n   transforms: TransformAPI;\r\n   transformData: TJSTransformData;\r\n\r\n   constructor(changeSet: PositionChangeSet, data: TJSPositionData, options: OptionsInternal,\r\n    styleCache: TJSPositionStyleCache, subscribers: Subscriber<Data.TJSPositionData>[],\r\n     transforms: TransformAPI)\r\n   {\r\n      /**\r\n       */\r\n      this.changeSet = changeSet;\r\n\r\n      /**\r\n       * Stores the private data from TJSPosition.\r\n       */\r\n      this.data = data;\r\n\r\n      /**\r\n       * Provides a copy of local data sent to subscribers.\r\n       */\r\n      this.dataSubscribers = Object.seal(new TJSPositionData());\r\n\r\n      /**\r\n       * Stores the current dimension data used for the readable `dimension` store.\r\n       */\r\n      this.dimensionData = Object.seal({ width: 0, height: 0 });\r\n\r\n      /**\r\n       */\r\n      this.options = options;\r\n\r\n      /**\r\n       * Stores if this TJSPosition / update data is queued for update.\r\n       */\r\n      this.queued = false;\r\n\r\n      /**\r\n       */\r\n      this.styleCache = styleCache;\r\n\r\n      /**\r\n       */\r\n      this.storeDimension = writable(this.dimensionData);\r\n\r\n      /**\r\n       */\r\n      this.subscribers = subscribers;\r\n\r\n      /**\r\n       */\r\n      this.transforms = transforms;\r\n\r\n      /**\r\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\r\n       * subscribers to the store or calculateTransform options is true.\r\n       */\r\n      this.transformData = new TJSTransformData();\r\n\r\n      /**\r\n       * When there are subscribers set option to calculate transform updates; set to false when no subscribers.\r\n       */\r\n      this.storeTransform = writable(this.transformData, () =>\r\n      {\r\n         this.options.transformSubscribed = true;\r\n         return () => this.options.transformSubscribed = false;\r\n      });\r\n   }\r\n}\r\n","import { nextAnimationFrame }       from '#runtime/util/animate';\r\n\r\nimport { TJSPositionDataUtil }      from '../data';\r\n\r\nimport type { Subscriber }          from 'svelte/store';\r\n\r\nimport type { PositionChangeSet }   from './PositionChangeSet';\r\nimport type { UpdateElementData }   from './UpdateElementData';\r\n\r\nimport type { TJSPositionData }     from '../data';\r\nimport type { ValidationData }      from '../transform/types-local';\r\n\r\n/**\r\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to await\r\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\r\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\r\n * element are in sync with the browser and potentially in the future be further throttled.\r\n */\r\nexport class UpdateElementManager\r\n{\r\n   /**\r\n    * Stores the active list of all TJSPosition instances currently updating. The list entries are recycled between\r\n    * updates.\r\n    */\r\n   static list: ([HTMLElement, UpdateElementData] | [undefined, undefined])[] = [];\r\n\r\n   /**\r\n    * Tracks the current position in the list.\r\n    */\r\n   static listCntr: number = 0;\r\n\r\n   static updatePromise: Promise<number> | undefined;\r\n\r\n   /**\r\n    * Potentially adds the given element and internal updateData instance to the list.\r\n    *\r\n    * @param el - An HTMLElement instance.\r\n    *\r\n    * @param updateData - An UpdateElementData instance.\r\n    *\r\n    * @returns The unified next frame update promise. Returns `currentTime`.\r\n    */\r\n   static add(el: HTMLElement, updateData: UpdateElementData): Promise<number>\r\n   {\r\n      if (this.listCntr < this.list.length)\r\n      {\r\n         const entry = this.list[this.listCntr] as [HTMLElement, UpdateElementData];\r\n         entry[0] = el;\r\n         entry[1] = updateData;\r\n      }\r\n      else\r\n      {\r\n         this.list.push([el, updateData]);\r\n      }\r\n\r\n      this.listCntr++;\r\n      updateData.queued = true;\r\n\r\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\r\n\r\n      return this.updatePromise;\r\n   }\r\n\r\n   /**\r\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\r\n    *\r\n    * @returns The next frame Promise / currentTime from nextAnimationFrame.\r\n    */\r\n   static async wait(): Promise<number>\r\n   {\r\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\r\n      const currentTime: number = await nextAnimationFrame();\r\n\r\n      this.updatePromise = void 0;\r\n\r\n      for (let cntr: number = this.listCntr; --cntr >= 0;)\r\n      {\r\n         // Obtain data for entry.\r\n         const entry = this.list[cntr];\r\n         const el = entry[0] as HTMLElement;\r\n         const updateData = entry[1] as UpdateElementData;\r\n\r\n         // Clear entry data.\r\n         entry[0] = void 0;\r\n         entry[1] = void 0;\r\n\r\n         // Reset queued state.\r\n         updateData.queued = false;\r\n\r\n         // Early out if the element is no longer connected to the DOM / shadow root.\r\n         if (!el.isConnected) { continue; }\r\n\r\n         if (updateData.options.ortho)\r\n         {\r\n            UpdateElementManager.#updateElementOrtho(el, updateData);\r\n         }\r\n         else\r\n         {\r\n            UpdateElementManager.#updateElement(el, updateData);\r\n         }\r\n\r\n         // If calculate transform options is enabled then update the transform data and set the readable store.\r\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\r\n         {\r\n            UpdateElementManager.#updateTransform(updateData);\r\n         }\r\n\r\n         // Update all subscribers with changed data.\r\n         this.updateSubscribers(updateData);\r\n      }\r\n\r\n      this.listCntr = 0;\r\n\r\n      return currentTime;\r\n   }\r\n\r\n   /**\r\n    * Potentially immediately updates the given element.\r\n    *\r\n    * @param el - An HTMLElement instance.\r\n    *\r\n    * @param updateData - An UpdateElementData instance.\r\n    */\r\n   static immediate(el: HTMLElement, updateData: UpdateElementData): void\r\n   {\r\n      // Early out if the element is no longer connected to the DOM / shadow root.\r\n      if (!el.isConnected) { return; }\r\n\r\n      if (updateData.options.ortho)\r\n      {\r\n         UpdateElementManager.#updateElementOrtho(el, updateData);\r\n      }\r\n      else\r\n      {\r\n         UpdateElementManager.#updateElement(el, updateData);\r\n      }\r\n\r\n      // If calculate transform options is enabled then update the transform data and set the readable store.\r\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\r\n      {\r\n         UpdateElementManager.#updateTransform(updateData);\r\n      }\r\n\r\n      // Update all subscribers with changed data.\r\n      this.updateSubscribers(updateData);\r\n   }\r\n\r\n   /**\r\n    * @param updateData - Data change set.\r\n    */\r\n   static updateSubscribers(updateData: UpdateElementData): void\r\n   {\r\n      const data: TJSPositionData = updateData.data;\r\n      const changeSet: PositionChangeSet = updateData.changeSet;\r\n\r\n      if (!changeSet.hasChange()) { return; }\r\n\r\n      // Make a copy of the data.\r\n      const output: TJSPositionData = TJSPositionDataUtil.copyData(data, updateData.dataSubscribers);\r\n\r\n      const subscribers: Subscriber<TJSPositionData>[] = updateData.subscribers;\r\n\r\n      // Early out if there are no subscribers.\r\n      if (subscribers.length > 0)\r\n      {\r\n         for (let cntr = 0; cntr < subscribers.length; cntr++) { subscribers[cntr](output); }\r\n      }\r\n\r\n      // Update dimension data if width / height has changed.\r\n      if (changeSet.width || changeSet.height)\r\n      {\r\n         updateData.dimensionData.width = data.width;\r\n         updateData.dimensionData.height = data.height;\r\n         updateData.storeDimension.set(updateData.dimensionData);\r\n      }\r\n\r\n      changeSet.set(false);\r\n   }\r\n\r\n   // Internal Implementation ----------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * Temporary data for validation.\r\n    */\r\n   static #validationData: ValidationData = Object.seal({\r\n      height: 0,\r\n      width: 0 ,\r\n      marginLeft: 0,\r\n      marginTop: 0\r\n   });\r\n\r\n   /**\r\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to\r\n    * await on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\r\n    * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\r\n    * element are in sync with the browser and potentially in the future be further throttled.\r\n    *\r\n    * @param el - The target HTMLElement.\r\n    *\r\n    * @param updateData - Update data.\r\n    */\r\n   static #updateElement(el: HTMLElement, updateData: UpdateElementData): void\r\n   {\r\n      const changeSet: PositionChangeSet = updateData.changeSet;\r\n      const data: TJSPositionData = updateData.data;\r\n\r\n      if (changeSet.left)\r\n      {\r\n         el.style.left = `${data.left}px`;\r\n      }\r\n\r\n      if (changeSet.top)\r\n      {\r\n         el.style.top = `${data.top}px`;\r\n      }\r\n\r\n      if (changeSet.zIndex)\r\n      {\r\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : '';\r\n      }\r\n\r\n      if (changeSet.width)\r\n      {\r\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width as string;\r\n      }\r\n\r\n      if (changeSet.height)\r\n      {\r\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height as string;\r\n      }\r\n\r\n      if (changeSet.transformOrigin)\r\n      {\r\n         el.style.transformOrigin = data.transformOrigin as string;\r\n      }\r\n\r\n      // Update all transforms in order added to transforms object.\r\n      if (changeSet.transform)\r\n      {\r\n         el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : '';\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to\r\n    * await on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\r\n    * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\r\n    * element are in sync with the browser and potentially in the future be further throttled.\r\n    *\r\n    * @param el - The target HTMLElement.\r\n    *\r\n    * @param updateData - Update data.\r\n    */\r\n   static #updateElementOrtho(el: HTMLElement, updateData: UpdateElementData)\r\n   {\r\n      const changeSet: PositionChangeSet = updateData.changeSet;\r\n      const data: TJSPositionData = updateData.data;\r\n\r\n      if (changeSet.zIndex)\r\n      {\r\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : '';\r\n      }\r\n\r\n      if (changeSet.width)\r\n      {\r\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width as string;\r\n      }\r\n\r\n      if (changeSet.height)\r\n      {\r\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height as string;\r\n      }\r\n\r\n      if (changeSet.transformOrigin)\r\n      {\r\n         el.style.transformOrigin = data.transformOrigin as string;\r\n      }\r\n\r\n      // Update all transforms in order added to transforms object.\r\n      if (changeSet.left || changeSet.top || changeSet.transform)\r\n      {\r\n         el.style.transform = updateData.transforms.getCSSOrtho(data);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Updates the applied transform data and sets the readable `transform` store.\r\n    *\r\n    * @param updateData - Update element data.\r\n    */\r\n   static #updateTransform(updateData: UpdateElementData): void\r\n   {\r\n      const validationData = this.#validationData;\r\n\r\n      validationData.height = updateData.data.height !== 'auto' && updateData.data.height !== 'inherit' ?\r\n       updateData.data.height : updateData.styleCache.offsetHeight;\r\n\r\n      validationData.width = updateData.data.width !== 'auto' && updateData.data.width !== 'inherit' ?\r\n       updateData.data.width : updateData.styleCache.offsetWidth;\r\n\r\n      validationData.marginLeft = updateData.styleCache.marginLeft;\r\n\r\n      validationData.marginTop = updateData.styleCache.marginTop;\r\n\r\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\r\n      // when position width / height is 'auto'.\r\n      updateData.transforms.getData(updateData.data, updateData.transformData, validationData);\r\n\r\n      updateData.storeTransform.set(updateData.transformData);\r\n   }\r\n}\r\n","import { clamp }                    from '#runtime/math/util';\nimport { subscribeIgnoreFirst }     from '#runtime/svelte/store/util';\nimport { propertyStore }            from '#runtime/svelte/store/writable-derived';\nimport { A11yHelper }               from '#runtime/util/a11y';\n\nimport {\n   isIterable,\n   isObject,\n   isPlainObject }                  from '#runtime/util/object';\n\nimport {\n   AnimationAPIImpl,\n   AnimationGroupAPIImpl }          from './animation';\n\nimport {\n   ConvertStringData,\n   TJSPositionData,\n   TJSPositionDataUtil }            from './data';\n\nimport { PositionStateAPI }         from './state';\nimport { SystemBase }               from './system';\nimport { Centered }                 from './system/initial';\n\nimport {\n   AdapterValidators,\n   TransformBounds }                from './system/validators';\n\nimport {\n   TJSTransformData,\n   TJSTransforms }                  from './transform';\n\nimport {\n   PositionChangeSet,\n   UpdateElementData,\n   UpdateElementManager }           from './update';\n\nimport {\n   NumberGuard,\n   TJSPositionStyleCache }          from './util';\n\nimport type {\n   Subscriber,\n   Updater,\n   Unsubscriber }                   from 'svelte/store';\n\nimport type { ResizeObserverData }  from '#runtime/util/dom/observer';\n\nimport type {\n   OptionsInternal,\n   TJSPositionDataWithAlias }       from './types-local';\n\nimport type {\n   AnimationAPI,\n   AnimationGroupAPI }              from './animation/types';\n\nimport type { ValidatorAPI }        from './system/validators/types';\n\n/**\n * Provides an advanced compound store for positioning elements dynamically including an optimized pipeline for updating\n * an associated element. Essential tweening / animation is supported in addition to a validation API to constrain\n * positional updates.\n */\nclass TJSPosition implements TJSPosition.WritableExt\n{\n   /**\n    * Public API for {@link TJSPosition.Initial}.\n    */\n   static #positionInitial: Readonly<TJSPosition.API.DefaultInitial> = Object.freeze({\n      browserCentered: new Centered({ lock: true }),\n      Centered\n   });\n\n   /**\n    * Public API for {@link TJSPosition.Validators}\n    */\n   static #positionValidators: Readonly<TJSPosition.API.DefaultValidators> = Object.freeze({\n      TransformBounds,\n      transformWindow: new TransformBounds({ lock: true })\n   });\n\n   /**\n    * Stores all position data / properties.\n    */\n   #data: TJSPositionData = Object.seal(new TJSPositionData());\n\n   /**\n    * Provides the animation API.\n    */\n   #animate: AnimationAPIImpl = new AnimationAPIImpl(this, this.#data);\n\n   /**\n    * Provides a way to turn on / off the position handling.\n    */\n   #enabled: boolean = true;\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    */\n   #options: OptionsInternal = {\n      calculateTransform: false,\n      initial: void 0,\n      ortho: true,\n      transformSubscribed: false,\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    */\n   #parent: TJSPosition.PositionParent | undefined;\n\n   /**\n    * Stores the style attributes that changed on update.\n    */\n   #positionChangeSet: PositionChangeSet = new PositionChangeSet();\n\n   /**\n    * Tracks the current state if this position instance is a candidate for resize observation by the `resizeObserver`\n    * action. This is `true` when `width` or `height` is `auto` or `inherit`.\n    */\n   #resizeObservable: boolean = false;\n\n   /**\n    */\n   readonly #stores: TJSPosition.API.Stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    */\n   readonly #styleCache: TJSPositionStyleCache;\n\n   /**\n    * Stores the subscribers.\n    */\n   #subscribers: Subscriber<Data.TJSPositionData>[] = [];\n\n   /**\n    */\n   #transforms: TJSTransforms = new TJSTransforms();\n\n   /**\n    */\n   #updateElementData: UpdateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    */\n   #updateElementPromise: Promise<number> | undefined;\n\n   /**\n    */\n   #validators: AdapterValidators;\n\n   /**\n    */\n   #validatorData: ValidatorAPI.ValidatorData[];\n\n   /**\n    */\n   #state: PositionStateAPI = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns Public Animation Group API.\n    */\n   static get Animate(): AnimationGroupAPI { return AnimationGroupAPIImpl; }\n\n   /**\n    * @returns TJSPositionData constructor.\n    */\n   static get Data(): Data.TJSPositionDataConstructor { return TJSPositionData; }\n\n   /**\n    * @returns TJSPosition default initial systems.\n    */\n   static get Initial(): Readonly<TJSPosition.API.DefaultInitial> { return this.#positionInitial; }\n\n   /**\n    * @returns `SystemBase` constructor.\n    */\n   static get SystemBase(): System.SystemBaseConstructor { return SystemBase; }\n\n   /**\n    * Returns TJSTransformData class / constructor.\n    *\n    * @returns TransformData class / constructor.\n    */\n   static get TransformData(): TransformAPI.TransformDataConstructor { return TJSTransformData; }\n\n   /**\n    * Returns default validator systems.\n    *\n    * @returns Available validators.\n    */\n   static get Validators(): Readonly<TJSPosition.API.DefaultValidators> { return this.#positionValidators; }\n\n   /**\n    * Returns a list of supported transform origins.\n    *\n    * @returns The supported transform origin strings.\n    */\n   static get transformOrigins(): Readonly<TransformAPI.TransformOrigin[]>\n   {\n      return TJSTransforms.transformOrigins;\n   }\n\n   /**\n    * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n    * {@link TJSPositionData} instance is created.\n    *\n    * @param source - The source instance to copy from.\n    *\n    * @param [target] - Target TJSPositionData like object; if one is not provided a new instance is created.\n    *\n    * @returns The target instance with all TJSPositionData fields.\n    */\n   static copyData(source: Partial<Data.TJSPositionData>, target: Data.TJSPositionData):\n    Data.TJSPositionData\n   {\n      return TJSPositionDataUtil.copyData(source, target);\n   }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators. The position parent is not\n    * copied and a new one must be set manually via the {@link TJSPosition.parent} setter.\n    *\n    * @param position - A position instance.\n    *\n    * @param [options] - Unique new options to set.\n    *\n    * @returns A duplicate position instance.\n    */\n   static duplicate(position: TJSPosition, options: TJSPosition.Options.ConfigAll = {}): TJSPosition\n   {\n      if (!(position instanceof TJSPosition)) { throw new TypeError(`'position' is not an instance of TJSPosition.`); }\n\n      const newPosition = new TJSPosition(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param [parentOrOptions] - A  potential parent element or object w/ `elementTarget` accessor. You may also forego\n    *        setting the parent and pass in the options object.\n    *\n    * @param [options] - The options object.\n    */\n   constructor(parentOrOptions?: TJSPosition.PositionParent | TJSPosition.Options.ConfigAll,\n    options?: TJSPosition.Options.ConfigAll)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parentOrOptions))\n      {\n         options = parentOrOptions;\n      }\n      else\n      {\n         this.#parent = parentOrOptions as TJSPosition.PositionParent;\n      }\n\n      this.#styleCache = new TJSPositionStyleCache();\n\n      const updateData = new UpdateElementData(this.#positionChangeSet, this.#data, this.#options, this.#styleCache,\n       this.#subscribers, this.#transforms);\n\n      this.#updateElementData = updateData;\n\n      // Set TJSPosition options -------------------------------------------------------------------------------------\n\n      if (typeof options?.calculateTransform === 'boolean')\n      {\n         this.#options.calculateTransform = options.calculateTransform;\n      }\n\n      if (typeof options?.ortho === 'boolean') { this.#options.ortho = options.ortho; }\n\n      // Initialize stores -------------------------------------------------------------------------------------------\n\n      this.#stores = Object.freeze({\n         // The main properties for manipulating TJSPosition.\n         height: propertyStore<TJSPositionData, 'height'>(this, 'height'),\n         left: propertyStore<TJSPositionData, 'left'>(this, 'left'),\n         rotateX: propertyStore<TJSPositionData, 'rotateX'>(this, 'rotateX'),\n         rotateY: propertyStore<TJSPositionData, 'rotateY'>(this, 'rotateY'),\n         rotateZ: propertyStore<TJSPositionData, 'rotateZ'>(this, 'rotateZ'),\n         scale: propertyStore<TJSPositionData, 'scale'>(this, 'scale'),\n         top: propertyStore<TJSPositionData, 'top'>(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin') as TransformAPI.TransformOriginWritable,\n         translateX: propertyStore<TJSPositionData, 'translateX'>(this, 'translateX'),\n         translateY: propertyStore<TJSPositionData, 'translateY'>(this, 'translateY'),\n         translateZ: propertyStore<TJSPositionData, 'translateZ'>(this, 'translateZ'),\n         width: propertyStore<TJSPositionData, 'width'>(this, 'width'),\n         zIndex: propertyStore<TJSPositionData, 'zIndex'>(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore<TJSPositionData, 'maxHeight'>(this, 'maxHeight'),\n         maxWidth: propertyStore<TJSPositionData, 'maxWidth'>(this, 'maxWidth'),\n         minHeight: propertyStore<TJSPositionData, 'minHeight'>(this, 'minHeight'),\n         minWidth: propertyStore<TJSPositionData, 'minWidth'>(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeObservable: { subscribe: this.#styleCache.stores.resizeObservable.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      });\n\n      /**\n       * Define 'values' getter to retrieve static transform origins.\n       */\n      Object.defineProperty(this.#stores.transformOrigin, 'values', {\n         get: (): Readonly<TransformAPI.TransformOrigin[]> => TJSPosition.transformOrigins\n      });\n\n      // When resize change from any applied `resizeObserver` action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' or `inherit` for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData: ResizeObserverData.ResizeObject): void =>\n      {\n         const parent: TJSPosition.PositionParent | undefined = this.#parent;\n         const el: HTMLElement | undefined = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (A11yHelper.isFocusTarget(el) && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set();\n         }\n      });\n\n      [this.#validators, this.#validatorData] = AdapterValidators.create(() => this.set());\n\n      if (options?.initial)\n      {\n         const initial: System.Initial.InitialSystem = options.initial;\n\n         if (typeof initial?.getLeft !== 'function' || typeof initial?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initial = initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator))\n         {\n            this.validators.add(...options.validator);\n         }\n         else\n         {\n            /**\n             */\n            const validatorFn: ValidatorAPI.ValidatorFn | ValidatorAPI.ValidatorData = options.validator;\n\n            this.validators.add(validatorFn);\n         }\n      }\n\n      Object.seal(this);\n\n      // Set any remaining position data.\n      if (isObject(options)) { this.set(options); }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns Animation instance API.\n    */\n   get animate(): AnimationAPI\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns Dimension data.\n    */\n   get dimension(): Readonly<{ width: number | 'auto' | 'inherit' | null, height: number | 'auto' | 'inherit' | null }>\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the enabled state.\n    *\n    * @returns Enabled state.\n    */\n   get enabled(): boolean\n   {\n      return this.#enabled;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns Current HTMLElement being positioned.\n    */\n   get element(): HTMLElement | undefined\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns Promise resolved on element update.\n    */\n   get elementUpdated(): Promise<number> | undefined\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link TJSPosition.PositionParent} instance.\n    *\n    * @returns The current position parent instance.\n    */\n   get parent(): TJSPosition.PositionParent | undefined { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns TJSPosition state API.\n    */\n   get state(): PositionStateAPI { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns Derived / writable stores.\n    */\n   get stores(): TJSPosition.API.Stores { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns Transform Data.\n    */\n   get transform(): TransformAPI.TransformData\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns Validators API\n    */\n   get validators(): ValidatorAPI { return this.#validators; }\n\n   /**\n    * Sets the enabled state.\n    *\n    * @param enabled - New enabled state.\n    */\n   set enabled(enabled: boolean)\n   {\n      if (typeof enabled !== 'boolean')\n      {\n         throw new TypeError(`'enabled' is not a boolean.`);\n      }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Sets the associated {@link TJSPosition.PositionParent} instance. Resets the style cache and default data.\n    *\n    * @param parent - A PositionParent instance or undefined to disassociate\n    */\n   set parent(parent: TJSPosition.PositionParent | undefined)\n   {\n      if (parent !== void 0 && !A11yHelper.isFocusTarget(parent) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns height\n    */\n   get height(): number | 'auto' | 'inherit' | null { return this.#data.height; }\n\n   /**\n    * @returns left\n    */\n   get left(): number | null { return this.#data.left; }\n\n   /**\n    * @returns maxHeight\n    */\n   get maxHeight(): number | null { return this.#data.maxHeight; }\n\n   /**\n    * @returns maxWidth\n    */\n   get maxWidth(): number | null { return this.#data.maxWidth; }\n\n   /**\n    * @returns minHeight\n    */\n   get minHeight(): number | null { return this.#data.minHeight; }\n\n   /**\n    * @returns minWidth\n    */\n   get minWidth(): number | null { return this.#data.minWidth; }\n\n   /**\n    * @returns rotateX\n    */\n   get rotateX(): number | null { return this.#data.rotateX; }\n\n   /**\n    * @returns rotateY\n    */\n   get rotateY(): number | null { return this.#data.rotateY; }\n\n   /**\n    * @returns rotateZ\n    */\n   get rotateZ(): number | null { return this.#data.rotateZ; }\n\n   /**\n    * @returns Alias for rotateZ\n    */\n   get rotation(): number | null { return this.#data.rotateZ; }\n\n   /**\n    * @returns scale\n    */\n   get scale(): number | null { return this.#data.scale; }\n\n   /**\n    * @returns top\n    */\n   get top(): number | null { return this.#data.top; }\n\n   /**\n    * @returns transformOrigin\n    */\n   get transformOrigin(): TransformAPI.TransformOrigin | null { return this.#data.transformOrigin; }\n\n   /**\n    * @returns translateX\n    */\n   get translateX(): number | null { return this.#data.translateX; }\n\n   /**\n    * @returns translateY\n    */\n   get translateY(): number | null { return this.#data.translateY; }\n\n   /**\n    * @returns translateZ\n    */\n   get translateZ(): number | null { return this.#data.translateZ; }\n\n   /**\n    * @returns width\n    */\n   get width(): number | 'auto' | 'inherit' | null { return this.#data.width; }\n\n   /**\n    * @returns z-index\n    */\n   get zIndex(): number | null { return this.#data.zIndex; }\n\n   /**\n    * @param height -\n    */\n   set height(height: number | string | null)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param left -\n    */\n   set left(left: number | string | null)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param maxHeight -\n    */\n   set maxHeight(maxHeight: number | string | null)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param maxWidth -\n    */\n   set maxWidth(maxWidth: number | string | null)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param minHeight -\n    */\n   set minHeight(minHeight: number | string | null)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param minWidth -\n    */\n   set minWidth(minWidth: number | string | null)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param rotateX -\n    */\n   set rotateX(rotateX: number | string | null)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param rotateY -\n    */\n   set rotateY(rotateY: number | string | null)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param rotateZ -\n    */\n   set rotateZ(rotateZ: number | string | null)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param  rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ: number | string | null)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param scale -\n    */\n   set scale(scale: number | null)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param top -\n    */\n   set top(top: number | string | null)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param transformOrigin -\n    */\n   set transformOrigin(transformOrigin: TransformAPI.TransformOrigin)\n   {\n      if (TJSTransforms.transformOrigins.includes(transformOrigin))\n      {\n         this.#stores.transformOrigin.set(transformOrigin);\n      }\n   }\n\n   /**\n    * @param translateX -\n    */\n   set translateX(translateX: number | string | null)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param translateY -\n    */\n   set translateY(translateY: number | string | null)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param translateZ -\n    */\n   set translateZ(translateZ: number | string | null)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param width -\n    */\n   set width(width: number | string | null)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param zIndex -\n    */\n   set zIndex(zIndex: number | null)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position data to given object `data` object. By default, `null` position data is not assigned.\n    * Other options allow configuration of the data assigned including setting default numeric values for any properties\n    * that are null.\n    *\n    * @param [data] - Target to assign current position data.\n    *\n    * @param [options] - Defines options for specific keys and substituting null for numeric default values. By\n    *        default, nullable keys are included.\n    *\n    * @returns Passed in object with current position data.\n    */\n   get(data: { [key: string]: any } = {}, options: TJSPosition.Options.Get = {}):\n    Partial<Data.TJSPositionData>\n   {\n      const keys: Iterable<keyof Data.TJSPositionData> | undefined = options?.keys;\n      const excludeKeys: Iterable<keyof Data.TJSPositionData> | undefined = options?.exclude;\n      const nullable: boolean = options?.nullable ?? true;\n      const numeric: boolean = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         for (const key of keys)\n         {\n            // Convert any null values to numeric defaults if `numeric` is true.\n            data[key] = numeric ? TJSPositionDataUtil.getDataOrDefault(this, key) : this[key];\n\n            // Potentially remove null keys.\n            if (!nullable && data[key] === null) { delete data[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         return data;\n      }\n      else\n      {\n         data = Object.assign(data, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { TJSPositionDataUtil.setNumericDefaults(data); }\n\n         if (!nullable)\n         {\n            for (const key in data)\n            {\n               if (data[key] === null) { delete data[key]; }\n            }\n         }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns Current position data.\n    */\n   toJSON(): Data.TJSPositionData\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition}. This allows position to be fully\n    * reactive and in control of updating inline styles for a connected {@link HTMLElement}.\n    *\n    * The initial set call with a target element will always set width / height as this is necessary for correct\n    * calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them via the validator API available from\n    * {@link TJSPosition.validators}.\n    *\n    * Updates to any target element are decoupled from the underlying TJSPosition data. This method returns this\n    * instance that you can then await on the target element inline style update by using\n    * {@link TJSPosition.elementUpdated}.\n    *\n    * Relative updates to any property of {@link TJSPositionData} are possible by specifying properties as strings.\n    * This string should be in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n    * {@link TJSPosition.set} will apply the `addition`, `subtraction`, or `multiplication` operation specified against\n    * the current value of the given property. Please see {@link Data.TJSPositionDataRelative} for a detailed\n    * description.\n    *\n    * @param [position] - TJSPosition data to set.\n    *\n    * @param [options] - Additional options.\n    *\n    * @returns This TJSPosition instance.\n    */\n   set(position: Data.TJSPositionDataRelative = {}, options: TJSPosition.Options.Set = {}): this\n   {\n      if (!isObject(position)) { throw new TypeError(`TJSPosition - set error: 'position' is not an object.`); }\n\n      // TJSPosition.PositionParent\n      const parent: any = this.#parent;\n\n      // An early out to prevent `set` from taking effect if not enabled.\n      if (!this.#enabled)\n      {\n         return this;\n      }\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      // TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      const immediateElementUpdate = options?.immediateElementUpdate ?? false;\n\n      const data: Data.TJSPositionData = this.#data;\n      const transforms: TransformAPI = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl: HTMLElement = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n\n      const el: HTMLElement | undefined = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl :\n       void 0;\n\n      const changeSet: PositionChangeSet = this.#positionChangeSet;\n      const styleCache: TJSPositionStyleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            {\n               // TODO: This is commented out as there is a Chrome bug that reduces quality / blurs\n               // child elements when `will-change: transform` is set.\n               // https://bugs.chromium.org/p/chromium/issues/detail?id=1343711#c4\n\n               // el.style.willChange = this.#options.ortho ? 'transform' : 'top, left, transform';\n            }\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any string position data to numeric inputs.\n         ConvertStringData.process(position, this.#data, el);\n\n         position = this.#updatePosition(position as TJSPositionDataWithAlias, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (NumberGuard.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (NumberGuard.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.maxHeight))\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.maxWidth))\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.minHeight))\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.minWidth))\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.rotateX))\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.rotateY))\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.rotateZ))\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.scale))\n      {\n         position.scale = typeof position.scale === 'number' ? clamp(position.scale, 0, 1000) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && TJSTransforms.transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.translateX))\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.translateY))\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (NumberGuard.isFiniteOrNull(position.translateZ))\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (NumberGuard.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      const widthIsObservable: boolean = position.width === 'auto' || position.width === 'inherit';\n\n      if (NumberGuard.isFiniteOrNull(position.width) || widthIsObservable)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width)\n         {\n            data.width = position.width as number | 'auto' | 'inherit';\n            changeSet.width = true;\n         }\n      }\n\n      const heightIsObservable: boolean = position.height === 'auto' || position.height === 'inherit';\n\n      if (NumberGuard.isFiniteOrNull(position.height) || heightIsObservable)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height)\n         {\n            data.height = position.height as number | 'auto' | 'inherit';\n            changeSet.height = true;\n         }\n      }\n\n      // Potentially update the `resizeObservable` store when the state of `width` or `height` changes between\n      // `auto` / `inherit` to a number or null.\n      const resizeObservable: boolean = widthIsObservable || heightIsObservable;\n      if (this.#resizeObservable !== resizeObservable)\n      {\n         this.#resizeObservable = resizeObservable;\n         // Set store on next clock tick.\n         // setTimeout(() => this.#styleCache.stores.resizeObservable.set(resizeObservable), 0);\n         this.#styleCache.stores.resizeObservable.set(resizeObservable);\n      }\n\n      if (el)\n      {\n         const defaultData: Data.TJSPositionDataExtra | undefined = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (!isObject(defaultData)) { this.#state.save({ name: '#defaultData', ...Object.assign({}, data) }); }\n\n         // If `immediateElementUpdate` is true then update the element immediately. This is for rAF based library\n         // integrations like GSAP and updates coming from AnimationManager.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(globalThis.performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    * @param handler - Callback function that is invoked on update / changes. Receives a readonly copy of the\n    *        TJSPositionData.\n    *\n    * @returns Unsubscribe function.\n    */\n   subscribe(handler: Subscriber<Readonly<Data.TJSPositionData>>): Unsubscriber\n   {\n      const currentIdx: number = this.#subscribers.findIndex((entry: Function): boolean => entry === handler);\n      if (currentIdx === -1)\n      {\n         this.#subscribers.push(handler);          // add handler to the array of subscribers\n         handler(Object.assign({}, this.#data));   // call handler with current value\n      }\n\n      // Return unsubscribe function.\n      return (): void =>\n      {\n         const existingIdx: number = this.#subscribers.findIndex((entry: Function): boolean => entry === handler);\n         if (existingIdx !== -1) { this.#subscribers.splice(existingIdx, 1); }\n      };\n   }\n\n   /**\n    * Provides the {@link Writable} store `update` method. Receive and return a {@link TJSPositionData} instance to\n    * update the position state. You may manipulate numeric properties by providing relative adjustments described in\n    * {@link TJSPositionDataRelative}.\n    *\n    * @param updater -\n    */\n   update(updater: Updater<Data.TJSPositionDataRelative>): void\n   {\n      const result: Data.TJSPositionDataRelative = updater(this.get());\n\n      if (!isObject(result)) { throw new TypeError(`'result' of 'updater' is not an object.`); }\n\n      this.set(result);\n   }\n\n   // Internal Implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Temporary data storage for `TJSPosition.#updatePosition`.\n    */\n   static #updateDataCopy: TJSPositionData = Object.seal(new TJSPositionData());\n\n   /**\n    * Temporary data storage for `TJSPosition.#updatePosition`.\n    */\n   static #validationData: ValidatorAPI.ValidationData = Object.seal({\n      position: void 0,\n      parent: void 0,\n      el: void 0,\n      computed: void 0,\n      transforms: void 0,\n      height: void 0,\n      width: void 0,\n      marginLeft: void 0,\n      marginTop: void 0,\n      maxHeight: void 0,\n      maxWidth: void 0,\n      minHeight: void 0,\n      minWidth: void 0,\n      rest: void 0\n   } as unknown as ValidatorAPI.ValidationData);\n\n   /**\n    * @param data -\n    *\n    * @param parent -\n    *\n    * @param el -\n    *\n    * @param styleCache -\n    *\n    * @returns Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   }: TJSPositionDataWithAlias, parent: TJSPosition.PositionParent, el: HTMLElement,\n    styleCache: TJSPositionStyleCache): TJSPositionData | null\n   {\n      let currentPosition: TJSPositionData | null = TJSPositionDataUtil.copyData(this.#data,\n       TJSPosition.#updateDataCopy);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (width !== void 0 || el.style.width === '')\n      {\n         const widthValid: boolean = width === null || Number.isFinite(width);\n\n         if (width === 'auto' || (currentPosition.width === 'auto' && !widthValid))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && !widthValid))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth: number | 'auto' | 'inherit' | null = NumberGuard.isFinite(width) ? width :\n             currentPosition.width;\n\n            currentPosition.width = width = NumberGuard.isFinite(newWidth) ? Math.round(newWidth) :\n             styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (height !== void 0 || el.style.height === '')\n      {\n         const heightValid: boolean = height === null || Number.isFinite(height);\n\n         if (height === 'auto' || (currentPosition.height === 'auto' && !heightValid))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && !heightValid))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight: number | 'auto' | 'inherit' | null = NumberGuard.isFinite(height) ? height :\n             currentPosition.height;\n\n            currentPosition.height = height = NumberGuard.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (NumberGuard.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options?.initial?.getLeft === 'function' ?\n          this.#options.initial.getLeft(width as number) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options?.initial?.getTop === 'function' ?\n          this.#options.initial.getTop(height as number) : 0;\n      }\n\n      if (NumberGuard.isFiniteOrNull(maxHeight))\n      {\n         currentPosition.maxHeight = NumberGuard.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (NumberGuard.isFiniteOrNull(maxWidth))\n      {\n         currentPosition.maxWidth = NumberGuard.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (NumberGuard.isFiniteOrNull(minHeight))\n      {\n         currentPosition.minHeight = NumberGuard.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (NumberGuard.isFiniteOrNull(minWidth))\n      {\n         currentPosition.minWidth = NumberGuard.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (NumberGuard.isFiniteOrNull(rotateX)) { currentPosition.rotateX = rotateX; }\n      if (NumberGuard.isFiniteOrNull(rotateY)) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (NumberGuard.isFiniteOrNull(rotateZ)))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (NumberGuard.isFiniteOrNull(rotation)))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (NumberGuard.isFiniteOrNull(translateX)) { currentPosition.translateX = translateX; }\n      if (NumberGuard.isFiniteOrNull(translateY)) { currentPosition.translateY = translateY; }\n      if (NumberGuard.isFiniteOrNull(translateZ)) { currentPosition.translateZ = translateZ; }\n\n      if (NumberGuard.isFiniteOrNull(scale))\n      {\n         currentPosition.scale = typeof scale === 'number' ? clamp(scale, 0, 1000) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = TJSTransforms.transformOrigins.includes(transformOrigin!) ? transformOrigin :\n          null;\n      }\n\n      if (NumberGuard.isFiniteOrNull(zIndex))\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData: ValidatorAPI.ValidatorData[] = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (this.#validators.enabled && validatorData.length)\n      {\n         const validationData: ValidatorAPI.ValidationData = TJSPosition.#validationData;\n\n         validationData.parent = parent;\n\n         validationData.el = el;\n\n         validationData.computed = styleCache.computed;\n\n         validationData.transforms = this.#transforms;\n\n         validationData.height = height as number;\n\n         validationData.width = width as number;\n\n         validationData.marginLeft = styleCache.marginLeft;\n\n         validationData.marginTop = styleCache.marginTop;\n\n         validationData.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         validationData.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         // TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n         const isMinimized: boolean = (parent as any)?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         validationData.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         validationData.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr: number = 0; cntr < validatorData.length; cntr++)\n         {\n            validationData.position = currentPosition;\n            validationData.rest = rest;\n            currentPosition = validatorData[cntr].validate(validationData);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\n// Imports for TJSPosition namespace ---------------------------------------------------------------------------------\n\nimport type { Action }        from './action/types';\nimport type { Data }          from './data/types';\nimport type { StateAPI }      from './state/types';\nimport type { System }        from './system/types';\nimport type { TransformAPI }  from './transform/types';\n\nimport type {\n   DefaultInitial,\n   DefaultValidators,\n   Options,\n   Positionable,\n   PositionGroup,\n   PositionParent,\n   Stores,\n   WritableExt }              from './types';\n\n/**\n * Provides comprehensive types for {@link TJSPosition} and related actions.\n */\ndeclare namespace TJSPosition {\n   export { Action };\n\n   /**\n    * Public API surface types.\n    */\n   export namespace API\n   {\n      export {\n         AnimationAPI as Animation,\n         AnimationGroupAPI as AnimationGroup,\n         Data,\n         DefaultInitial,\n         DefaultValidators,\n         StateAPI as State,\n         System,\n         Stores,\n         TransformAPI as Transform,\n         ValidatorAPI as Validators\n      }\n   }\n\n   export {\n      Options,\n      Positionable,\n      PositionGroup,\n      PositionParent,\n      WritableExt\n   }\n}\n\nexport { TJSPosition };\n"],"names":[],"mappings":"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"}