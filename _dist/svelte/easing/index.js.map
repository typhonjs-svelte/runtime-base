{"version":3,"file":"index.js","sources":["../../../src/svelte/easing/easingList.js","../../../src/svelte/easing/easingFunc.js","../../../src/svelte/easing/getEasingFunc.js"],"sourcesContent":["/**\r\n * Defines a read-only list of Svelte easing function names.\r\n *\r\n * @type {Readonly<import('./types').EasingFunctionName[]>}\r\n */\r\nexport const easingList = Object.freeze([\r\n   'backIn',\r\n   'backInOut',\r\n   'backOut',\r\n   'bounceIn',\r\n   'bounceInOut',\r\n   'bounceOut',\r\n   'circIn',\r\n   'circInOut',\r\n   'circOut',\r\n   'cubicIn',\r\n   'cubicInOut',\r\n   'cubicOut',\r\n   'elasticIn',\r\n   'elasticInOut',\r\n   'elasticOut',\r\n   'expoIn',\r\n   'expoInOut',\r\n   'expoOut',\r\n   'linear',\r\n   'quadIn',\r\n   'quadInOut',\r\n   'quadOut',\r\n   'quartIn',\r\n   'quartInOut',\r\n   'quartOut',\r\n   'quintIn',\r\n   'quintInOut',\r\n   'quintOut',\r\n   'sineIn',\r\n   'sineInOut',\r\n   'sineOut'\r\n]);\r\n","import * as svelteEasingFunc from '#svelte/easing';\r\n\r\n/**\r\n * @type {Readonly<Record<import('./types').EasingFunctionName, import('#runtime/svelte/easing').EasingFunction>>}\r\n */\r\nexport const easingFunc = svelteEasingFunc;\r\n","import { easingFunc } from './easingFunc.js';\r\n\r\n/**\r\n * Performs a lookup for standard Svelte easing functions by name. For convenience if passing in a function it is\r\n * returned verbatim.\r\n *\r\n * @param {import('./types').EasingFunctionName | import('#runtime/svelte/easing').EasingFunction} nameOrFunc - The name of\r\n *        a standard Svelte easing function or an existing supplied easing function.\r\n *\r\n * @param {object}   [options] - Optional parameters.\r\n *\r\n * @param {import('./types').EasingFunctionName | false} [options.default='linear'] - The default easing function name\r\n *        to apply. When specified as `false` no default fallback easing function is selected.\r\n *\r\n * @returns {import('#runtime/svelte/easing').EasingFunction} The requested easing function.\r\n */\r\nexport function getEasingFunc(nameOrFunc, options)\r\n{\r\n   if (typeof nameOrFunc === 'function') { return nameOrFunc; }\r\n\r\n   const easingFn = easingFunc[nameOrFunc];\r\n\r\n   return easingFn ? easingFn : easingFunc[options?.default ?? 'linear'];\r\n}\r\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;AACxC,GAAG,QAAQ;AACX,GAAG,WAAW;AACd,GAAG,SAAS;AACZ,GAAG,UAAU;AACb,GAAG,aAAa;AAChB,GAAG,WAAW;AACd,GAAG,QAAQ;AACX,GAAG,WAAW;AACd,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,YAAY;AACf,GAAG,UAAU;AACb,GAAG,WAAW;AACd,GAAG,cAAc;AACjB,GAAG,YAAY;AACf,GAAG,QAAQ;AACX,GAAG,WAAW;AACd,GAAG,SAAS;AACZ,GAAG,QAAQ;AACX,GAAG,QAAQ;AACX,GAAG,WAAW;AACd,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,YAAY;AACf,GAAG,UAAU;AACb,GAAG,SAAS;AACZ,GAAG,YAAY;AACf,GAAG,UAAU;AACb,GAAG,QAAQ;AACX,GAAG,WAAW;AACd,GAAG,SAAS;AACZ,CAAC;;ACnCD;AACA;AACA;AACY,MAAC,UAAU,GAAG;;ACH1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,UAAU,EAAE,OAAO;AACjD;AACA,GAAG,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE;AAC/D;AACA,GAAG,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AAC3C;AACA,GAAG,OAAO,QAAQ,GAAG,QAAQ,GAAG,UAAU,CAAC,OAAO,EAAE,OAAO,IAAI,QAAQ,CAAC,CAAC;AACzE;;;;"}