{"version":3,"file":"index.js","sources":["../../../../../src/svelte/action/dom/inline-svg/inline-svg.internal.js","../../../../../src/svelte/action/dom/inline-svg/index.js"],"sourcesContent":["/**\n * @package\n * @typedef {{ width: number; height: number }} Dimension\n * @typedef {{ width: number } | { height: number }} DimensionConstraint\n */\n\n/**\n * @package\n * @param {string} dimension\n * @returns {{ number: number; unit: string }}\n */\nexport function extractDimensionNumberAndUnit(dimension) {\n   const regex = /(\\d+)(\\D*)/;\n   const [, number = '0', unit = ''] = dimension.match(regex) || [];\n   return { number: parseInt(number, 10), unit };\n}\n\n/**\n * @package\n * @param {Dimension} base\n * @param {DimensionConstraint} constraint\n * @returns {Dimension}\n */\nexport function calculateNewDimensions(base, constraint) {\n   const { width, height } = base;\n   if ('width' in constraint) {\n      const { width: constraintWidth } = constraint;\n      return {\n         width: constraintWidth,\n         height: (constraintWidth / width) * height,\n      };\n   }\n   const { height: constraintHeight } = constraint;\n   return {\n      width: (constraintHeight / height) * width,\n      height: constraintHeight,\n   };\n}\n\n/**\n * @package\n * @param {SVGElement} local\n * @param {HTMLElement} remote\n * @returns {{ width: string, height: string }}\n */\nexport function calculateDimensions(local, remote) {\n   const lWidthStr = local.getAttribute('width');\n   const lHeightStr = local.getAttribute('height');\n   if (lWidthStr && lHeightStr) {\n      return { width: lWidthStr, height: lHeightStr };\n   }\n   const lDimension = { width: lWidthStr || '', height: lHeightStr || '' };\n\n   const rWidthStr = remote.getAttribute('width');\n   const rHeightStr = remote.getAttribute('height');\n   const rViewBox = remote.getAttribute('viewBox');\n\n   if (!((rWidthStr && rHeightStr) || rViewBox)) {\n      return lDimension;\n   }\n\n   let rWidth = 0;\n   let rHeight = 0;\n   let rWidthUnit = '';\n   let rHeightUnit = '';\n   if (rWidthStr && rHeightStr) {\n      ({ number: rWidth, unit: rWidthUnit } = extractDimensionNumberAndUnit(rWidthStr));\n      ({ number: rHeight, unit: rHeightUnit } = extractDimensionNumberAndUnit(rHeightStr));\n   } else if (rViewBox) {\n      [, , rWidth, rHeight] = rViewBox.split(' ').map((s) => parseInt(s, 10));\n   }\n\n   if (rWidthUnit !== rHeightUnit) {\n      return {\n         width: lWidthStr || rWidthStr || '',\n         height: lHeightStr || rHeightStr || '',\n      };\n   }\n\n   if (lWidthStr) {\n      const { number, unit } = extractDimensionNumberAndUnit(lWidthStr);\n      const cDimension = calculateNewDimensions(\n         { width: rWidth, height: rHeight },\n         { width: number },\n      );\n      const cUnit = unit || rWidthUnit;\n      return {\n         width: cDimension.width.toFixed(2) + cUnit,\n         height: cDimension.height.toFixed(2) + cUnit,\n      };\n   }\n   if (lHeightStr) {\n      const { number, unit } = extractDimensionNumberAndUnit(lHeightStr);\n      const cDimension = calculateNewDimensions(\n         { width: rWidth, height: rHeight },\n         { height: number },\n      );\n      const cUnit = unit || rHeightUnit;\n      return {\n         width: cDimension.width.toFixed(2) + cUnit,\n         height: cDimension.height.toFixed(2) + cUnit,\n      };\n   }\n   return {\n      width: rWidth + rWidthUnit,\n      height: rHeight + rHeightUnit,\n   };\n}\n","import { calculateDimensions } from './inline-svg.internal.js';\n\n/**\n * Svelte action for dynamically inlining remote-fetched SVG into DOM.\n * @example\n *\n * ```html\n * <script>\n *   import { inlineSvg } from '@svelte-put/inline-svg;\n * </script>\n *\n * <svg use:inlineSvg={\"http://example.com/icon.svg\"}></svg>\n * ```\n *\n * @param {SVGElement} node - SVGElement to inline SVG into\n *\n * @param {import('./types').InlineSvgParameter} param - config for the action.\n *\n * @returns {import('./types').InlineSvgActionReturn}\n */\nexport function inlineSvg(node, param) {\n   let config = resolveConfig(param);\n   async function op() {\n      if (config.src) {\n         const response = await fetch(config.src, { cache: config.cache });\n         const str = config.transform(await response.text());\n         const svg = new DOMParser().parseFromString(str, 'image/svg+xml').documentElement;\n         for (let i = 0; i < svg.attributes.length; i++) {\n            const attr = svg.attributes[i];\n            if (!node.hasAttribute(attr.name) && !['width', 'height'].includes(attr.name)) {\n               node.setAttribute(attr.name, attr.value);\n            }\n         }\n         if (config.autoDimensions) {\n            const dimensions = calculateDimensions(node, svg);\n            node.setAttribute('width', dimensions.width);\n            node.setAttribute('height', dimensions.height);\n         } else {\n            node.setAttribute('width', node.getAttribute('width') || '');\n            node.setAttribute('height', node.getAttribute('height') || '');\n         }\n         node.innerHTML = svg.innerHTML;\n      }\n   }\n   op();\n   return {\n      update(update) {\n         config = resolveConfig(update);\n         op();\n      },\n   };\n}\n\n/**\n * @package\n * @type {Required<import('./types').InlineSvgConfig>}\n */\nconst DEFAULT_INLINE_SVG_ACTION_CONFIG = {\n   src: '',\n   cache: 'no-cache',\n   autoDimensions: true,\n   transform: (svg) => svg,\n};\n\n/**\n * resolve the input parameters of `inlineSvg` action to an internally usable config\n * @package\n * @param {import('./types').InlineSvgParameter | undefined} param\n * @returns {Required<import('./types').InlineSvgConfig>}\n */\nfunction resolveConfig(param = '') {\n   if (typeof param === 'string') {\n      return {\n         ...DEFAULT_INLINE_SVG_ACTION_CONFIG,\n         src: param,\n      };\n   }\n\n   return {\n      ...DEFAULT_INLINE_SVG_ACTION_CONFIG,\n      ...param,\n   };\n}\n"],"names":[],"mappings":"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"}