{"version":3,"file":"index.js","sources":["../../../../src/svelte/action/dom/alwaysBlur.js","../../../../src/svelte/action/dom/resizeObserver.js","../../../../src/svelte/action/dom/applyScrolltop.js","../../../../src/svelte/action/dom/applyStyles.js","../../../../src/svelte/action/dom/autoBlur.js","../../../../src/svelte/action/dom/isFocused.js"],"sourcesContent":["/**\n * Provides an action to always blur the element when any pointer up event occurs on the element.\n *\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nexport function alwaysBlur(node)\n{\n   /**\n    * Blurs node if active element.\n    */\n   function blurNode()\n   {\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\n   }\n\n   node.addEventListener('pointerup', blurNode);\n\n   return {\n      destroy: () => node.removeEventListener('pointerup', blurNode)\n   };\n}\n","import { StyleParse }         from '#runtime/util/browser';\nimport { isObject }           from '#runtime/util/object';\nimport { isUpdatableStore }   from '#runtime/util/store';\n\n/**\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes directly set on target.\n * - target is a function; the function invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement}          node - The node associated with the action.\n *\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\n *\n * @returns {import('svelte/action').ActionReturn<ResizeObserverTarget>} The action lifecycle methods.\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\n */\nfunction resizeObserver(node, target)\n{\n   ResizeObserverManager.add(node, target);\n\n   return {\n      /**\n       * @param {ResizeObserverTarget} newTarget - An object or function to update with observed width & height changes.\n       */\n      update: (newTarget) =>\n      {\n         ResizeObserverManager.remove(node, target);\n         target = newTarget;\n         ResizeObserverManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         ResizeObserverManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - An HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\n\n   const subscribers = s_MAP.get(el);\n\n   if (Array.isArray(subscribers))\n   {\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n      for (const subscriber of subscribers)\n      {\n         subscriber.styles.additionalWidth = additionalWidth;\n         subscriber.styles.additionalHeight = additionalHeight;\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n      }\n   }\n};\n\nexport { resizeObserver };\n\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\n\nconst s_MAP = new Map();\n\n/**\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /**\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\n    * given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\n    */\n   static add(el, target)\n   {\n      const updateType = s_GET_UPDATE_TYPE(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (s_MAP.has(el))\n      {\n         const subscribers = s_MAP.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         s_MAP.set(el, [data]);\n      }\n\n      s_RESIZE_OBSERVER.observe(el);\n   }\n\n   /**\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\n    *\n    * @param {HTMLElement}          el - Element to remove from monitoring.\n    *\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\n    */\n   static remove(el, target = void 0)\n   {\n      const subscribers = s_MAP.get(el);\n      if (Array.isArray(subscribers))\n      {\n         const index = subscribers.findIndex((entry) => entry.target === target);\n         if (index >= 0)\n         {\n            // Update target subscriber with undefined values.\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\n\n            subscribers.splice(index, 1);\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            s_MAP.delete(el);\n            s_RESIZE_OBSERVER.unobserve(el);\n         }\n      }\n   }\n}\n\n/**\n * Defines the various shape / update type of the given target.\n *\n * @type {Record<string, number>}\n */\nconst s_UPDATE_TYPES = {\n   none: 0,\n   attribute: 1,\n   function: 2,\n   resizeObserved: 3,\n   setContentBounds: 4,\n   setDimension: 5,\n   storeObject: 6,\n   storesObject: 7\n};\n\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\n{\n   for (const entry of entries)\n   {\n      const subscribers = s_MAP.get(entry?.target);\n\n      if (Array.isArray(subscribers))\n      {\n         const contentWidth = entry.contentRect.width;\n         const contentHeight = entry.contentRect.height;\n\n         for (const subscriber of subscribers)\n         {\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\n         }\n      }\n   }\n});\n\n/**\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n *\n * @param {*}  target - The target instance.\n *\n * @returns {number} Update type value.\n */\nfunction s_GET_UPDATE_TYPE(target)\n{\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\n\n   const targetType = typeof target;\n\n   // Does the target have resizeObserved writable store?\n   if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n   {\n      if (isUpdatableStore(target.resizeObserved))\n      {\n         return s_UPDATE_TYPES.storeObject;\n      }\n\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\n      const stores = target?.stores;\n      if (isObject(stores) || typeof stores === 'function')\n      {\n         if (isUpdatableStore(stores.resizeObserved))\n         {\n            return s_UPDATE_TYPES.storesObject;\n         }\n      }\n   }\n\n   if (targetType !== null && targetType === 'object') { return s_UPDATE_TYPES.attribute; }\n\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\n\n   return s_UPDATE_TYPES.none;\n}\n\n/**\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n * the content values + cached styles.\n *\n * @param {object}            subscriber - Internal data about subscriber.\n *\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\n *\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\n */\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\n{\n   const styles = subscriber.styles;\n\n   subscriber.contentWidth = contentWidth;\n   subscriber.contentHeight = contentHeight;\n\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n   const target = subscriber.target;\n\n   switch (subscriber.updateType)\n   {\n      case s_UPDATE_TYPES.attribute:\n         target.contentWidth = contentWidth;\n         target.contentHeight = contentHeight;\n         target.offsetWidth = offsetWidth;\n         target.offsetHeight = offsetHeight;\n         break;\n\n      case s_UPDATE_TYPES.function:\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.resizeObserved:\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setContentBounds:\n         target.setContentBounds?.(contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setDimension:\n         target.setDimension?.(offsetWidth, offsetHeight);\n         break;\n\n      case s_UPDATE_TYPES.storeObject:\n         target.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n\n      case s_UPDATE_TYPES.storesObject:\n         target.stores.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n   }\n}\n\n/**\n * @typedef {(\n *    offsetWidth: number,\n *    offsetHeight: number,\n *    contentWidth: number,\n *    contentHeight: number\n * ) => void } ResizeObserverFunction A function that receives offset / content height & width.\n */\n\n/**\n * @typedef {ResizeObserverObject | ResizeObserverObjectExtended | ResizeObserverFunction} ResizeObserverTarget The\n *          receiving target for observed resize data.\n */\n\n/**\n * @typedef {object} ResizeObserverObject A direct object to update observed resize updates.\n *\n * @property {number} [contentHeight] Direct attribute to store contentHeight.\n *\n * @property {number} [contentWidth] Direct attribute to store contentWidth.\n *\n * @property {number} [offsetHeight] Direct attribute to store offsetHeight.\n *\n * @property {number} [offsetWidth] Direct attribute to store offsetWidth.\n */\n\n/**\n * @typedef {object} ResizeObserverObjectExtended Provides extended attributes supported for observed resize updates.\n *\n * @property {import('svelte/store').Writable<ResizeObserverObject> | ResizeObserverFunction} [resizedObserver] Either\n *           a function or a writable store.\n *\n * @property {(contentWidth: number, contentHeight: number) => void} [setContentBounds] - A function that is invoked\n *           with content width & height changes.\n *\n * @property {(offsetWidth: number, offsetHeight: number) => void} [setDimension] - A function that is invoked with\n *           offset width & height changes.\n *\n * @property {{resizedObserver: import('svelte/store').Writable<ResizeObserverObject>}} [stores] - An object with a\n *           `stores` attribute and subsequent `resizedObserver` writable store.\n */\n","import { Timing }          from '#runtime/util';\nimport { isWritableStore } from '#runtime/util/store';\n\nimport { resizeObserver }  from './resizeObserver.js';\n\n/**\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\n * useful for instance providing a select box that controls the scrollable container.\n *\n * @param {HTMLElement} element - The target scrollable HTML element.\n *\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\n *\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<number>>} Lifecycle functions.\n */\nexport function applyScrolltop(element, store)\n{\n   if (!isWritableStore(store))\n   {\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\n   }\n\n   /**\n    * Updates element `scrollTop`.\n    *\n    * @param {number}   value -\n    */\n   function storeUpdate(value)\n   {\n      if (!Number.isFinite(value)) { return; }\n\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\n      setTimeout(() => element.scrollTop = value, 0);\n   }\n\n   let unsubscribe = store.subscribe(storeUpdate);\n\n   const resizeControl = resizeObserver(element, Timing.debounce(() =>\n   {\n      if (element.isConnected) { store.set(element.scrollTop); }\n   }, 500));\n\n   /**\n    * Save target `scrollTop` to the current set store.\n    *\n    * @param {Event} event -\n    */\n   function onScroll(event)\n   {\n      store.set(event.target.scrollTop);\n   }\n\n   const debounceFn = Timing.debounce((e) => onScroll(e), 500);\n\n   element.addEventListener('scroll', debounceFn);\n\n   return {\n      /**\n       * @param {import('svelte/store').Writable<number>} newStore - A writable store that stores the element scrollTop.\n       */\n      update: (newStore) =>\n      {\n         unsubscribe();\n         store = newStore;\n\n         if (!isWritableStore(store))\n         {\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\n         }\n\n         unsubscribe = store.subscribe(storeUpdate);\n      },\n\n      destroy: () =>\n      {\n         element.removeEventListener('scroll', debounceFn);\n         unsubscribe();\n         resizeControl.destroy();\n      }\n   };\n}\n","import { isObject }  from '#runtime/util/object';\n\n/**\n * Provides an action to apply style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {Record<string, string>}  properties - Key / value object of properties to set.\n *\n * @returns {import('svelte/action').ActionReturn<Record<string, string>>} Lifecycle functions.\n */\nexport function applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (!isObject(properties)) { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      /**\n       * @param {Record<string, string>}  newProperties - Key / value object of properties to set.\n       */\n      update: (newProperties) =>\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n","/**\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\n *\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nexport function autoBlur(node)\n{\n   /**\n    * Removes listener on blur.\n    */\n   function onBlur() { document.body.removeEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Adds listener on focus.\n    */\n   function onFocus() { document.body.addEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Blur the node if a pointer down event happens outside the node.\n    *\n    * @param {PointerEvent} event -\n    */\n   function onPointerDown(event)\n   {\n      if (event.target === node || node.contains(event.target)) { return; }\n\n      if (document.activeElement === node) { node.blur(); }\n   }\n\n   node.addEventListener('blur', onBlur);\n   node.addEventListener('focus', onFocus);\n\n   return {\n      destroy: () =>\n      {\n         document.body.removeEventListener('pointerdown', onPointerDown);\n         node.removeEventListener('blur', onBlur);\n         node.removeEventListener('focus', onFocus);\n      }\n   };\n}\n","import { isWritableStore } from '#runtime/util/store';\n\n/**\n * Provides an action to monitor focus state of a given element and set an associated store with current focus state.\n *\n * This action is usable with any writable store.\n *\n * @param {HTMLElement} node - Target element.\n *\n * @param {import('svelte/store').Writable<boolean>}  storeFocused - Update store for focus changes.\n *\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<boolean>>} Lifecycle functions.\n */\nexport function isFocused(node, storeFocused)\n{\n   let localFocused = false;\n\n   /**\n    * Updates `storeFocused` w/ current focused state.\n    *\n    * @param {boolean}  current - current focused state.\n    */\n   function setFocused(current)\n   {\n      localFocused = current;\n\n      if (isWritableStore(storeFocused)) { storeFocused.set(localFocused); }\n   }\n\n   /**\n    * Focus event listener.\n    */\n   function onFocus()\n   {\n      setFocused(true);\n   }\n\n   /**\n    * Blur event listener.\n    */\n   function onBlur()\n   {\n      setFocused(false);\n   }\n\n   /**\n    * Activate listeners.\n    */\n   function activateListeners()\n   {\n      node.addEventListener('focus', onFocus);\n      node.addEventListener('blur', onBlur);\n   }\n\n   /**\n    * Remove listeners.\n    */\n   function removeListeners()\n   {\n      node.removeEventListener('focus', onFocus);\n      node.removeEventListener('blur', onBlur);\n   }\n\n   activateListeners();\n\n   return {\n      /**\n       * @param {import('svelte/store').Writable<boolean>}  newStoreFocused - Update store for focus changes.\n       */\n      update: (newStoreFocused) =>\n      {\n         storeFocused = newStoreFocused;\n         setFocused(localFocused);\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n"],"names":[],"mappings":"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"}