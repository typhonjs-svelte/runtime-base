{"version":3,"file":"index.js","sources":["../../../../src/svelte/action/dom/alwaysBlur.js","../../../../src/svelte/action/dom/resizeObserver.js","../../../../src/svelte/action/dom/applyScrolltop.js","../../../../src/svelte/action/dom/applyStyles.js","../../../../src/svelte/action/dom/autoBlur.js","../../../../src/svelte/action/dom/isFocused.js"],"sourcesContent":["/**\r\n * Provides an action to always blur the element when any pointer up event occurs on the element.\r\n *\r\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\r\n *\r\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\r\n */\r\nexport function alwaysBlur(node)\r\n{\r\n   /**\r\n    * Blurs node if active element.\r\n    */\r\n   function blurNode()\r\n   {\r\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\r\n   }\r\n\r\n   node.addEventListener('pointerup', blurNode);\r\n\r\n   return {\r\n      destroy: () => node.removeEventListener('pointerup', blurNode)\r\n   };\r\n}\r\n","import { ResizeObserverManager } from '#runtime/util/dom/observer/resize';\r\n\r\n/**\r\n * Provides a single global ResizeObserverManager instance for the resizeObserver action.\r\n *\r\n * @type {ResizeObserverManager}\r\n */\r\nconst resizeObserverActionManager = new ResizeObserverManager();\r\n\r\n/**\r\n * Provides an action to monitor the given {@link HTMLElement} node with {@link ResizeObserver} via\r\n * {@link ResizeObserverManager} posting width / height changes to the {@link ResizeObserverData.ResizeTarget} in\r\n * various ways depending on the shape of the target. The target can be one of the following and the\r\n * precedence order is listed from top to bottom:\r\n *\r\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\r\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\r\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\r\n * - target is an object; offset and content width / height attributes directly set on target.\r\n * - target is a function; the function invoked with offset then content width / height parameters.\r\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\r\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\r\n *   content width / height.\r\n *\r\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\r\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\r\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\r\n *\r\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\r\n *\r\n * @param {HTMLElement} node - The node associated with the action.\r\n *\r\n * @param {import('#runtime/util/dom/observer/resize').ResizeObserverData.ResizeTarget} target - A\r\n *        {@link ResizeObserverManager} target to update with observed width & height changes.\r\n *\r\n * @returns {(import('svelte/action').ActionReturn<\r\n *   import('#runtime/util/dom/observer/resize').ResizeObserverData.ResizeTarget\r\n * >)} The action lifecycle methods.\r\n *\r\n * @see https://github.com/sveltejs/svelte/issues/4233\r\n */\r\nfunction resizeObserver(node, target)\r\n{\r\n   resizeObserverActionManager.add(node, target);\r\n\r\n   return {\r\n      /**\r\n       * @param {import('#runtime/util/dom/observer/resize').ResizeObserverData.ResizeTarget} newTarget - A\r\n       *        {@link ResizeObserverManager} target to update with observed width & height changes.\r\n       */\r\n      update: (newTarget) =>\r\n      {\r\n         resizeObserverActionManager.remove(node, target);\r\n         target = newTarget;\r\n         resizeObserverActionManager.add(node, target);\r\n      },\r\n\r\n      destroy: () =>\r\n      {\r\n         resizeObserverActionManager.remove(node, target);\r\n      }\r\n   };\r\n}\r\n\r\n/**\r\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\r\n *\r\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\r\n * to update the cache if you change border or padding attributes of the element.\r\n *\r\n * @param {HTMLElement} el - A HTML element.\r\n */\r\nresizeObserver.updateCache = function(el)\r\n{\r\n   resizeObserverActionManager.updateCache(el);\r\n};\r\n\r\nexport { resizeObserver };\r\n","import { Timing }          from '#runtime/util';\r\nimport { isWritableStore } from '#runtime/util/store';\r\n\r\nimport { resizeObserver }  from './resizeObserver.js';\r\n\r\n/**\r\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\r\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\r\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\r\n * useful for instance providing a select box that controls the scrollable container.\r\n *\r\n * @param {HTMLElement} element - The target scrollable HTML element.\r\n *\r\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\r\n *\r\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<number>>} Lifecycle functions.\r\n */\r\nexport function applyScrolltop(element, store)\r\n{\r\n   if (!isWritableStore(store))\r\n   {\r\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\r\n   }\r\n\r\n   /**\r\n    * Updates element `scrollTop`.\r\n    *\r\n    * @param {number}   value -\r\n    */\r\n   function storeUpdate(value)\r\n   {\r\n      if (!Number.isFinite(value)) { return; }\r\n\r\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\r\n      setTimeout(() => element.scrollTop = value, 0);\r\n   }\r\n\r\n   let unsubscribe = store.subscribe(storeUpdate);\r\n\r\n   const resizeControl = resizeObserver(element, Timing.debounce(() =>\r\n   {\r\n      if (element.isConnected) { store.set(element.scrollTop); }\r\n   }, 500));\r\n\r\n   /**\r\n    * Save target `scrollTop` to the current set store.\r\n    *\r\n    * @param {Event} event -\r\n    */\r\n   function onScroll(event)\r\n   {\r\n      store.set(event.target.scrollTop);\r\n   }\r\n\r\n   const debounceFn = Timing.debounce((e) => onScroll(e), 500);\r\n\r\n   element.addEventListener('scroll', debounceFn);\r\n\r\n   return {\r\n      /**\r\n       * @param {import('svelte/store').Writable<number>} newStore - A writable store that stores the element scrollTop.\r\n       */\r\n      update: (newStore) =>\r\n      {\r\n         unsubscribe();\r\n         store = newStore;\r\n\r\n         if (!isWritableStore(store))\r\n         {\r\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\r\n         }\r\n\r\n         unsubscribe = store.subscribe(storeUpdate);\r\n      },\r\n\r\n      destroy: () =>\r\n      {\r\n         element.removeEventListener('scroll', debounceFn);\r\n         unsubscribe();\r\n         resizeControl.destroy();\r\n      }\r\n   };\r\n}\r\n","import { isObject }  from '#runtime/util/object';\r\n\r\n/**\r\n * Provides an action to apply style properties provided as an object.\r\n *\r\n * @param {HTMLElement} node - Target element\r\n *\r\n * @param {Record<string, string>}  properties - Key / value object of properties to set.\r\n *\r\n * @returns {import('svelte/action').ActionReturn<Record<string, string>>} Lifecycle functions.\r\n */\r\nexport function applyStyles(node, properties)\r\n{\r\n   /** Sets properties on node. */\r\n   function setProperties()\r\n   {\r\n      if (!isObject(properties)) { return; }\r\n\r\n      for (const prop of Object.keys(properties))\r\n      {\r\n         node.style.setProperty(`${prop}`, properties[prop]);\r\n      }\r\n   }\r\n\r\n   setProperties();\r\n\r\n   return {\r\n      /**\r\n       * @param {Record<string, string>}  newProperties - Key / value object of properties to set.\r\n       */\r\n      update: (newProperties) =>\r\n      {\r\n         properties = newProperties;\r\n         setProperties();\r\n      }\r\n   };\r\n}\r\n","/**\r\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\r\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\r\n *\r\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\r\n *\r\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\r\n */\r\nexport function autoBlur(node)\r\n{\r\n   /**\r\n    * Removes listener on blur.\r\n    */\r\n   function onBlur() { document.body.removeEventListener('pointerdown', onPointerDown); }\r\n\r\n   /**\r\n    * Adds listener on focus.\r\n    */\r\n   function onFocus() { document.body.addEventListener('pointerdown', onPointerDown); }\r\n\r\n   /**\r\n    * Blur the node if a pointer down event happens outside the node.\r\n    *\r\n    * @param {PointerEvent} event -\r\n    */\r\n   function onPointerDown(event)\r\n   {\r\n      if (event.target === node || node.contains(event.target)) { return; }\r\n\r\n      if (document.activeElement === node) { node.blur(); }\r\n   }\r\n\r\n   node.addEventListener('blur', onBlur);\r\n   node.addEventListener('focus', onFocus);\r\n\r\n   return {\r\n      destroy: () =>\r\n      {\r\n         document.body.removeEventListener('pointerdown', onPointerDown);\r\n         node.removeEventListener('blur', onBlur);\r\n         node.removeEventListener('focus', onFocus);\r\n      }\r\n   };\r\n}\r\n","import { isWritableStore } from '#runtime/util/store';\r\n\r\n/**\r\n * Provides an action to monitor focus state of a given element and set an associated store with current focus state.\r\n *\r\n * This action is usable with any writable store.\r\n *\r\n * @param {HTMLElement} node - Target element.\r\n *\r\n * @param {import('svelte/store').Writable<boolean>}  storeFocused - Update store for focus changes.\r\n *\r\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<boolean>>} Lifecycle functions.\r\n */\r\nexport function isFocused(node, storeFocused)\r\n{\r\n   let localFocused = false;\r\n\r\n   /**\r\n    * Updates `storeFocused` w/ current focused state.\r\n    *\r\n    * @param {boolean}  current - current focused state.\r\n    */\r\n   function setFocused(current)\r\n   {\r\n      localFocused = current;\r\n\r\n      if (isWritableStore(storeFocused)) { storeFocused.set(localFocused); }\r\n   }\r\n\r\n   /**\r\n    * Focus event listener.\r\n    */\r\n   function onFocus()\r\n   {\r\n      setFocused(true);\r\n   }\r\n\r\n   /**\r\n    * Blur event listener.\r\n    */\r\n   function onBlur()\r\n   {\r\n      setFocused(false);\r\n   }\r\n\r\n   /**\r\n    * Activate listeners.\r\n    */\r\n   function activateListeners()\r\n   {\r\n      node.addEventListener('focus', onFocus);\r\n      node.addEventListener('blur', onBlur);\r\n   }\r\n\r\n   /**\r\n    * Remove listeners.\r\n    */\r\n   function removeListeners()\r\n   {\r\n      node.removeEventListener('focus', onFocus);\r\n      node.removeEventListener('blur', onBlur);\r\n   }\r\n\r\n   activateListeners();\r\n\r\n   return {\r\n      /**\r\n       * @param {import('svelte/store').Writable<boolean>}  newStoreFocused - Update store for focus changes.\r\n       */\r\n      update: (newStoreFocused) =>\r\n      {\r\n         storeFocused = newStoreFocused;\r\n         setFocused(localFocused);\r\n      },\r\n\r\n      destroy: () => removeListeners()\r\n   };\r\n}\r\n"],"names":[],"mappings":"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"}